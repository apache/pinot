{
  "tableName": "githubEvents",
  "tableType": "REALTIME",
  "segmentsConfig": {
    "timeColumnName": "created_at_timestamp",
    "retentionTimeUnit": "DAYS",
    "retentionTimeValue": "365",
    "segmentPushType": "APPEND",
    "segmentAssignmentStrategy": "BalanceNumSegmentAssignmentStrategy",
    "schemaName": "githubEvents",
    "replication": "1",
    "replicasPerPartition": "1"
  },
  "tenants": {
  },
  "ingestionConfig": {
    "transformConfigs": [
      {
        "columnName": "created_at_timestamp",
        "transformFunction": "fromDateTime(created_at, 'yyyy-MM-dd''T''HH:mm:ssZ')"
      }
    ]
  },
  "tableIndexConfig": {
    "loadMode": "MMAP",
    "invertedIndexColumns": [
      "id"
    ],
    "segmentNameGeneratorType": "normalizedDate",
    "streamConfigs": {
      "streamType": "kafka",
      "stream.kafka.consumer.type": "simple",
      "stream.kafka.topic.name": "githubEvents",
      "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
      "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
      "stream.kafka.zk.broker.url": "localhost:2191/kafka",
      "stream.kafka.broker.list": "localhost:19092",
      "realtime.segment.flush.threshold.time": "1h",
      "realtime.segment.flush.threshold.size": "100",
      "stream.kafka.consumer.prop.auto.offset.reset": "smallest"
    }
  },
  "task": {
    "taskTypeConfigsMap": {
      "RealtimeToOfflineSegmentsTask": {
        "bucketTimePeriod": "1h",
        "bufferTimePeriod": "1h",
        "schedule": "0 * * * * ?"
      }
    }
  },
  "metadata": {
    "customConfigs": {
    }
  }
}
