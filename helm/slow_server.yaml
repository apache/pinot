apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: pinot
    meta.helm.sh/release-namespace: pinot-quickstart
  creationTimestamp: "2025-01-06T10:23:30Z"
  generation: 1
  labels:
    app: pinot
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 1.0.0
    component: server
    helm.sh/chart: pinot-0.3.1-SNAPSHOT
    heritage: Helm
    release: pinot
  name: pinot-server-2
  namespace: pinot-quickstart
  resourceVersion: "23571"
  uid: 4b5b7c57-a4b9-417d-94af-46fc403dde69
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pinot
      component: server
      release: pinot
  serviceName: pinot-server-headless
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: pinot
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: 1.0.0
        component: server
        helm.sh/chart: pinot-0.3.1-SNAPSHOT
        heritage: Helm
        release: pinot
    spec:
      affinity: {}
      containers:
      - args:
        - StartServer
        - -clusterName
        - pinot-quickstart
        - -zkAddress
        - pinot-zookeeper:2181
        - -configFileName
        - /var/pinot/server/config/pinot-server.conf
        env:
        - name: JAVA_OPTS
          value: -Xms512M -Xmx1G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xlog:gc*:file=/opt/pinot/gc-pinot-server.log
            -Dlog4j2.configurationFile=/opt/pinot/etc/conf/pinot-server-log4j2.xml
            -Dplugins.dir=/opt/pinot/plugins
        - name: LOG4J_CONSOLE_LEVEL
          value: info
        image: pinot:inject_22
        imagePullPolicy: IfNotPresent
        name: server
        ports:
        - containerPort: 8098
          name: netty
          protocol: TCP
        - containerPort: 8097
          name: admin
          protocol: TCP
        resources:
          requests:
            memory: 1280Mi
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/pinot/server/config
          name: config
        - mountPath: /var/pinot/server/data
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: pinot
      serviceAccountName: pinot
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: pinot-server-config
        name: config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 4G
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 1
  currentRevision: pinot-server-5b4f56b7d6
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: pinot-server-5b4f56b7d6
  updatedReplicas: 1
