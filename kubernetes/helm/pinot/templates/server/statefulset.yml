#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pinot.server.fullname" . }}
  labels:
    app: {{ include "pinot.name" . }}
    chart: {{ include "pinot.chart" . }}
    component: {{ .Values.server.name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "pinot.name" . }}
      release: {{ .Release.Name }}
      component: {{ .Values.server.name }}
  serviceName: {{ template "pinot.server.headless" . }}
  replicas: {{ .Values.server.replicaCount }}
  updateStrategy:
    type: {{ .Values.server.updateStrategy.type }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ include "pinot.name" . }}
        release: {{ .Release.Name }}
        component: {{ .Values.server.name }}
      annotations:
{{ toYaml .Values.server.podAnnotations | indent 8 }}
    spec:
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.server.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.server.tolerations | indent 8 }}
      containers:
      - name: server
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: [
          "StartServer",
          "-clusterName", "{{ .Values.cluster.name }}",
          "-zkAddress", {{ include "zookeeper.url" . | quote }},
          "-configFileName", "/var/pinot/server/config/pinot-server.conf"
        ]
        env:
          - name: JAVA_OPTS
            value: "{{ .Values.server.jvmOpts }} -Dlog4j2.configurationFile={{ .Values.server.log4j2ConfFile }} -Dplugins.dir={{ .Values.server.pluginsDir }}"
        ports:
          - containerPort: {{ .Values.server.ports.netty }}
            protocol: TCP
          - containerPort: {{ .Values.server.ports.admin }}
            protocol: TCP
        volumeMounts:
          - name: config
            mountPath: /var/pinot/server/config
          - name: data
            mountPath: "{{ .Values.server.persistence.mountPath }}"
        resources:
{{ toYaml .Values.server.resources | indent 12 }}
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: {{ include "pinot.server.config" . }}
      {{- if not .Values.server.persistence.enabled }}
        - name: data
          emptyDir: {}
      {{- end }}

  {{- if .Values.server.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.server.persistence.accessMode | quote }}
        {{- if .Values.server.persistence.storageClass }}
        {{- if (eq "-" .Values.server.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.server.persistence.storageClass }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.server.persistence.size }}
  {{ end }}
