/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: complex_types.proto

package org.apache.pinot.plugin.inputformat.protobuf;

public final class ComplexTypes {
  private ComplexTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.pinot.plugin.inputformat.protobuf.TestMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string string_field = 1;</code>
     * @return The stringField.
     */
    java.lang.String getStringField();
    /**
     * <code>string string_field = 1;</code>
     * @return The bytes for stringField.
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>int32 int_field = 2;</code>
     * @return The intField.
     */
    int getIntField();

    /**
     * <code>int64 long_field = 3;</code>
     * @return The longField.
     */
    long getLongField();

    /**
     * <code>double double_field = 4;</code>
     * @return The doubleField.
     */
    double getDoubleField();

    /**
     * <code>float float_field = 5;</code>
     * @return The floatField.
     */
    float getFloatField();

    /**
     * <code>bool bool_field = 6;</code>
     * @return The boolField.
     */
    boolean getBoolField();

    /**
     * <code>bytes bytes_field = 7;</code>
     * @return The bytesField.
     */
    com.google.protobuf.ByteString getBytesField();

    /**
     * <code>repeated string repeated_strings = 8;</code>
     * @return A list containing the repeatedStrings.
     */
    java.util.List<java.lang.String>
        getRepeatedStringsList();
    /**
     * <code>repeated string repeated_strings = 8;</code>
     * @return The count of repeatedStrings.
     */
    int getRepeatedStringsCount();
    /**
     * <code>repeated string repeated_strings = 8;</code>
     * @param index The index of the element to return.
     * @return The repeatedStrings at the given index.
     */
    java.lang.String getRepeatedStrings(int index);
    /**
     * <code>repeated string repeated_strings = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the repeatedStrings at the given index.
     */
    com.google.protobuf.ByteString
        getRepeatedStringsBytes(int index);

    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
     * @return Whether the nestedMessage field is set.
     */
    boolean hasNestedMessage();
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
     * @return The nestedMessage.
     */
    org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getNestedMessage();
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
     */
    org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder getNestedMessageOrBuilder();

    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    java.util.List<org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> 
        getRepeatedNestedMessagesList();
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getRepeatedNestedMessages(int index);
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    int getRepeatedNestedMessagesCount();
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    java.util.List<? extends org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder> 
        getRepeatedNestedMessagesOrBuilderList();
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder getRepeatedNestedMessagesOrBuilder(
        int index);

    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */
    int getComplexMapCount();
    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */
    boolean containsComplexMap(
        java.lang.String key);
    /**
     * Use {@link #getComplexMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>
    getComplexMap();
    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */
    java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>
    getComplexMapMap();
    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */

    org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getComplexMapOrDefault(
        java.lang.String key,
        org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage defaultValue);
    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */

    org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getComplexMapOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */
    int getSimpleMapCount();
    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */
    boolean containsSimpleMap(
        java.lang.String key);
    /**
     * Use {@link #getSimpleMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getSimpleMap();
    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getSimpleMapMap();
    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */

    int getSimpleMapOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */

    int getSimpleMapOrThrow(
        java.lang.String key);

    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
     * @return The enum numeric value on the wire for enumField.
     */
    int getEnumFieldValue();
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
     * @return The enumField.
     */
    org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum getEnumField();
  }
  /**
   * Protobuf type {@code org.apache.pinot.plugin.inputformat.protobuf.TestMessage}
   */
  public static final class TestMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.pinot.plugin.inputformat.protobuf.TestMessage)
      TestMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMessage.newBuilder() to construct.
    private TestMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMessage() {
      stringField_ = "";
      bytesField_ = com.google.protobuf.ByteString.EMPTY;
      repeatedStrings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      repeatedNestedMessages_ = java.util.Collections.emptyList();
      enumField_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              stringField_ = s;
              break;
            }
            case 16: {

              intField_ = input.readInt32();
              break;
            }
            case 24: {

              longField_ = input.readInt64();
              break;
            }
            case 33: {

              doubleField_ = input.readDouble();
              break;
            }
            case 45: {

              floatField_ = input.readFloat();
              break;
            }
            case 48: {

              boolField_ = input.readBool();
              break;
            }
            case 58: {

              bytesField_ = input.readBytes();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                repeatedStrings_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              repeatedStrings_.add(s);
              break;
            }
            case 74: {
              org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder subBuilder = null;
              if (nestedMessage_ != null) {
                subBuilder = nestedMessage_.toBuilder();
              }
              nestedMessage_ = input.readMessage(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nestedMessage_);
                nestedMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                repeatedNestedMessages_ = new java.util.ArrayList<org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>();
                mutable_bitField0_ |= 0x00000002;
              }
              repeatedNestedMessages_.add(
                  input.readMessage(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                complexMap_ = com.google.protobuf.MapField.newMapField(
                    ComplexMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>
              complexMap__ = input.readMessage(
                  ComplexMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              complexMap_.getMutableMap().put(
                  complexMap__.getKey(), complexMap__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                simpleMap_ = com.google.protobuf.MapField.newMapField(
                    SimpleMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              simpleMap__ = input.readMessage(
                  SimpleMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              simpleMap_.getMutableMap().put(
                  simpleMap__.getKey(), simpleMap__.getValue());
              break;
            }
            case 120: {
              int rawValue = input.readEnum();

              enumField_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          repeatedStrings_ = repeatedStrings_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          repeatedNestedMessages_ = java.util.Collections.unmodifiableList(repeatedNestedMessages_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetComplexMap();
        case 12:
          return internalGetSimpleMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.class, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum}
     */
    public enum TestEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ALPHA = 0;</code>
       */
      ALPHA(0),
      /**
       * <code>BETA = 1;</code>
       */
      BETA(1),
      /**
       * <code>GAMMA = 2;</code>
       */
      GAMMA(2),
      /**
       * <code>DELTA = 3;</code>
       */
      DELTA(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ALPHA = 0;</code>
       */
      public static final int ALPHA_VALUE = 0;
      /**
       * <code>BETA = 1;</code>
       */
      public static final int BETA_VALUE = 1;
      /**
       * <code>GAMMA = 2;</code>
       */
      public static final int GAMMA_VALUE = 2;
      /**
       * <code>DELTA = 3;</code>
       */
      public static final int DELTA_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TestEnum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TestEnum forNumber(int value) {
        switch (value) {
          case 0: return ALPHA;
          case 1: return BETA;
          case 2: return GAMMA;
          case 3: return DELTA;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TestEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TestEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TestEnum>() {
              public TestEnum findValueByNumber(int number) {
                return TestEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final TestEnum[] VALUES = values();

      public static TestEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TestEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum)
    }

    public interface NestedMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string nested_string_field = 1;</code>
       * @return The nestedStringField.
       */
      java.lang.String getNestedStringField();
      /**
       * <code>string nested_string_field = 1;</code>
       * @return The bytes for nestedStringField.
       */
      com.google.protobuf.ByteString
          getNestedStringFieldBytes();

      /**
       * <code>int32 nested_int_field = 2;</code>
       * @return The nestedIntField.
       */
      int getNestedIntField();
    }
    /**
     * Protobuf type {@code org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage}
     */
    public static final class NestedMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage)
        NestedMessageOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use NestedMessage.newBuilder() to construct.
      private NestedMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private NestedMessage() {
        nestedStringField_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new NestedMessage();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private NestedMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                nestedStringField_ = s;
                break;
              }
              case 16: {

                nestedIntField_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.class, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder.class);
      }

      public static final int NESTED_STRING_FIELD_FIELD_NUMBER = 1;
      private volatile java.lang.Object nestedStringField_;
      /**
       * <code>string nested_string_field = 1;</code>
       * @return The nestedStringField.
       */
      @java.lang.Override
      public java.lang.String getNestedStringField() {
        java.lang.Object ref = nestedStringField_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nestedStringField_ = s;
          return s;
        }
      }
      /**
       * <code>string nested_string_field = 1;</code>
       * @return The bytes for nestedStringField.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNestedStringFieldBytes() {
        java.lang.Object ref = nestedStringField_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nestedStringField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int NESTED_INT_FIELD_FIELD_NUMBER = 2;
      private int nestedIntField_;
      /**
       * <code>int32 nested_int_field = 2;</code>
       * @return The nestedIntField.
       */
      @java.lang.Override
      public int getNestedIntField() {
        return nestedIntField_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNestedStringFieldBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nestedStringField_);
        }
        if (nestedIntField_ != 0) {
          output.writeInt32(2, nestedIntField_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNestedStringFieldBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nestedStringField_);
        }
        if (nestedIntField_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, nestedIntField_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage)) {
          return super.equals(obj);
        }
        org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage other = (org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage) obj;

        if (!getNestedStringField()
            .equals(other.getNestedStringField())) return false;
        if (getNestedIntField()
            != other.getNestedIntField()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NESTED_STRING_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getNestedStringField().hashCode();
        hash = (37 * hash) + NESTED_INT_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getNestedIntField();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage)
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.class, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder.class);
        }

        // Construct using org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          nestedStringField_ = "";

          nestedIntField_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_descriptor;
        }

        @java.lang.Override
        public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getDefaultInstanceForType() {
          return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage build() {
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage buildPartial() {
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage result = new org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage(this);
          result.nestedStringField_ = nestedStringField_;
          result.nestedIntField_ = nestedIntField_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage) {
            return mergeFrom((org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage other) {
          if (other == org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.getDefaultInstance()) return this;
          if (!other.getNestedStringField().isEmpty()) {
            nestedStringField_ = other.nestedStringField_;
            onChanged();
          }
          if (other.getNestedIntField() != 0) {
            setNestedIntField(other.getNestedIntField());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object nestedStringField_ = "";
        /**
         * <code>string nested_string_field = 1;</code>
         * @return The nestedStringField.
         */
        public java.lang.String getNestedStringField() {
          java.lang.Object ref = nestedStringField_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            nestedStringField_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string nested_string_field = 1;</code>
         * @return The bytes for nestedStringField.
         */
        public com.google.protobuf.ByteString
            getNestedStringFieldBytes() {
          java.lang.Object ref = nestedStringField_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            nestedStringField_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string nested_string_field = 1;</code>
         * @param value The nestedStringField to set.
         * @return This builder for chaining.
         */
        public Builder setNestedStringField(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          nestedStringField_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string nested_string_field = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearNestedStringField() {
          
          nestedStringField_ = getDefaultInstance().getNestedStringField();
          onChanged();
          return this;
        }
        /**
         * <code>string nested_string_field = 1;</code>
         * @param value The bytes for nestedStringField to set.
         * @return This builder for chaining.
         */
        public Builder setNestedStringFieldBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          nestedStringField_ = value;
          onChanged();
          return this;
        }

        private int nestedIntField_ ;
        /**
         * <code>int32 nested_int_field = 2;</code>
         * @return The nestedIntField.
         */
        @java.lang.Override
        public int getNestedIntField() {
          return nestedIntField_;
        }
        /**
         * <code>int32 nested_int_field = 2;</code>
         * @param value The nestedIntField to set.
         * @return This builder for chaining.
         */
        public Builder setNestedIntField(int value) {
          
          nestedIntField_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 nested_int_field = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNestedIntField() {
          
          nestedIntField_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage)
      }

      // @@protoc_insertion_point(class_scope:org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage)
      private static final org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage();
      }

      public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<NestedMessage>
          PARSER = new com.google.protobuf.AbstractParser<NestedMessage>() {
        @java.lang.Override
        public NestedMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NestedMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<NestedMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<NestedMessage> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int STRING_FIELD_FIELD_NUMBER = 1;
    private volatile java.lang.Object stringField_;
    /**
     * <code>string string_field = 1;</code>
     * @return The stringField.
     */
    @java.lang.Override
    public java.lang.String getStringField() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringField_ = s;
        return s;
      }
    }
    /**
     * <code>string string_field = 1;</code>
     * @return The bytes for stringField.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INT_FIELD_FIELD_NUMBER = 2;
    private int intField_;
    /**
     * <code>int32 int_field = 2;</code>
     * @return The intField.
     */
    @java.lang.Override
    public int getIntField() {
      return intField_;
    }

    public static final int LONG_FIELD_FIELD_NUMBER = 3;
    private long longField_;
    /**
     * <code>int64 long_field = 3;</code>
     * @return The longField.
     */
    @java.lang.Override
    public long getLongField() {
      return longField_;
    }

    public static final int DOUBLE_FIELD_FIELD_NUMBER = 4;
    private double doubleField_;
    /**
     * <code>double double_field = 4;</code>
     * @return The doubleField.
     */
    @java.lang.Override
    public double getDoubleField() {
      return doubleField_;
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 5;
    private float floatField_;
    /**
     * <code>float float_field = 5;</code>
     * @return The floatField.
     */
    @java.lang.Override
    public float getFloatField() {
      return floatField_;
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 6;
    private boolean boolField_;
    /**
     * <code>bool bool_field = 6;</code>
     * @return The boolField.
     */
    @java.lang.Override
    public boolean getBoolField() {
      return boolField_;
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString bytesField_;
    /**
     * <code>bytes bytes_field = 7;</code>
     * @return The bytesField.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytesField() {
      return bytesField_;
    }

    public static final int REPEATED_STRINGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList repeatedStrings_;
    /**
     * <code>repeated string repeated_strings = 8;</code>
     * @return A list containing the repeatedStrings.
     */
    public com.google.protobuf.ProtocolStringList
        getRepeatedStringsList() {
      return repeatedStrings_;
    }
    /**
     * <code>repeated string repeated_strings = 8;</code>
     * @return The count of repeatedStrings.
     */
    public int getRepeatedStringsCount() {
      return repeatedStrings_.size();
    }
    /**
     * <code>repeated string repeated_strings = 8;</code>
     * @param index The index of the element to return.
     * @return The repeatedStrings at the given index.
     */
    public java.lang.String getRepeatedStrings(int index) {
      return repeatedStrings_.get(index);
    }
    /**
     * <code>repeated string repeated_strings = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the repeatedStrings at the given index.
     */
    public com.google.protobuf.ByteString
        getRepeatedStringsBytes(int index) {
      return repeatedStrings_.getByteString(index);
    }

    public static final int NESTED_MESSAGE_FIELD_NUMBER = 9;
    private org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage nestedMessage_;
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
     * @return Whether the nestedMessage field is set.
     */
    @java.lang.Override
    public boolean hasNestedMessage() {
      return nestedMessage_ != null;
    }
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
     * @return The nestedMessage.
     */
    @java.lang.Override
    public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getNestedMessage() {
      return nestedMessage_ == null ? org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.getDefaultInstance() : nestedMessage_;
    }
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
     */
    @java.lang.Override
    public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder getNestedMessageOrBuilder() {
      return getNestedMessage();
    }

    public static final int REPEATED_NESTED_MESSAGES_FIELD_NUMBER = 10;
    private java.util.List<org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> repeatedNestedMessages_;
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> getRepeatedNestedMessagesList() {
      return repeatedNestedMessages_;
    }
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder> 
        getRepeatedNestedMessagesOrBuilderList() {
      return repeatedNestedMessages_;
    }
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    @java.lang.Override
    public int getRepeatedNestedMessagesCount() {
      return repeatedNestedMessages_.size();
    }
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    @java.lang.Override
    public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getRepeatedNestedMessages(int index) {
      return repeatedNestedMessages_.get(index);
    }
    /**
     * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
     */
    @java.lang.Override
    public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder getRepeatedNestedMessagesOrBuilder(
        int index) {
      return repeatedNestedMessages_.get(index);
    }

    public static final int COMPLEX_MAP_FIELD_NUMBER = 11;
    private static final class ComplexMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>newDefaultInstance(
                  org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_ComplexMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> complexMap_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>
    internalGetComplexMap() {
      if (complexMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ComplexMapDefaultEntryHolder.defaultEntry);
      }
      return complexMap_;
    }

    public int getComplexMapCount() {
      return internalGetComplexMap().getMap().size();
    }
    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */

    @java.lang.Override
    public boolean containsComplexMap(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetComplexMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getComplexMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> getComplexMap() {
      return getComplexMapMap();
    }
    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> getComplexMapMap() {
      return internalGetComplexMap().getMap();
    }
    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */
    @java.lang.Override

    public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getComplexMapOrDefault(
        java.lang.String key,
        org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> map =
          internalGetComplexMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
     */
    @java.lang.Override

    public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getComplexMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> map =
          internalGetComplexMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SIMPLE_MAP_FIELD_NUMBER = 12;
    private static final class SimpleMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_SimpleMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> simpleMap_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetSimpleMap() {
      if (simpleMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SimpleMapDefaultEntryHolder.defaultEntry);
      }
      return simpleMap_;
    }

    public int getSimpleMapCount() {
      return internalGetSimpleMap().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */

    @java.lang.Override
    public boolean containsSimpleMap(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetSimpleMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSimpleMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getSimpleMap() {
      return getSimpleMapMap();
    }
    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getSimpleMapMap() {
      return internalGetSimpleMap().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */
    @java.lang.Override

    public int getSimpleMapOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetSimpleMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; simple_map = 12;</code>
     */
    @java.lang.Override

    public int getSimpleMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetSimpleMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ENUM_FIELD_FIELD_NUMBER = 15;
    private int enumField_;
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
     * @return The enum numeric value on the wire for enumField.
     */
    @java.lang.Override public int getEnumFieldValue() {
      return enumField_;
    }
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
     * @return The enumField.
     */
    @java.lang.Override public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum getEnumField() {
      @SuppressWarnings("deprecation")
      org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum result = org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum.valueOf(enumField_);
      return result == null ? org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getStringFieldBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, stringField_);
      }
      if (intField_ != 0) {
        output.writeInt32(2, intField_);
      }
      if (longField_ != 0L) {
        output.writeInt64(3, longField_);
      }
      if (doubleField_ != 0D) {
        output.writeDouble(4, doubleField_);
      }
      if (floatField_ != 0F) {
        output.writeFloat(5, floatField_);
      }
      if (boolField_ != false) {
        output.writeBool(6, boolField_);
      }
      if (!bytesField_.isEmpty()) {
        output.writeBytes(7, bytesField_);
      }
      for (int i = 0; i < repeatedStrings_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, repeatedStrings_.getRaw(i));
      }
      if (nestedMessage_ != null) {
        output.writeMessage(9, getNestedMessage());
      }
      for (int i = 0; i < repeatedNestedMessages_.size(); i++) {
        output.writeMessage(10, repeatedNestedMessages_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetComplexMap(),
          ComplexMapDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetSimpleMap(),
          SimpleMapDefaultEntryHolder.defaultEntry,
          12);
      if (enumField_ != org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum.ALPHA.getNumber()) {
        output.writeEnum(15, enumField_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getStringFieldBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, stringField_);
      }
      if (intField_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, intField_);
      }
      if (longField_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, longField_);
      }
      if (doubleField_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, doubleField_);
      }
      if (floatField_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, floatField_);
      }
      if (boolField_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, boolField_);
      }
      if (!bytesField_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, bytesField_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedStrings_.size(); i++) {
          dataSize += computeStringSizeNoTag(repeatedStrings_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRepeatedStringsList().size();
      }
      if (nestedMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getNestedMessage());
      }
      for (int i = 0; i < repeatedNestedMessages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, repeatedNestedMessages_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> entry
           : internalGetComplexMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>
        complexMap__ = ComplexMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, complexMap__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetSimpleMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        simpleMap__ = SimpleMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, simpleMap__);
      }
      if (enumField_ != org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum.ALPHA.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, enumField_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage)) {
        return super.equals(obj);
      }
      org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage other = (org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage) obj;

      if (!getStringField()
          .equals(other.getStringField())) return false;
      if (getIntField()
          != other.getIntField()) return false;
      if (getLongField()
          != other.getLongField()) return false;
      if (java.lang.Double.doubleToLongBits(getDoubleField())
          != java.lang.Double.doubleToLongBits(
              other.getDoubleField())) return false;
      if (java.lang.Float.floatToIntBits(getFloatField())
          != java.lang.Float.floatToIntBits(
              other.getFloatField())) return false;
      if (getBoolField()
          != other.getBoolField()) return false;
      if (!getBytesField()
          .equals(other.getBytesField())) return false;
      if (!getRepeatedStringsList()
          .equals(other.getRepeatedStringsList())) return false;
      if (hasNestedMessage() != other.hasNestedMessage()) return false;
      if (hasNestedMessage()) {
        if (!getNestedMessage()
            .equals(other.getNestedMessage())) return false;
      }
      if (!getRepeatedNestedMessagesList()
          .equals(other.getRepeatedNestedMessagesList())) return false;
      if (!internalGetComplexMap().equals(
          other.internalGetComplexMap())) return false;
      if (!internalGetSimpleMap().equals(
          other.internalGetSimpleMap())) return false;
      if (enumField_ != other.enumField_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STRING_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getStringField().hashCode();
      hash = (37 * hash) + INT_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getIntField();
      hash = (37 * hash) + LONG_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLongField());
      hash = (37 * hash) + DOUBLE_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDoubleField()));
      hash = (37 * hash) + FLOAT_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFloatField());
      hash = (37 * hash) + BOOL_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBoolField());
      hash = (37 * hash) + BYTES_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getBytesField().hashCode();
      if (getRepeatedStringsCount() > 0) {
        hash = (37 * hash) + REPEATED_STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedStringsList().hashCode();
      }
      if (hasNestedMessage()) {
        hash = (37 * hash) + NESTED_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getNestedMessage().hashCode();
      }
      if (getRepeatedNestedMessagesCount() > 0) {
        hash = (37 * hash) + REPEATED_NESTED_MESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedNestedMessagesList().hashCode();
      }
      if (!internalGetComplexMap().getMap().isEmpty()) {
        hash = (37 * hash) + COMPLEX_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetComplexMap().hashCode();
      }
      if (!internalGetSimpleMap().getMap().isEmpty()) {
        hash = (37 * hash) + SIMPLE_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSimpleMap().hashCode();
      }
      hash = (37 * hash) + ENUM_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + enumField_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.pinot.plugin.inputformat.protobuf.TestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.pinot.plugin.inputformat.protobuf.TestMessage)
        org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetComplexMap();
          case 12:
            return internalGetSimpleMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMutableComplexMap();
          case 12:
            return internalGetMutableSimpleMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.class, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.Builder.class);
      }

      // Construct using org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRepeatedNestedMessagesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stringField_ = "";

        intField_ = 0;

        longField_ = 0L;

        doubleField_ = 0D;

        floatField_ = 0F;

        boolField_ = false;

        bytesField_ = com.google.protobuf.ByteString.EMPTY;

        repeatedStrings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (nestedMessageBuilder_ == null) {
          nestedMessage_ = null;
        } else {
          nestedMessage_ = null;
          nestedMessageBuilder_ = null;
        }
        if (repeatedNestedMessagesBuilder_ == null) {
          repeatedNestedMessages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          repeatedNestedMessagesBuilder_.clear();
        }
        internalGetMutableComplexMap().clear();
        internalGetMutableSimpleMap().clear();
        enumField_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor;
      }

      @java.lang.Override
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage getDefaultInstanceForType() {
        return org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage build() {
        org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage buildPartial() {
        org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage result = new org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage(this);
        int from_bitField0_ = bitField0_;
        result.stringField_ = stringField_;
        result.intField_ = intField_;
        result.longField_ = longField_;
        result.doubleField_ = doubleField_;
        result.floatField_ = floatField_;
        result.boolField_ = boolField_;
        result.bytesField_ = bytesField_;
        if (((bitField0_ & 0x00000001) != 0)) {
          repeatedStrings_ = repeatedStrings_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.repeatedStrings_ = repeatedStrings_;
        if (nestedMessageBuilder_ == null) {
          result.nestedMessage_ = nestedMessage_;
        } else {
          result.nestedMessage_ = nestedMessageBuilder_.build();
        }
        if (repeatedNestedMessagesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            repeatedNestedMessages_ = java.util.Collections.unmodifiableList(repeatedNestedMessages_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.repeatedNestedMessages_ = repeatedNestedMessages_;
        } else {
          result.repeatedNestedMessages_ = repeatedNestedMessagesBuilder_.build();
        }
        result.complexMap_ = internalGetComplexMap();
        result.complexMap_.makeImmutable();
        result.simpleMap_ = internalGetSimpleMap();
        result.simpleMap_.makeImmutable();
        result.enumField_ = enumField_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage) {
          return mergeFrom((org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage other) {
        if (other == org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.getDefaultInstance()) return this;
        if (!other.getStringField().isEmpty()) {
          stringField_ = other.stringField_;
          onChanged();
        }
        if (other.getIntField() != 0) {
          setIntField(other.getIntField());
        }
        if (other.getLongField() != 0L) {
          setLongField(other.getLongField());
        }
        if (other.getDoubleField() != 0D) {
          setDoubleField(other.getDoubleField());
        }
        if (other.getFloatField() != 0F) {
          setFloatField(other.getFloatField());
        }
        if (other.getBoolField() != false) {
          setBoolField(other.getBoolField());
        }
        if (other.getBytesField() != com.google.protobuf.ByteString.EMPTY) {
          setBytesField(other.getBytesField());
        }
        if (!other.repeatedStrings_.isEmpty()) {
          if (repeatedStrings_.isEmpty()) {
            repeatedStrings_ = other.repeatedStrings_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRepeatedStringsIsMutable();
            repeatedStrings_.addAll(other.repeatedStrings_);
          }
          onChanged();
        }
        if (other.hasNestedMessage()) {
          mergeNestedMessage(other.getNestedMessage());
        }
        if (repeatedNestedMessagesBuilder_ == null) {
          if (!other.repeatedNestedMessages_.isEmpty()) {
            if (repeatedNestedMessages_.isEmpty()) {
              repeatedNestedMessages_ = other.repeatedNestedMessages_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRepeatedNestedMessagesIsMutable();
              repeatedNestedMessages_.addAll(other.repeatedNestedMessages_);
            }
            onChanged();
          }
        } else {
          if (!other.repeatedNestedMessages_.isEmpty()) {
            if (repeatedNestedMessagesBuilder_.isEmpty()) {
              repeatedNestedMessagesBuilder_.dispose();
              repeatedNestedMessagesBuilder_ = null;
              repeatedNestedMessages_ = other.repeatedNestedMessages_;
              bitField0_ = (bitField0_ & ~0x00000002);
              repeatedNestedMessagesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRepeatedNestedMessagesFieldBuilder() : null;
            } else {
              repeatedNestedMessagesBuilder_.addAllMessages(other.repeatedNestedMessages_);
            }
          }
        }
        internalGetMutableComplexMap().mergeFrom(
            other.internalGetComplexMap());
        internalGetMutableSimpleMap().mergeFrom(
            other.internalGetSimpleMap());
        if (other.enumField_ != 0) {
          setEnumFieldValue(other.getEnumFieldValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object stringField_ = "";
      /**
       * <code>string string_field = 1;</code>
       * @return The stringField.
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = stringField_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stringField_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_field = 1;</code>
       * @return The bytes for stringField.
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = stringField_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_field = 1;</code>
       * @param value The stringField to set.
       * @return This builder for chaining.
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stringField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string string_field = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringField() {
        
        stringField_ = getDefaultInstance().getStringField();
        onChanged();
        return this;
      }
      /**
       * <code>string string_field = 1;</code>
       * @param value The bytes for stringField to set.
       * @return This builder for chaining.
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stringField_ = value;
        onChanged();
        return this;
      }

      private int intField_ ;
      /**
       * <code>int32 int_field = 2;</code>
       * @return The intField.
       */
      @java.lang.Override
      public int getIntField() {
        return intField_;
      }
      /**
       * <code>int32 int_field = 2;</code>
       * @param value The intField to set.
       * @return This builder for chaining.
       */
      public Builder setIntField(int value) {
        
        intField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int_field = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntField() {
        
        intField_ = 0;
        onChanged();
        return this;
      }

      private long longField_ ;
      /**
       * <code>int64 long_field = 3;</code>
       * @return The longField.
       */
      @java.lang.Override
      public long getLongField() {
        return longField_;
      }
      /**
       * <code>int64 long_field = 3;</code>
       * @param value The longField to set.
       * @return This builder for chaining.
       */
      public Builder setLongField(long value) {
        
        longField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 long_field = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongField() {
        
        longField_ = 0L;
        onChanged();
        return this;
      }

      private double doubleField_ ;
      /**
       * <code>double double_field = 4;</code>
       * @return The doubleField.
       */
      @java.lang.Override
      public double getDoubleField() {
        return doubleField_;
      }
      /**
       * <code>double double_field = 4;</code>
       * @param value The doubleField to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleField(double value) {
        
        doubleField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double double_field = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleField() {
        
        doubleField_ = 0D;
        onChanged();
        return this;
      }

      private float floatField_ ;
      /**
       * <code>float float_field = 5;</code>
       * @return The floatField.
       */
      @java.lang.Override
      public float getFloatField() {
        return floatField_;
      }
      /**
       * <code>float float_field = 5;</code>
       * @param value The floatField to set.
       * @return This builder for chaining.
       */
      public Builder setFloatField(float value) {
        
        floatField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float float_field = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatField() {
        
        floatField_ = 0F;
        onChanged();
        return this;
      }

      private boolean boolField_ ;
      /**
       * <code>bool bool_field = 6;</code>
       * @return The boolField.
       */
      @java.lang.Override
      public boolean getBoolField() {
        return boolField_;
      }
      /**
       * <code>bool bool_field = 6;</code>
       * @param value The boolField to set.
       * @return This builder for chaining.
       */
      public Builder setBoolField(boolean value) {
        
        boolField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_field = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolField() {
        
        boolField_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesField_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bytes_field = 7;</code>
       * @return The bytesField.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytesField() {
        return bytesField_;
      }
      /**
       * <code>bytes bytes_field = 7;</code>
       * @param value The bytesField to set.
       * @return This builder for chaining.
       */
      public Builder setBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bytesField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes_field = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytesField() {
        
        bytesField_ = getDefaultInstance().getBytesField();
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList repeatedStrings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRepeatedStringsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          repeatedStrings_ = new com.google.protobuf.LazyStringArrayList(repeatedStrings_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @return A list containing the repeatedStrings.
       */
      public com.google.protobuf.ProtocolStringList
          getRepeatedStringsList() {
        return repeatedStrings_.getUnmodifiableView();
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @return The count of repeatedStrings.
       */
      public int getRepeatedStringsCount() {
        return repeatedStrings_.size();
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @param index The index of the element to return.
       * @return The repeatedStrings at the given index.
       */
      public java.lang.String getRepeatedStrings(int index) {
        return repeatedStrings_.get(index);
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the repeatedStrings at the given index.
       */
      public com.google.protobuf.ByteString
          getRepeatedStringsBytes(int index) {
        return repeatedStrings_.getByteString(index);
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @param index The index to set the value at.
       * @param value The repeatedStrings to set.
       * @return This builder for chaining.
       */
      public Builder setRepeatedStrings(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringsIsMutable();
        repeatedStrings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @param value The repeatedStrings to add.
       * @return This builder for chaining.
       */
      public Builder addRepeatedStrings(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringsIsMutable();
        repeatedStrings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @param values The repeatedStrings to add.
       * @return This builder for chaining.
       */
      public Builder addAllRepeatedStrings(
          java.lang.Iterable<java.lang.String> values) {
        ensureRepeatedStringsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedStrings_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepeatedStrings() {
        repeatedStrings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_strings = 8;</code>
       * @param value The bytes of the repeatedStrings to add.
       * @return This builder for chaining.
       */
      public Builder addRepeatedStringsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureRepeatedStringsIsMutable();
        repeatedStrings_.add(value);
        onChanged();
        return this;
      }

      private org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage nestedMessage_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder> nestedMessageBuilder_;
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       * @return Whether the nestedMessage field is set.
       */
      public boolean hasNestedMessage() {
        return nestedMessageBuilder_ != null || nestedMessage_ != null;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       * @return The nestedMessage.
       */
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getNestedMessage() {
        if (nestedMessageBuilder_ == null) {
          return nestedMessage_ == null ? org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.getDefaultInstance() : nestedMessage_;
        } else {
          return nestedMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       */
      public Builder setNestedMessage(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage value) {
        if (nestedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nestedMessage_ = value;
          onChanged();
        } else {
          nestedMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       */
      public Builder setNestedMessage(
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder builderForValue) {
        if (nestedMessageBuilder_ == null) {
          nestedMessage_ = builderForValue.build();
          onChanged();
        } else {
          nestedMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       */
      public Builder mergeNestedMessage(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage value) {
        if (nestedMessageBuilder_ == null) {
          if (nestedMessage_ != null) {
            nestedMessage_ =
              org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.newBuilder(nestedMessage_).mergeFrom(value).buildPartial();
          } else {
            nestedMessage_ = value;
          }
          onChanged();
        } else {
          nestedMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       */
      public Builder clearNestedMessage() {
        if (nestedMessageBuilder_ == null) {
          nestedMessage_ = null;
          onChanged();
        } else {
          nestedMessage_ = null;
          nestedMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       */
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder getNestedMessageBuilder() {
        
        onChanged();
        return getNestedMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       */
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder getNestedMessageOrBuilder() {
        if (nestedMessageBuilder_ != null) {
          return nestedMessageBuilder_.getMessageOrBuilder();
        } else {
          return nestedMessage_ == null ?
              org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.getDefaultInstance() : nestedMessage_;
        }
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage nested_message = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder> 
          getNestedMessageFieldBuilder() {
        if (nestedMessageBuilder_ == null) {
          nestedMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder>(
                  getNestedMessage(),
                  getParentForChildren(),
                  isClean());
          nestedMessage_ = null;
        }
        return nestedMessageBuilder_;
      }

      private java.util.List<org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> repeatedNestedMessages_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedNestedMessagesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          repeatedNestedMessages_ = new java.util.ArrayList<org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>(repeatedNestedMessages_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder> repeatedNestedMessagesBuilder_;

      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public java.util.List<org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> getRepeatedNestedMessagesList() {
        if (repeatedNestedMessagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(repeatedNestedMessages_);
        } else {
          return repeatedNestedMessagesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public int getRepeatedNestedMessagesCount() {
        if (repeatedNestedMessagesBuilder_ == null) {
          return repeatedNestedMessages_.size();
        } else {
          return repeatedNestedMessagesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getRepeatedNestedMessages(int index) {
        if (repeatedNestedMessagesBuilder_ == null) {
          return repeatedNestedMessages_.get(index);
        } else {
          return repeatedNestedMessagesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder setRepeatedNestedMessages(
          int index, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage value) {
        if (repeatedNestedMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessagesIsMutable();
          repeatedNestedMessages_.set(index, value);
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder setRepeatedNestedMessages(
          int index, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder builderForValue) {
        if (repeatedNestedMessagesBuilder_ == null) {
          ensureRepeatedNestedMessagesIsMutable();
          repeatedNestedMessages_.set(index, builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder addRepeatedNestedMessages(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage value) {
        if (repeatedNestedMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessagesIsMutable();
          repeatedNestedMessages_.add(value);
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder addRepeatedNestedMessages(
          int index, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage value) {
        if (repeatedNestedMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessagesIsMutable();
          repeatedNestedMessages_.add(index, value);
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder addRepeatedNestedMessages(
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder builderForValue) {
        if (repeatedNestedMessagesBuilder_ == null) {
          ensureRepeatedNestedMessagesIsMutable();
          repeatedNestedMessages_.add(builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder addRepeatedNestedMessages(
          int index, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder builderForValue) {
        if (repeatedNestedMessagesBuilder_ == null) {
          ensureRepeatedNestedMessagesIsMutable();
          repeatedNestedMessages_.add(index, builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder addAllRepeatedNestedMessages(
          java.lang.Iterable<? extends org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> values) {
        if (repeatedNestedMessagesBuilder_ == null) {
          ensureRepeatedNestedMessagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, repeatedNestedMessages_);
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder clearRepeatedNestedMessages() {
        if (repeatedNestedMessagesBuilder_ == null) {
          repeatedNestedMessages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public Builder removeRepeatedNestedMessages(int index) {
        if (repeatedNestedMessagesBuilder_ == null) {
          ensureRepeatedNestedMessagesIsMutable();
          repeatedNestedMessages_.remove(index);
          onChanged();
        } else {
          repeatedNestedMessagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder getRepeatedNestedMessagesBuilder(
          int index) {
        return getRepeatedNestedMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder getRepeatedNestedMessagesOrBuilder(
          int index) {
        if (repeatedNestedMessagesBuilder_ == null) {
          return repeatedNestedMessages_.get(index);  } else {
          return repeatedNestedMessagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public java.util.List<? extends org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder> 
           getRepeatedNestedMessagesOrBuilderList() {
        if (repeatedNestedMessagesBuilder_ != null) {
          return repeatedNestedMessagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(repeatedNestedMessages_);
        }
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder addRepeatedNestedMessagesBuilder() {
        return getRepeatedNestedMessagesFieldBuilder().addBuilder(
            org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder addRepeatedNestedMessagesBuilder(
          int index) {
        return getRepeatedNestedMessagesFieldBuilder().addBuilder(
            index, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage repeated_nested_messages = 10;</code>
       */
      public java.util.List<org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder> 
           getRepeatedNestedMessagesBuilderList() {
        return getRepeatedNestedMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder> 
          getRepeatedNestedMessagesFieldBuilder() {
        if (repeatedNestedMessagesBuilder_ == null) {
          repeatedNestedMessagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage.Builder, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessageOrBuilder>(
                  repeatedNestedMessages_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          repeatedNestedMessages_ = null;
        }
        return repeatedNestedMessagesBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> complexMap_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>
      internalGetComplexMap() {
        if (complexMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ComplexMapDefaultEntryHolder.defaultEntry);
        }
        return complexMap_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>
      internalGetMutableComplexMap() {
        onChanged();;
        if (complexMap_ == null) {
          complexMap_ = com.google.protobuf.MapField.newMapField(
              ComplexMapDefaultEntryHolder.defaultEntry);
        }
        if (!complexMap_.isMutable()) {
          complexMap_ = complexMap_.copy();
        }
        return complexMap_;
      }

      public int getComplexMapCount() {
        return internalGetComplexMap().getMap().size();
      }
      /**
       * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
       */

      @java.lang.Override
      public boolean containsComplexMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetComplexMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getComplexMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> getComplexMap() {
        return getComplexMapMap();
      }
      /**
       * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> getComplexMapMap() {
        return internalGetComplexMap().getMap();
      }
      /**
       * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
       */
      @java.lang.Override

      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getComplexMapOrDefault(
          java.lang.String key,
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> map =
            internalGetComplexMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
       */
      @java.lang.Override

      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage getComplexMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> map =
            internalGetComplexMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearComplexMap() {
        internalGetMutableComplexMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
       */

      public Builder removeComplexMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableComplexMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage>
      getMutableComplexMap() {
        return internalGetMutableComplexMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
       */
      public Builder putComplexMap(
          java.lang.String key,
          org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableComplexMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .org.apache.pinot.plugin.inputformat.protobuf.TestMessage.NestedMessage&gt; complex_map = 11;</code>
       */

      public Builder putAllComplexMap(
          java.util.Map<java.lang.String, org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.NestedMessage> values) {
        internalGetMutableComplexMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> simpleMap_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetSimpleMap() {
        if (simpleMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SimpleMapDefaultEntryHolder.defaultEntry);
        }
        return simpleMap_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableSimpleMap() {
        onChanged();;
        if (simpleMap_ == null) {
          simpleMap_ = com.google.protobuf.MapField.newMapField(
              SimpleMapDefaultEntryHolder.defaultEntry);
        }
        if (!simpleMap_.isMutable()) {
          simpleMap_ = simpleMap_.copy();
        }
        return simpleMap_;
      }

      public int getSimpleMapCount() {
        return internalGetSimpleMap().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; simple_map = 12;</code>
       */

      @java.lang.Override
      public boolean containsSimpleMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetSimpleMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSimpleMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getSimpleMap() {
        return getSimpleMapMap();
      }
      /**
       * <code>map&lt;string, int32&gt; simple_map = 12;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.Integer> getSimpleMapMap() {
        return internalGetSimpleMap().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; simple_map = 12;</code>
       */
      @java.lang.Override

      public int getSimpleMapOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetSimpleMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; simple_map = 12;</code>
       */
      @java.lang.Override

      public int getSimpleMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetSimpleMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSimpleMap() {
        internalGetMutableSimpleMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; simple_map = 12;</code>
       */

      public Builder removeSimpleMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableSimpleMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableSimpleMap() {
        return internalGetMutableSimpleMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; simple_map = 12;</code>
       */
      public Builder putSimpleMap(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableSimpleMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; simple_map = 12;</code>
       */

      public Builder putAllSimpleMap(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableSimpleMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int enumField_ = 0;
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
       * @return The enum numeric value on the wire for enumField.
       */
      @java.lang.Override public int getEnumFieldValue() {
        return enumField_;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
       * @param value The enum numeric value on the wire for enumField to set.
       * @return This builder for chaining.
       */
      public Builder setEnumFieldValue(int value) {
        
        enumField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
       * @return The enumField.
       */
      @java.lang.Override
      public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum getEnumField() {
        @SuppressWarnings("deprecation")
        org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum result = org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum.valueOf(enumField_);
        return result == null ? org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
       * @param value The enumField to set.
       * @return This builder for chaining.
       */
      public Builder setEnumField(org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage.TestEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        enumField_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage.TestEnum enum_field = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnumField() {
        
        enumField_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.pinot.plugin.inputformat.protobuf.TestMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.pinot.plugin.inputformat.protobuf.TestMessage)
    private static final org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage();
    }

    public static org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestMessage>
        PARSER = new com.google.protobuf.AbstractParser<TestMessage>() {
      @java.lang.Override
      public TestMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.pinot.plugin.inputformat.protobuf.ComplexTypes.TestMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_ComplexMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_ComplexMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_SimpleMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_SimpleMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023complex_types.proto\022,org.apache.pinot." +
      "plugin.inputformat.protobuf\"\307\007\n\013TestMess" +
      "age\022\024\n\014string_field\030\001 \001(\t\022\021\n\tint_field\030\002" +
      " \001(\005\022\022\n\nlong_field\030\003 \001(\003\022\024\n\014double_field" +
      "\030\004 \001(\001\022\023\n\013float_field\030\005 \001(\002\022\022\n\nbool_fiel" +
      "d\030\006 \001(\010\022\023\n\013bytes_field\030\007 \001(\014\022\030\n\020repeated" +
      "_strings\030\010 \003(\t\022_\n\016nested_message\030\t \001(\0132G" +
      ".org.apache.pinot.plugin.inputformat.pro" +
      "tobuf.TestMessage.NestedMessage\022i\n\030repea" +
      "ted_nested_messages\030\n \003(\0132G.org.apache.p" +
      "inot.plugin.inputformat.protobuf.TestMes" +
      "sage.NestedMessage\022^\n\013complex_map\030\013 \003(\0132" +
      "I.org.apache.pinot.plugin.inputformat.pr" +
      "otobuf.TestMessage.ComplexMapEntry\022\\\n\nsi" +
      "mple_map\030\014 \003(\0132H.org.apache.pinot.plugin" +
      ".inputformat.protobuf.TestMessage.Simple" +
      "MapEntry\022V\n\nenum_field\030\017 \001(\0162B.org.apach" +
      "e.pinot.plugin.inputformat.protobuf.Test" +
      "Message.TestEnum\032F\n\rNestedMessage\022\033\n\023nes" +
      "ted_string_field\030\001 \001(\t\022\030\n\020nested_int_fie" +
      "ld\030\002 \001(\005\032z\n\017ComplexMapEntry\022\013\n\003key\030\001 \001(\t" +
      "\022V\n\005value\030\002 \001(\0132G.org.apache.pinot.plugi" +
      "n.inputformat.protobuf.TestMessage.Neste" +
      "dMessage:\0028\001\0320\n\016SimpleMapEntry\022\013\n\003key\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"5\n\010TestEnum\022\t\n\005AL" +
      "PHA\020\000\022\010\n\004BETA\020\001\022\t\n\005GAMMA\020\002\022\t\n\005DELTA\020\003b\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor,
        new java.lang.String[] { "StringField", "IntField", "LongField", "DoubleField", "FloatField", "BoolField", "BytesField", "RepeatedStrings", "NestedMessage", "RepeatedNestedMessages", "ComplexMap", "SimpleMap", "EnumField", });
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_descriptor =
      internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_NestedMessage_descriptor,
        new java.lang.String[] { "NestedStringField", "NestedIntField", });
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_ComplexMapEntry_descriptor =
      internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_ComplexMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_ComplexMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_SimpleMapEntry_descriptor =
      internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_descriptor.getNestedTypes().get(2);
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_SimpleMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_pinot_plugin_inputformat_protobuf_TestMessage_SimpleMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
