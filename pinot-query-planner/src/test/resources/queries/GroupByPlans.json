{
  "group_by_planning_tests": {
    "queries": [
      {
        "description": "Group by with select and aggregate column",
        "sql": "EXPLAIN PLAN FOR SELECT a.col1, SUM(a.col3) FROM a GROUP BY a.col1",
        "output": [
          "Execution Plan",
          "\nLogicalAggregate(group=[{0}], EXPR$1=[$SUM0($1)])",
          "\n  LogicalExchange(distribution=[hash[0]])",
          "\n    LogicalAggregate(group=[{2}], EXPR$1=[$SUM0($1)])",
          "\n      LogicalTableScan(table=[[a]])",
          "\n"
        ]
      },
      {
        "description": "Group by with filter",
        "sql": "EXPLAIN PLAN FOR SELECT a.col1, SUM(a.col3) FROM a WHERE a.col3 >= 0 AND a.col2 = 'a' GROUP BY a.col1",
        "output": [
          "Execution Plan",
          "\nLogicalAggregate(group=[{0}], EXPR$1=[$SUM0($1)])",
          "\n  LogicalExchange(distribution=[hash[0]])",
          "\n    LogicalAggregate(group=[{2}], EXPR$1=[$SUM0($1)])",
          "\n      LogicalProject(col2=[$0], col3=[$1], col1=[$2])",
          "\n        LogicalFilter(condition=[AND(>=($1, 0), =($0, 'a'))])",
          "\n          LogicalTableScan(table=[[a]])",
          "\n"
        ]
      },
      {
        "description": "Group by count(*) with filter",
        "sql": "EXPLAIN PLAN FOR SELECT a.col1, COUNT(*) FROM a WHERE a.col3 >= 0 AND a.col2 = 'a' GROUP BY a.col1",
        "notes": "TODO: Needs follow up. Project should only keep a.col1 since the other columns are pushed to the filter, but it currently keeps them all",
        "output": [
          "Execution Plan",
          "\nLogicalAggregate(group=[{0}], EXPR$1=[$SUM0($1)])",
          "\n  LogicalExchange(distribution=[hash[0]])",
          "\n    LogicalAggregate(group=[{2}], EXPR$1=[COUNT()])",
          "\n      LogicalProject(col2=[$0], col3=[$1], col1=[$2])",
          "\n        LogicalFilter(condition=[AND(>=($1, 0), =($0, 'a'))])",
          "\n          LogicalTableScan(table=[[a]])",
          "\n"
        ]
      },
      {
        "description": "Group by on 2 columns with filter",
        "sql": "EXPLAIN PLAN FOR SELECT a.col2, a.col1, SUM(a.col3) FROM a WHERE a.col3 >= 0 AND a.col1 = 'a'  GROUP BY a.col1, a.col2",
        "output": [
          "Execution Plan",
          "\nLogicalAggregate(group=[{0, 1}], EXPR$2=[$SUM0($2)])",
          "\n  LogicalExchange(distribution=[hash[0, 1]])",
          "\n    LogicalAggregate(group=[{0, 2}], EXPR$2=[$SUM0($1)])",
          "\n      LogicalProject(col2=[$0], col3=[$1], col1=[$2])",
          "\n        LogicalFilter(condition=[AND(>=($1, 0), =($2, 'a'))])",
          "\n          LogicalTableScan(table=[[a]])",
          "\n"
        ]
      },
      {
        "description": "Group by with having clause",
        "sql": "EXPLAIN PLAN FOR SELECT a.col1, COUNT(*), SUM(a.col3) FROM a WHERE a.col3 >= 0 AND a.col2 = 'a' GROUP BY a.col1 HAVING COUNT(*) > 10 AND MAX(a.col3) >= 0 AND MIN(a.col3) < 20 AND SUM(a.col3) <= 10 AND AVG(a.col3) = 5",
        "output": [
          "Execution Plan",
          "\nLogicalProject(col1=[$0], EXPR$1=[$1], EXPR$2=[$2])",
          "\n  LogicalFilter(condition=[AND(>($1, 10), >=($3, 0), <($4, 20), <=($2, 10), =($5, 5))])",
          "\n    LogicalProject(col1=[$0], EXPR$1=[$1], EXPR$2=[$2], $f3=[$3], $f4=[$4], $f5=[CAST(/($5, $1)):INTEGER NOT NULL])",
          "\n      LogicalProject(col1=[$0], EXPR$1=[$1], EXPR$2=[$2], $f3=[$3], $f4=[$4], $f5=[$2])",
          "\n        LogicalAggregate(group=[{0}], EXPR$1=[$SUM0($1)], EXPR$2=[$SUM0($2)], agg#2=[MAX($3)], agg#3=[MIN($4)])",
          "\n          LogicalExchange(distribution=[hash[0]])",
          "\n            LogicalAggregate(group=[{2}], EXPR$1=[COUNT()], EXPR$2=[$SUM0($1)], agg#2=[MAX($1)], agg#3=[MIN($1)])",
          "\n              LogicalProject(col2=[$0], col3=[$1], col1=[$2])",
          "\n                LogicalFilter(condition=[AND(>=($1, 0), =($0, 'a'))])",
          "\n                  LogicalTableScan(table=[[a]])",
          "\n"
        ]
      },
      {
        "description": "Group by with having clause and select alias",
        "sql": "EXPLAIN PLAN FOR SELECT a.col1 as value1, COUNT(*) AS count, SUM(a.col3) as SUM FROM a WHERE a.col3 >= 0 AND a.col2 = 'a' GROUP BY a.col1 HAVING COUNT(*) > 10 AND MAX(a.col3) >= 0 AND MIN(a.col3) < 20 AND SUM(a.col3) <= 10 AND AVG(a.col3) = 5",
        "output": [
          "Execution Plan",
          "\nLogicalProject(value1=[$0], count=[$1], SUM=[$2])",
          "\n  LogicalFilter(condition=[AND(>($1, 10), >=($3, 0), <($4, 20), <=($2, 10), =($5, 5))])",
          "\n    LogicalProject(col1=[$0], count=[$1], SUM=[$2], $f3=[$3], $f4=[$4], $f5=[CAST(/($5, $1)):INTEGER NOT NULL])",
          "\n      LogicalProject(col1=[$0], count=[$1], SUM=[$2], $f3=[$3], $f4=[$4], $f5=[$2])",
          "\n        LogicalAggregate(group=[{0}], count=[$SUM0($1)], SUM=[$SUM0($2)], agg#2=[MAX($3)], agg#3=[MIN($4)])",
          "\n          LogicalExchange(distribution=[hash[0]])",
          "\n            LogicalAggregate(group=[{2}], count=[COUNT()], SUM=[$SUM0($1)], agg#2=[MAX($1)], agg#3=[MIN($1)])",
          "\n              LogicalProject(col2=[$0], col3=[$1], col1=[$2])",
          "\n                LogicalFilter(condition=[AND(>=($1, 0), =($0, 'a'))])",
          "\n                  LogicalTableScan(table=[[a]])",
          "\n"
        ]
      }
    ]
  }
}