
@@24629270 @4629270/ <h> Quaqua Look and Feel <p> The Quaqua Look and Feel ( Quaqua ) is a user interface library for Java applications which wish to closely adhere to the Apple Human Interface Guidelines for Mac OS X. <p> Sun 's Metalworks Demo running with the Quaqua Look and Feel <p> Quaqua is not a fully self-contained look and feel . It runs on top of Apple 's Aqua Look and Feel , and provides fixes and enhancements for it . <h> Features <p> ( Nearly ) Native User ExperienceQuaqua user interface delegates closely look and behave like their native counterparts . Complex user interface components , such as JFileChooser and JColorChooser , are close enough to make end users feel comfortable with them . <p> Alternative Styles Quaqua offers alternative styles for many user interface elements . Such as small styles for most of the components , as well as a striped style for tables , lists and trees . Jaguar-design like tabbed panes with stacking tabs are also supported . <p> Localized in four languages Quaqua is localized in the following languages : German , French , Italian @ @ @ @ @ @ @ @ @ @ the Quaqua Look and Feel is copyright by Werner Randelshofer . The Aqua user interface generated by the Quaqua Look and Feel is copyright by Apple Inc . Aqua is a trademark of Apple Inc . <p> With exception of the Aqua artwork in the code ( images and other graphical elements which reproduce Aqua ) , the code of Quaqua can be licensed under the terms of the LGPL and/or the Modified BSD license . Use of the Aqua user interface is only licensed for Apple hardware running an Apple operating system . <p> Quaqua is free for commercial and non-commercial use . <h> Editions <p> The Quaqua Look and Feel is available in two editions . <p> A full fledged edition providing as much user interface elements by Quaqua as possible . <p> A smaller file chooser only edition , which only provides user interface for JFileChooser 's - all other user interface elements are taken from the Aqua Look and Feel which ships with Apple 's Macintosh Runtime for Java . <h> Supported Platforms <p> Altough Quaqua works with J2SE 6 , it provides limited support for @ @ @ @ @ @ @ @ @ @ native libraries support PowerPC and Intel Macs with 32-bits or 64-bit processors . Quaqua will work without these native libraries , but user experience degrades . <p> Due to copyright restrictions and technical constraints , Quaqua can be run on non-Mac OS X systems for development purposes only . <h> FAQ <h> Can I use Quaqua on other platforms than Mac OS X ? <p> No , you ca n't , except for development purposes . This is because the Aqua user interface can only be licensed from Apple for use on Mac OS X. <p> Even if Apple would license it for use on other platforms , you would n't want to do it if you care about your users . Aqua does not just look different than other user interfaces , it feels different as well . For example , when compared with the Windows UX interface , differences can be found in the set of keyboard accelerators , the focus behavior , the selection behavior , the modality of dialogs and in the use of transition and animation effects . <h> When will my issue by fixed @ @ @ @ @ @ @ @ @ @ , but thank you for reporting it in the bug tracker. ; - ) <p> Quaqua is an open source project . You are invited to contribute work to it , or to donate a gift or money for a specific work item . 
@@24629271 @4629271/ <h> Configurable Parser <p> CubeTwister has a configurable parser . The parser supports quarter-turn twists , half-turn-twists , rotations , permutations , inversions , reflections , repetitions , conjugations , commutations , and macros . You can define your own notation , and you can translate between notations . <h> Database <p> CubeTwister has a database for scripts , maneuvers and pretty patterns . Cubes , Notations , Scripts and Texts are organized in a tree structure . The documents are saved in XML format and can be edited using other XML tools . You can enter all your scripts and supportive documentation in CubeTwister <h> Solver <p> CubeTwister features a Kociemba Two-Phase Solver for Rubik 's Cube 3x3 ( derived from Greg Schmidt 's KCube program ) . The solver generates scripts which are only two or three twists longer than the optimal solution . You can enter an arbitrary state of the cube und let it solve , and you can optimise your scripts using the solver . <h> Publisher <p> Publish your scripts in the Internet . CubeTwister can create HTML pages with interactive Java applets @ @ @ @ @ @ @ @ @ @ can be exported as QuickTime movies and video still images . <h> JavaScript Applets <p> You can separately download JavaScript applets and integrate them in your web-site for PCs , Phones and Tablets . <h> Documentation <h> CubeTwister News <h> KCube 1.0 by Greg Schmidt <p> KCube is a Kociemba two-phase solver which uses two stages of a heuristic iterative depth search algorithm ( IDA* ) to create very short solution sequences for the Rubik 's Cube . A Java version of KCube is used by CubeTwister to solve cubes . 
@@24629272 @4629272/ <h> Tribute-to-Escher Cube <p> This cube shows the cubic projection of an extended M.C. Escher lithograph . <p> The texture is inspired by the famous M.C. Escher lithograph Relativity , which was first printed in December 1953 . Escher 's lithograph depicts a world in which the normal laws of gravity do not apply . The architectural structure seems to be the centre of an idyllic community , with most of its inhabitants casually going about their ordinary business . A 3D reconstruction of ' Relativity ' can be found on the front face . The other faces are extending the scene and create an extraordinary tribute to M.C. Escher 's work . 
@@24629275 @4629275/ <h> Features of TinyLMS <p> Runtime requirements for tutorials are low : HTML , JavaScript and Cookies are all that is needed . You do n't need a server software . <p> TinyLMS can print a tutorial as a PDF document . <p> TinyLMS supports layered and quiz organization of learning content in addition to the hierarchical organization of learning content specified by SCORM . <p> TinyLMS can be used as a SCORM-to-SCORM adapter . This can be used to aggregate fine grained learning content into one big SCO . <p> TinyLMS has a very strict validator for the imsmanifest.xml file . Files which pass this validator are likely to run on all SCORM 1.2 comforming learning platforms . <h> What is SCORM ? <p> The Sharable Content Object Reference Model ( SCORM ) defines a Web-based learning " Content Aggregation Model " and " Run-time Environment " for learning objects . At its simplest , it is a model that references a set of interrelated technical specifications and guidelines designed to meet the following high-level requirements for Web-based learning content : <p> Content reusability : SCORM tutorials are @ @ @ @ @ @ @ @ @ @ ) . A SCO is a single web page or a sequence of web pages containing learning content . SCORM enables the integration of existing SCO 's into new tutorials . <p> Accessibility : SCORM tutorials are accessible over the web . To run a tutorial the end user needs to have a Browser supporting ECMAScript 1.0 ( aka JavaScript 1.0 ) and frames . Information about the tutorial is available through metadata . All metadate is stored in XML documents . <p> Durability : SCORM is based on open Internet standards such as HTML and ECMAScript . <p> Interoperability : Interoperability is specified for the metadata , and for the API of SCO 's and the runtime environment . <p> SCORM has been developed by the Advanced Distributed Learning Initiative ( ADL ) . See www.adlnet.org for more information about SCORM . <h> Known Issues <p> TinyLMS does not pass the SCORM RTE-1 self-test because of its limited persistence capabilities . During a user session , TinyLMS uses an in-memory database for all data entries . Long term persistence is achieved using Cookies . Unfortunately Cookies do not provide @ @ @ @ @ @ @ @ @ @ a course consists of exactly one SCO , TinyLMS is capable of storing the cmi.core.lessonstatus and the cmi.core.lessonlocation . If a course contains more than one SCO , TinyLMS stores the cmi.core.lessonstatus only . <h> Installation Requirements <p> TinyLMS consists of two parts : the course builder and the runtime environment . <p> Creating a course : To create a course you need to have Java 1.5 installed on your computer . It does not matter which operating system you are using . <p> Deployment : TinyLMS does not need a server software . Simply ship the course files to your students ( by mail or on a CD ROM ) or upload them to your web-server . <p> Using a course : All a course needs is a browser supporting ECMAScript 1.0 ( aka JavaScript 1.1 ) and frames . <h> SCORM 1.2 Compliance <p> Please note , that the warnings issued by the test log are all related to features required for compliance with RTE2 and RTE3 . TinyLMS is targeted at RTE1 only . All of the errors issued by the test log are caused by the @ @ @ @ @ @ @ @ @ @ <h> Links <p> DotNetSCORM uses software components of TinyLMS as client-side technology for a full fledged server based learning management system . <h> Example Content Packages <p> To use TinyLMS you need to have some SCORM learning content . If you do n't have any of your own , you can download the following example content packages from here : 
@@24629277 @4629277/ <h> JHotDraw 7 <p> JHotDraw 7 is a two-dimensional graphics framework for structured drawing editors . It can be used to create many different editors from a simple doodle program up to full fledged diagram editors and vector animation tools . <p> JHotDraw 7 is a major rewrite of earlier versions of JHotDraw which in turn is a derivation of HotDraw . <h> Features <p> All contracts in the JHotDraw 7 framework are implemented against Java Interfaces . The framework provides many points to hook in your own code . <p> The framework is small enough to create Java applets with it . <p> Abstract and Default implementations are provided to get you a quick start . <p> The framework makes use of common Java idioms , such as the JavaBeans setter and getter methods . This is supposed to reduce your learning curve . <p> The drawing code takes advantage of Java2D . It uses double precision coordinates for all drawings . <p> A drawing can be shown and edited in multiple windows with different scale factors . <p> Undo/Redo is implemented based on the Swing undo package @ @ @ @ @ @ @ @ @ @ supported . <p> XML is used as the default external storage format and for clipboard operations . 
@@24629278 @4629278/ <h> Monte Media Library <p> The Monte Media Library is a Java library for processing media data . Supported media formats include still images , video , audio and meta-data . <p> This is an experimental library for my personal studies ! <p> This library has some overlap in functionality with the Java Media Framework ( JMF ) . For some codecs , the Monte Media Library provides wrappers , which allow to use them with JMF . However , in general , Monte Media is not compatible with JMF . <h> Demo Applications <p> Most demos consist of an executable JAR file which also includes the source code . On some platforms , you can double click the JAR file to execute the demo , on others , you can start it with the command java -jar nameofdemo.jar <p> To get the source code , rename the file to nameofdemo.zip and unzip it . 
@@24629279 @4629279/ <h> JHotDraw 7 : Introduction <p> JHotDraw 7 defines a Java framework for structured drawing editors and for document-oriented applications . The two frameworks can be used independently of each other . <p> The framework for structured drawing editors can be used to realize drawing editors for sketches , diagrams , and artistic drawings . Drawings can be animated and interactive . It is possible to back a drawing with a data model , allowing a structured drawing editor to be used as a user interface for a data model . <p> The framework for document-oriented applications can be used to create applications which comply to platform-specific user interface guidelines . Such as the Apple Human Interface Guidelines and the Windows Vista User Experience Guidelines . <h> History of JHotDraw 7 <p> JHotDraw 7 is based on Erich Gamma 's JHotDraw , which is copyright 1996 , 1997 by IFA Informatik and Erich Gamma . <p> JHotDraw 7 is a major departure from previous versions of JHotDraw only the cornerstones of the original architecture remain . The API and almost every part of the implementation have been reworked to @ @ @ @ @ @ @ @ @ @ JHotDraw 7 has been developed in 20042011 by Werner Randelshofer . <h> Aims <p> The aim of making the original JHotDraw an open-source project is : <p> to gain a wider audience for this framework among developers <p> to build new applications based upon JHotDraw <p> to let application development influence the development of JHotDraw <p> to add new and advanced features <p> to drive its further development <p> to port JHotDraw to new Java GUI toolkits <p> to enhance and refactor the exisiting code <p> to identify new design patterns and refactorings <p> to make it an example for a well-designed and flexible framework <p> to examine the relevance of new Java APIs to JHotDraw ( e.g. usefulness of Java 2D API for JHotDraw ) <p> to learn and to have fun <p> Any developer and software designer who wants to contribute is welcome ! <h> Online Information <p> More documentation about older versions of JHotDraw can be found here : <p> JavaWorld published an introductionary article about JHotDraw 5.2 : Become a programming Picasso with JHotDraw+ . The accompanying example application JModeller a simple UML editor built using @ @ @ @ @ @ @ @ @ @ how to use and extend existing classes . <p> A case study about JHotDraw 5.1 can be found in the dissertation of Dirk Riehle . <p> The results to the survey Applications for JHotDraw+ may give you some impressions about the usability and applicability of the JHotDraw framework to your requirements . This survey was based on version 5.2 of JHotDraw , many of the problems and difficulties related to the framework have been resolved or have become irrelevant with JHotDraw 7. 
@@24629280 @4629280/ 41265 @qwx241265 <p> Activate JavaScript to see the Virtual Cubes ! <h> Rubik 's Cube <p> The Rubik 's Cube is a 3-D mechanical puzzle invented in 1974 by Hungarian sculptor and professor of architecture Ern Rubik . Each of the six faces of a Rubik 's Cube is covered by nine stickers , among six solid colors ( traditionally blue , green , red , orange , yellow , and white ) . A pivot mechanism enables each face to turn independently , thus mixing up the colors . For the puzzle to be solved , each face must be a solid color . <p> A Rubik 's Cube consists of 26 unique miniature cubes , also called ' cubies ' : 8 corners , 12 edges , and 6 centers . The six centers are affixed to the core mechanism . The 3x3x3 cube has a total of 54 stickers . <h> The number of possible positions <p> The number of possible positions of the cube is 8 ! + 37 + 12 ! / 2 + 211 = 43 ' 252 ' 003 ' 274 ' @ @ @ @ @ @ @ @ @ @ about 43.3 quintillion on the short scale or 43.3 trillion on the long scale . <p> The Rubik 's Cube has eight corners and twelve edges . There are 8 ! ( 40 ' 320 ) ways to arrange the corners . Seven can be oriented independently , and the orientation of the eighth depends on the preceding seven , giving 37 ( 2 ' 187 ) possibilities . There are 12 ! / 2 ( 239 ' 500 ' 800 ) ways to arrange the edges , since an odd permutation of the corners implies an odd permutation of the edges as well . Eleven edges can be flipped independently , with the flip of the twelfth depending on the preceding ones , giving 211 ( 2 ' 048 ) possibilities . <p> A Rubik 's Cube usually has no orientation markings on the centers and therefore solving it does not require any attention orienting those parts correctly . Marking the Rubik 's Cube 's centers increases its difficulty because this expands the set of distinguishable possible positions . There are 46 / 2 ( 2 ' 048 ) @ @ @ @ @ @ @ @ @ @ of the corners implies an even number of quarter turns of the centres as well . An alternative explanation is : There are 45 + 2 = 211 ( 2 ' 048 ) ways to orient the centers , since five of the six centers can be twisted independently of one another into each of four different orientations , and for the sixth center there still exist two possibilities . Thus orientations of centers increases the total number of possible positions from 43 ' 252 ' 003 ' 274 ' 489 ' 856 ' 000 43.252 + 1018 to 88 ' 580 ' 102 ' 706 ' 155 ' 225 ' 088 ' 000 88.58 + 1021 . <h> The diameter of the Rubik 's Cube <p> In July 2010 , Tomas Rokicki , Herbert Kociemba , Morley Davidson , and John Dethridge proved the so-called God 's Number to be 20 in face-turn metric ( ftm ) . This means that every position of Rubik 's Cube can be solved in twenty moves or less . Distance-20 positions or antipodes ( positions that are maximally far from solved ) @ @ @ @ @ @ @ @ @ @ one in a billion positions , yet there are probably more than one hundred million such positions . The exact number of antipodes is not yet known . <p> In August 2014 , Tomas Rokicki and Morley Davidson proved that God 's Number in the quarter-turn metric ( qtm ) is 26 . In qtm , only a single position ( Superflip composed with four spots ) plus its two rotations is known that requires the maximum of 26 moves . <p> The slice turn metric allows any quarter- or half-turn of a middle ' slice ' as one move . ( There seems to be less interest in counting only slice quarter turns . ) Since these allowed moves include the HTM moves , the upper bound here is 20 . The conjecture is that God 's number in this STM is 18 . See also What is God 's Number if Slice Moves are Allowed ? for further informations . <p> In the Super Group , where the rotations of the centers are regarded as well , the number of possible positions is 2 ' 048 times higher @ @ @ @ @ @ @ @ @ @ ' 048 ) . Walter Randelshofer discovered in July 19 , 2014 that the ' Pure Superflip ' ( Superflip with untouched centers ) can be solved optimally in 24 moves in face-turn metric ( ftm ) . In July 22 , 2014 he also found that the ' 180 Superflip ' ( Superflip with all centers rotated around 180 ) requires 20 moves in slice-turn metric ( stm ) . Bruce Norskog assumed that there must exist positions that require at least 28 moves in quarter-turn metric ( qtm ) . This was confirmed in September 9 , 2014 by Herbert Kociemba for a specific ' Superflip composed with four spots ' position , where all centers except the upper one are rotated around 180 . See also the article Lower bounds for the 3x3x3 Super Group for further informations . <p> The most common order is 60 with a total of 4 ' 601 ' 524 ' 692 ' 892 ' 925 ' 952 elements ( 10.64% of all cube positions ) , followed by the orders 24 and 36 . The maximal order is 1 ' 260 @ @ @ @ @ @ @ @ @ @ 678 ' 400 elements ( 0.119% of all cube positions ) . <h> The maximum permutation order <p> The maximum permutation order of a regular Rubik 's Cube is 1 ' 260 . It can be achieved by twisted corner 3-cycles and 5-cycles : 3 + ( 3 + 5 ) = ( 9 + 5 ) ; twisted edge 2-cycles and 7-cycles : 2 + ( 2 + 7 ) = ( 4 + 7 ) . This results in a Least Common Multiple ( LCM ) of ( 9 + 5 ) + ( 4 + 7 ) = 1 ' 260 . The order can be reached by the following algorithm found by David Singmaster : B2 R ' F D ' F ( 5 ltm ) . Note , that the maxium permutation order for a Super Cube version is higher . 
@@24629281 @4629281/ <p> Set this to Boolean.FALSE to prevent that all text is selected , when the user tabs into the field . This property does not affect JTextPane and JTextArea . Note : You can set the UIManager property TextComponent.autoSelect to false , to turn this off globally . <p> Quaqua.TextField.style <p> String <p> Set this to " search " to get rounded borders like the Spotlight search field . <p> Set this to " plain " to get a rectangular border like for regular text fields . 
@@24629283 @4629283/ <h> toImage <p> The images are drawn using the specified scale factor . If some figures have a drawing area located at negative coordinates , then the drawing coordinates are translated , so that all figures are visible on the image . 41272 @qwx241272 <p> drawing - The drawing . <p> figures - A list of figures of the drawing . <p> scaleFactor - The scale factor used when drawing the figures . <p> clipToFigures - If this is true , the image is clipped to the figures . If this is false , the image includes the drawing area , 
@@24629284 @4629284/ <h> M12 Cube <p> Sequence of Moves , 11 , 12 <p> ( ) <p> ( ) <p> Optimal Solution <p> ( ) <p> M12 Cube <p> The goal of the puzzle is first to randomize and then restore the cube by using combinations of just two basic moves ( ' Invert Move ' and ' Merge Move ' ) . These moves only affect edges , which are numbered from 1 through 12 . In the inital state , any edge and the two neighbouring corners show a same number . Since corners stay at the same place , they can be used as a reference frame to move edges back to their initial locations . <p> Click the ' Undo ' button to undo previous moves . The entire sequence of moves , from the last to the first can be undone , by clicking repeatedly the ' Undo ' button . <p> Optimal solution <p> When ' Show optimal solution ' @ @ @ @ @ @ @ @ @ @ current state of the cube is displayed . Enter these moves step by step in order to optimally solve the cube . <p> Permutation <p> Permutation notations are used to describe how edge pieces are permuted . Changes always happen in cycles . If an edge moves to another edge location , then the latter must move as well . This may trigger more location changes until one edge closes the cycle back by moving to the start location . <p> M12 Array Notation <p> In this notation , all elements are listed in a row and enclosed in square brackets . Elements are separated by commas . Changes are displayed by listing elements in a , 10 , 11 , 1 shows that edges ' 1 ' and ' 12 ' have swapped their locations . <p> M12 Cycle Notation <p> This notation displays only elements that have moved . Cycles are enclosed in parenthesis . The elements of a given cycle are separated by commas , e.g. @ @ @ @ @ @ @ @ @ @ has moved to position ' 1 ' , edge ' 1 ' has moved to position ' 3 ' and edge ' 3 ' has moved to position ' 8 ' . 2 2-cycles ( 1,12 ) ( 2,11 ) denotes two disjoint cycles : edges ' 1 ' and ' 12 ' have swapped their locations and the same for edges ' 2 ' and ' 11 ' . 
@@24629287 @4629287/ <h> System Properties <p> The Quaqua Look and Feel supports the system properties listed below . You may notice , that the list also contains some properties defined in Apple 's Release Notes for their Java Virtual Machines . These properties are listed here , because they directly affect the appearance and behaviour of the Quaqua Look and Feel . <p> Note 1 : In addition to the system properties shown here , you can also preset all of Quaqua 's General and DebugUIManager Properties using System Properties . <p> Note 2 : In restricted environments ( e.g. Applet 's ) you can set System Properties using the **27;0;TOOLONG method . This will only work with properties which have a Quaqua. prefix though . <h> Common Properties <p> Property <p> Default Value <p> Notes <p> Quaqua . design <p> auto <p> Chooses a design for the look and feel . Set this to panther , jaguar or tiger to enforce a specific design . <p> You should use this property for testing purposes only . For production use , it is not recommended , to set a different design @ @ @ @ @ @ @ @ @ @ Quaqua . opaque <p> false <p> Most of Quaqua 's components are translucent in order to render focus rings and JTabbedPane 's properly . <p> Set this to true , if your application does n't render properly with non-opaque components , and you do n't want to invest the time to make your application support translucent components . <p> Quaqua . requestFocusEnabled <p> false <p> On Mac OS X , only text components request focus when the user clicks on them . <p> Set this to true , if your application code expects that most components request focus , when the user clicks on them . <p> Specifies the margin ( java.awt.Insets ) around the visually perceived borders of a component and its clip bounds . <p> Set the insets to a smaller value , if your layouts grow too big , and you do n't want to invest the time for fine tuning the visual margin of individual components using the client property **29;29;TOOLONG . <p> Quaqua . enforceVisualMargin <p> false <p> Enforces the visual margin around components . Set this to true to work around NetBeans Matisse issue @ @ @ @ @ @ @ @ @ @ this to true , to prevent Quaqua from loading its JNI library on its own . <h> Properties for Java 1.6 only <p> Property <p> Default Value <p> Notes <p> Quaqua.Table . useJ2SE5MouseHandler <p> false <p> Set this to true , if you do n't need drag and drop support in JTable . <p> Quaqua currently uses the mouse handler from the Basic look and feel , because it does not implement yet drag and drop for JTable . <p> ( Hopefully ) in a future version , Quaqua will implement drag and drop handling on its own . <h> Properties for Java 1.5 only <p> Property <p> Default Value <p> Notes <p> Quaqua.FileChooser . autovalidate <p> true <p> Makes JFileChooser 's automatically validate the contents of a directory , when the user clicks at it . Set this to false , if you experience performance problems , e.g. when using JFileChooser 's to choose files from large directories ( &gt; 1000 entries ) over a slow network connection . <p> Quaqua.FileChooser . quickLookEnabled <p> true <p> Displays a file preview using Apple 's QuickLook API . Set this to @ @ @ @ @ @ @ @ @ @ Quaqua <p> . tabLayoutPolicy <p> auto <p> Chooses a default layout policy for tabbed panes . Set this to wrap or to scroll . <p> auto will result in wrap tab layout policy for the Jaguar design and scroll layout policy for the Panther and the Tiger design . <p> Chooses a design for tabbed panes . Set this to panther or to jaguar to enforce a specific design . <p> Quaqua.TextComponent . autoSelect <p> true <p> If set to true , text components automatically select all text , when the user presses the tabulator key to set the focus on the field . This affects JTextField , JPasswordField and JFormattedTextField . <p> apple.laf . useScreenMenuBar <p> false <p> Puts Swing menus in the Mac OS X menu bar . Note that JMenuBars in JDialogs are not moved to the Mac OS X menu bar . <p> apple.awt . brushMetalLook <p> false <p> Displays JFrame 's with the " textured " Aqua window appearance . <p> apple.awt . showGrowBox <p> true <p> Most native Mac OS X windows have a resize control in the bottom-right corner . By default , @ @ @ @ @ @ @ @ @ @ show this control , but there may be circumstances where you want it to be hidden . This property is used to decide if the grow box is shown or not . 
@@24629289 @4629289/ <h> ASDG Inc . <h> Girl to Dog <p> This ANIM was created with ASDG 's MorphPlus . MorphPlus is a stand-alone program which is compatible with all Art Department Professional(R) modules . <p> GIRL2DOG shows off a morph between a girl and dog . There are a number of attributes to this morph which only MorphPlus is capable of producing . <p> The generation of the text and dropshadow and the placement of images onto the backdrop were done in FRED , the ADPro/MorphPlus FRame EDitor . The final images were compiled into an ANIM file using an Ordered dither . <p> Other MorphPlus Info <p> MorphPlus is a professional cinematic visual effects package . It is currently in use in television and cinematic productions , replacing high end systems running on various platforms . <p> For example , it has been used for several key scenes from the pilot TV movie Babylon 5 as well as a recent episode ( November 10 , 1992 ) of Quantum Leap . At the time of this writing ( January 18 , 1993 ) , MorphPlus has been used in @ @ @ @ @ @ @ @ @ @ television shows . <p> Since its release on October 1st 1992 , the major Amiga software distributors in North America report that MorphPlus has outsold any competing product . <p> The opinions of noted experts in the field : <p> The user interface on MorphPlus is one of the easiest I 've seen . Setting up a morph is very fast and rendering it is equally as fast . I feel that this program is on par with other programs like those from PDI and ILM. + <p> Peter W. Moyer Vice President/Post Production The Post Group <p> The Post Group is the largest privately held post production facility in the world . <p> It 's scarily realistic . MorphPlus produces the most realistic shape shifting special effects I have ever seen on a desktop . MorphPlys was the perfect solution to create the complex morphing sequences that Babylon 5 required. + <p> Mark Swain , Animator Foundation Imaging <p> Foundation Imaging are the creators of the special effects for Babylon 5 . <p> Many of the advanced features found in MorphPlus ( and available nowhere else ) are present @ @ @ @ @ @ @ @ @ @ is designed for ( and partly by ) professionals in the industry . As a result , we believe our product will produce the best results with the least effort in any production environment . <p> MorphPlus 's morphing program manages four types of projects . These are : 
@@24629291 @4629291/ <p> Runtime requirements for tutorials are low : HTML , JavaScript and Cookies are all that is needed . <p> TinyLMS supports layered organization of learning content in addition to the hierarchical organization of learning content specified by SCORM . <p> TinyLMS can be used as a SCORM-to-SCORM adapter . This can be used to aggregate fine grained learning content into one big SCO . <h> What is SCORM ? <p> The Sharable Content Object Reference Model ( SCORM ) defines a Web-based learning " Content Aggregation Model " and " Run-time Environment " for learning objects . At its simplest , it is a model that references a set of interrelated technical specifications and guidelines designed to meet the following high-level requirements for Web-based learning content : <p> Content reusability : SCORM tutorials are aggregations of " Sharable Content Object 's " ( SCO ) . A SCO is a single web page or a sequence of web pages containing learning content . SCORM enables the integration of existing SCO 's into new tutorials . <p> Accessibility : SCORM tutorials are accessible over the web . To run @ @ @ @ @ @ @ @ @ @ supporting ECMAScript 1.0 ( aka JavaScript 1.0 ) and frames . Information about the tutorial is available through metadata . All metadate is stored in XML documents . <p> Durability : SCORM is based on open Internet standards like HTML , ECMAScript and HTML . <p> Interoperability : Interoperability is specified for the metadata , and for the API of SCO 's and the runtime environment . <p> SCORM was developed by the Advanced Distributed Learning Initiative ( ADL ) . See www.adlnet.org for more information about SCORM . <h> Known Issues <p> TinyLMS does not pass the SCORM RTE-1 self-test because of its limited persistence capabilities . During a user session , TinyLMS uses an in-memory database for all data entries . Long term persistence is achieved using Cookies . Unfortunately Cookies do not provide enough space to store all data entries . If a course consists of exactly one SCO , TinyLMS is capable of storing the cmi.core.lessonstatus and the cmi.core.lessonlocation . If a course contains more than one SCO , TinyLMS stores the cmi.core.lessonstatus only . <h> System requirements <p> TinyLMS consists of two parts : the @ @ @ @ @ @ @ @ @ @ the course builder you need to have Java 1.5 ( or above ) on your computer . The course builder is known to run on Mac OS X and on Windows . It is supposed to run on many other operating systems as well . Including Linux , Solaris , AIX and OS/2 . <p> To runtime environment needs a browser supporting HTML , JavaScript and Cookies . There is no need for a server software . Thus tutorials generated with TinyLMS can be sent as a Mail attachmen , or can be run from CD ROM or any other read only media . <p> The runtime environment is known to run with recent versions of Internet Explorer and Safari on Mac OS X and on Windows . The run time environment is supposed to run with many different browsers and on many other operating systems as well . 
@@24629292 @4629292/ <h> Floating Point <p> The following text is a replica of chapter 7.2 of the Intel Architecture Software Developer 's Manual Volume 1 : Basic Architecture . If you are interested in the complete manual you can download it from http : //www.intel.com , Order Number 243190. <h> 1 . Real Numbers and Floating-Point Formats <p> This section describes how real numbers are represented in floating-point format in the IA FPU . It also introduces terms such as normalized numbers , denormalized numbers , biased exponents , signed zeros , and NaNs. <h> 1.1 Real Number System <p> As shown in Figure 1 , the real-number system comprises the continuum of real numbers from minus infinity ( -GP ) to plus infinity ( +GP ) . <p> Figure 1 : Binary Real Number System <p> Because the size and number of registers that any computer can have is limited , only a subset of the real-number continuum can be used in real-number calculations . As shown at the bottom of Figure 1 , the subset of real numbers that a particular FPU supports represents an approximation of the real @ @ @ @ @ @ @ @ @ @ subset is determined by the format that the FPU uses to represent real numbers . <h> 1.2 Floating-Point Format <p> To increase the speed and efficiency of real-number computations , computers or FPUs typically represent real numbers in a binary floating-point format . In this format , a real number has three parts : a sign , a significand , and an exponent.Figure 2 shows the binary floating-point format that the IA FPU uses . This format conforms to the IEEE standard . <p> Figure 2 : Binary Floating-Point Format <p> The sign is a binary value that indicates whether the number is positive ( 0 ) or negative ( 1 ) . The significand has two parts : a 1-bit binary integer ( also referred to as the J-bit ) and a binary fraction . The J-bit is often not represented , but instead is an implied value . The exponent is a binary integer that represents the base-2 power that the significand is raised to . <p> Table 1 shows how the real number 178.125 ( in ordinary decimal format ) is stored in floating-point format . The @ @ @ @ @ @ @ @ @ @ to the single-real , 32-bit floating-point format ( which is one of the floating-point formats that the FPU supports ) . In this format , the significand is normalized ( refer to Section Normalized Numbers ) and the exponent is biased ( refer to Section Biased Exponent ) . For the single-real format , the biasing constant is +12710 . <p> Notation <p> Value <p> Ordinary Decimal <p> 178.125 <p> Scientific Decimal <p> 1.78125 E 102 <p> Scientific Binary <p> 1.0110010001 E 2111 <p> Scientific Binary ( Biased Exponent ) <p> 1.0110010001 E 210000110 <p> Single-Real Format <p> Sign <p> Biased Exponent <p> Normalized Significand <p> 0 <p> 10000110 <p> 01100100010000000000000 ( 1 . implied =&gt; J-Bit ) <p> Table 1 . Real Number Notation <h> 1.3 Normalized Numbers <p> In most cases , the FPU represents real numbers in normalized form . This means that except for zero , the significand is always made up of an integer of 1 and the following fraction : <p> 1. fff ... ff <p> For values less than 1 , leading zeros are eliminated . ( For each leading zero eliminated , @ @ @ @ @ @ @ @ @ @ numbers in normalized form maximizes the number of significant digits that can be accommodated in a significand of a given width . To summarize , a normalized real number consists of a normalized significand that represents a real number between 1 and 2 and an exponent that specifies the number 's binary point . <h> 1.4 Biased Exponent <p> The FPU represents exponents in a biased form . This means that a constant is added to the actual exponent so that the biased exponent is always a positive number . The value of the biasing constant depends on the number of bits available for representing exponents in the floating-point format being used . The biasing constant is chosen so that the smallest normalized number can be reciprocated without overflow . For 32-bit real numbers the bias of the exponent is +12710. <h> 1.5 Real Number and Non-number Encodings <p> A variety of real numbers and special values can be encoded in the FPU+s floating-point format . These numbers and values are generally divided into the following classes : <p> Signed zeros . <p> Denormalized finite numbers . <p> Normalized finite @ @ @ @ @ @ @ @ @ @ Indefinite numbers . <p> ( The term NaN stands for " Not a Number . " ) <p> Figure 3 shows how the encodings for these numbers and non-numbers fit into the real number continuum . The encodings shown here are for the IEEE single-precision ( 32-bit ) format , where the term " S " indicates the sign bit , " E " the biased exponent , and " F " the fraction . ( The exponent values are given in decimal . ) The FPU can operate on and/or return any of these values , depending on the type of computation being performed . The following sections describe these number and non-number classes . <p> Figure 3 : Real Numbers and NaNs <h> 1.6 Signed Zeros <p> Zero can be represented as a +0 or a -0 depending on the sign bit . Both encodings are equal in value . The sign of a zero result depends on the operation being performed and the rounding mode being used . Signed zeros have been provided to aid in implementing interval arithmetic . The sign of a zero may indicate @ @ @ @ @ @ @ @ @ @ indicate the sign of an infinity ( - ) that has been reciprocated. <h> 1.7 Normalized and Denormalized Finite Numbers <p> Non-zero , finite numbers are divided into two classes : normalized and denormalized . The normalized finite numbers comprise all the non-zero finite values that can be encoded in a normalized real number format between zero and infinity ( GP ) . In the single-real format shown in Figure 3 , this group of numbers includes all the numbers with biased exponents ranging from 1 to 25410 ( unbiased , the exponent range is from -12610 to +12710 ) . <p> When real numbers become very close to zero , the normalized-number format can no longer be used to represent the numbers . This is because the range of the exponent is not large enough to compensate for shifting the binary point to the right to eliminate leading zeros . <p> When the biased exponent is zero , smaller numbers can only be represented by making the integer bit ( and perhaps other leading bits ) of the significand zero . The numbers in this range are called denormalized @ @ @ @ @ @ @ @ @ @ zeros with denormalized numbers allows smaller numbers to be represented . However , this denormalization causes a loss of precision ( the number of significant bits in the fraction is reduced by the leading zeros ) . <p> A denormalized number is computed through a technique called gradual underflow . Table 2 gives an example of gradual underflow in the denormalization process . Here the single-real format is being used , so the minimum exponent ( unbiased ) is -12610 . The true result in this example requires an exponent of -12910 in order to have a normalized number . Since -12910 is beyond the allowable exponent range , the result is denormalized by inserting leading zeros until the minimum exponent of -12610 is reached . <p> It provides the floating-point underflow exception to permit programmers to detect cases when denormals are created . <p> It provides the floating-point denormal-operand exception to permit procedures or programs to detect when denormals are being used as source operands for computations . <p> When a denormal number in single- or double-real format is used as a source operand and the denormal exception is @ @ @ @ @ @ @ @ @ @ is converted to extended-real format . <h> 1.8 Signed Infinities <p> The two infinities , +GP and -GP , represent the maximum positive and negative real numbers , respectively , that can be represented in the floating-point format . Infinity is always represented by a zero significand ( fraction and integer bit ) and the maximum biased exponent allowed in the specified format ( for example , 25510 for the single-real format ) . <p> The signs of infinities are observed , and comparisons are possible . Infinities are always inter-preted in the affine sense ; that is , -GP is less than any finite number and +GP is greater than any finite number . Arithmetic on infinities is always exact . Exceptions are generated only when the use of an infinity as a source operand constitutes an invalid operation . <p> Whereas denormalized numbers represent an underflow condition , the two infinity numbers represent the result of an overflow condition . Here , the normalized result of a computation has a biased exponent greater than the largest allowable exponent for the selected result format . <h> 1.9 NaNs <p> @ @ @ @ @ @ @ @ @ @ the real number line . In Figure 3 , the encoding space for NaNs in the FPU floating-point formats is shown above the ends of the real number line . This space includes any value with the maximum allowable biased exponent and a non-zero fraction . ( The sign bit is ignored for NaNs . ) <p> The IEEE standard defines two classes of NaN : quiet NaNs ( QNaNs ) and signaling NaNs ( SNaNs ) . A QNaN is a NaN with the most significant fraction bit set ; an SNaN is a NaN with the most significant fraction bit clear . QNaNs are allowed to propagate through most arithmetic operations without signaling an exception . SNaNs generally signal an invalid-operation excep&amp;shytion whenever they appear as operands in arithmetic operations . <h> 1.10 Indefinite <p> For each FPU data type , one unique encoding is reserved for representing the special value indefinite . For example , when operating on real values , the real indefinite value is a QNaN . The FPU produces indefinite values as responses to masked floating-point exceptions . 
@@24629293 @4629293/ <h> setDoctype <p> void **27;60;TOOLONG doctype ) <p> Sets the doctype for the XML document . <h> openElement <p> void **28;89;TOOLONG tagName ) <p> Adds a new element to the DOM Document and opens it . The new element is added as a child to the current element in the DOM document . Then it becomes the current element . The element must be closed using closeElement. <h> closeElement <p> void closeElement() <p> Closes the current element of the DOM Document . The parent of the current element becomes the current element . <p> Throws : <p> **34;119;TOOLONG - if the provided tagName does not match the tag name of the element . <h> addComment <p> void **27;155;TOOLONG comment ) <p> Adds a comment to the current element of the DOM Document . <h> addText <p> void addText ( java.lang.String text ) <p> Adds a text to current element of the DOM Document . Note : Multiple consecutives texts will be merged . <h> addAttribute <h> addAttribute <p> Adds an attribute to current element of the DOM Document if it is different from the default value . <h> writeObject @ @ @ @ @ @ @ @ @ @ object . <p> Throws : <p> java.io.IOException <h> getPrototype <p> java.lang.Object getPrototype() <p> Returns a prototype for the object currently being written . This can be used , to reduce the amount of data written to DOMOutput . For example , by not writing object attributes , which have the same values as the prototype . 
@@24629294 @4629294/ <h> Reading CMYK JPEG images with Java ImageIO <p> by werner on August 15th , 2011 <p> As mentioned in an earlier article , I have written a reader for JPEG images with CMYK color data in Java . <p> This reader can be used with Java ImageIO . I have made a demo including source code : CMYKDemo.jar . You can download this file and then double click it to run the demo . The demo is a window onto which you can drop a CMYK image . You can unzip the file to get the source code . <p> Here is how to use the CMYKJPEGImageReader with ImageIO : <p> Register the reader with ImageIO.This can be done by putting the file CMYKDemo.jar into the class path.Alternatively if you want to build the reader from source and integrate it into your own . jar file you can create a file named LONG ... and put it in the class path . <p> The file should contain the following line : <p> LONG ... <p> Read an image with ImageIO.Unfortunately , the ImageIO.read method is not a reliable @ @ @ @ @ @ @ @ @ @ ; <p> This does not work , because ImageIO already provides a JPEG image reader . There is no way to specify in which order the readers shall be used . So , sometimes , ImageIO will use our CMYKJPEGImageReader and succeed , and sometimes it will try to use its own reader , and fail . <p> Therefore , we need to use the following code snippet , which tries out all JPEG readers until it succeeds . <p> Thank you for making this CMYK reader . I 'm going to add it to the next version of jAlbum now . Seems to work great . The only glitch I found was that its slow at quickly grabbing metadata only from the images , but I could easily simply ignore your reader for that task and use Suns reader for metadata grabbing . <p> I am glad my CMYK reader is of use to you . I have not implemented meta-data reading in this class . So , ImageIO may have to jump through some hoops to get it . <p> I use my own specialized classes for EXIF meta-data @ @ @ @ @ @ @ @ @ @ it is in MultiShow ( available from my web-site ) . For a fast thumbnail-reader you may want to take a look at this nice article by Jeremy Woods . My implementation is very similar . <p> Hi . One user got multiple out of memory errors when using your reader . Here is the stack trace ( sorry , I do n't  have the image that causes ... at LONG ... at **31;242;TOOLONG <p> Thanks you so much ! Sun/Oracle should pay you for your effort . cant believe this but has been around for 8 years . I just discovered that JAI was not working on 64 Bit java , and was concerned I would not find an alternative . <p> Hi firstly thanks for this good post . I am trying to convert CMYK images to RGB images but with this code i always getting " Unsupported Image Type " exception its only me ? @ @ @ @ @ @ @ @ @ @ too . Thank You . <p> Hello . Thank you for making this CMYK reader . Thanks to your programs plus I understand how the JPG-file . I learned how to read it to segment how to handle markers , how to read it ICC-profile and use it to convert the color space . 
@@24629300 @4629300/ <h> Fun with Rubik 's Cube <h> Pretty Patterns <p> Browse this huge collection of Pretty Patterns by Walter Randelshofer . It features over 4,300 patterns for cube models with up to 7 layers such as the Pocket Cube , Rubik 's Cube , Rubik 's Revenge , Professor 's Cube , V-Cube 6 and V-Cube 7 , but also patterns for the Pyraminx and Master Pyraminx . <p> Most scripts are optimized for layer-turn metric ( ltm ) , face-turn metric ( ftm ) and quarter-turn metric ( qtm ) . Move counts which are optimal in a given metric are marked with an * asterisk . <p> Algorithms of high order cubes are measured in block-turn metric ( btm ) . <h> Superset ENG Notation <p> The Superset ENG notation ( SSE ) is a powerful notation for cube models of any size . The notation is based on the book ' Inside Rubik 's Cube and Beyond ' by Christoph Bandelow , 1982 BirkhSuser Verlag , Boston . <p> The SSE notation supports 90 and 180 twists of single layers , moves of grouped layers ( @ @ @ @ @ @ @ @ @ @ whole cube can be rotated along its face axes , edge axes and corner axes . Permutation and orientation changes of individual cube parts can be specified using permutation cycles . <h> Algorithm Viewers <h> Script Applets <p> When the page has opened , change the script in the address field of the browser , and press enter ! <h> ACube Viewer <p> The ACube Viewer is a graphical tool to display the state of the cube described in Josef Jelinek 's ACube notation . <h> NxNxN Cube Solvers <h> Super Cube Solver <p> Super Cube Solver by AndrT Boulouard solves 2x2x2 thru 7x7x7 cubes from a scramble algorithm in SSE or WCA notation . In addition a powerful ' Orbit Solver ' delivers short solutions for any orbit . This extended version finds shorter solutions by using more than 6 times larger databases . <h> Orbit Solver <p> Orbit Solver , the predecessor of ' Super Cube Solver ' , provides algorithms for NxNxN cubes within a chosen orbit . Cycles can be entered in form of permutations . <h> Algorithm Finders <h> Algorithm Picker <p> Algorithm Picker offers @ @ @ @ @ @ @ @ @ @ are scalable and can be adapted to other NxNxN cubes . <h> Algorithm Finder Lite <p> Algorithm Finder Lite is an advanced on-line tool for NxNxN cubes to search for structured algorithms . It includes two distinct finders that can be used alternately . 
@@24629301 @4629301/ <h> CubeTwister , CubePlayer , VirtualCube <h> License <h> Table of Contents <h> Disclaimer <p> Use of the CubeTwister is entirely at your own risk . I will not be liable for any data loss , hardware damage or whatever this program might cause . <p> Permission to use this release of CubeTwister is granted provided you agree with its license terms , that the license fee is paid and the copyright notice and this license notice appear in all copies and in supporting documentation . <p> The license terms applies to the version of CubeTwister , which is stated at the top of this document . Different versions may have different license terms . <p> The license terms of the CubeTwister do not apply to third party libraries , which are included with the CubeTwister . <h> License Fee <p> Use of CubeTwister is free for personal use . If you have a feature request or if you want to honour my work for CubeTwister , send me a bottle of good wine . 
@@24629302 @4629302/ <p> isMultiline - Set this to true , if the TextHolderFigure can hold multiple lines of text . If this is true , multiple lines of text are added to the same figure . If this is false , a new Figure is created for each line of text . <p> replace - Set this to true , if the contents of the file replaces the contents of the drawing ( for example , when loading a drawing from a file ) . Set this to false , to add the contents of the file to the drawing ( for example , when the file has been dropped into the drawing view ) . <p> replace - Set this to true , if the contents of the stream replaces the contents of the drawing ( for example , when loading a drawing from a stream ) . Set this to false , to add the contents of the file to the drawing ( for example , when the stream has been dropped into the drawing view ) . <p> replace - Set this to true , if the contents @ @ @ @ @ @ @ @ @ @ for example , when loading a drawing from a transferable ) . Set this to false , to add the contents of the transferable to the drawing ( for example , when the transferable has been dropped or pasted into the drawing view ) . 
@@24629303 @4629303/ <h> Writing QuickTime movies in pure Java <p> by werner on October 7th , 2010 <p> In my article Writing QuickTime videos in pure Java , I said I would integrate audio support if I would get the right incentives ( wine or books ) . - This has happened , and so I have implemented an all new class named QuickTimeWriter , which supports writing of audio and video data into a QuickTime Movie file in pure java . <p> The class is still in a very early stage . Right now , it can be used for combining a single audio track with a single video track . <p> Audio has to be encoded before it can be written . I tried to make this as simple as possible by supporting **31;275;TOOLONG in one of the addAudioTrack() methods . <p> As with my previous implementation , QuickTimeWriter provides a minimal set of encoders for video data . It includes encoders for the following compression formats : PNG , Photo-JPEG , Apple Animation ( RLE ) and None ( Raw ) . Other encodings are possible , but @ @ @ @ @ @ @ @ @ @ QuickTimeWriter stores samples in the same sequence in the movie file as they are written . If a movie is created for further processing , the samples can be written in any order . If the movie shall be playable , samples of multiple tracks should be interleaved about twice per second . I have described this in more detail in the class comments . <p> I have also created a small demo program which shows how to put it all together : <p> Hello , I 'm trying to implement your class to use in a Android project , but as there is missing libraries from Java in Android SDK I cant make it work . Do you think it is easy to port it for Android ? What 's the possibility that you help me to do that ? <p> I have no experience with Android . But from looking at the Android API , I think a port to Android can be done in a few hours . It looks like there are corresponding classes in Android for everything that the QuickTimeWriter needs . <p> Contact me by e-mail @ @ @ @ @ @ @ @ @ @ are willing to spend an amazon gift card or a bottle of wine for my services . 
@@24629304 @4629304/ <h> UIManager Properties <p> The following UIManager properties are unique to the Quaqua Look and Feel . <h> Component Specific Properties <p> Property <p> Default Value <p> Notes <p> FileChooser . autovalidate <p> true <p> Makes JFileChooser 's automatically validate the contents of a directory , when the user clicks at it . Set this to false , if you experience performance problems , e.g. when using JFileChooser 's to choose files from large directories ( &gt; 1000 entries ) over a slow network connection . <p> Button.opaque , <p> Panel.opaque , <p> TextField.opaque , <p> ToggleButton.opaque , <p> ... <p> false <p> Controls the default opaqueness of components . Set this to true if your application logic depends on components being opaque . <p> CheckBox <p> . enforceVisualMargin , <p> RadioButton <p> . enforceVisualMargin <p> false <p> Enforces the visual margin on the specified component , if set to true . <p> ComboBox <p> . maximumRowCount <p> 100 <p> Sets the maximum row count for the combo box popup . <p> ComboBox . harmonizePreferredHeight <p> false <p> Set this to true , to get the same preferred height @ @ @ @ @ @ @ @ @ @ in better layouts with some layout managers . <p> List . alternateBackground <p> .0 <p> List . alternateBackground.1 <p> These properties define the background colors ( java.awt.Color ) used for drawing alternating row colors in lists . <p> OptionPane <p> . messageLabelWidth <p> 360 <p> Sets the width for HTML messages displayed in an option pane . Set this to 0 to prevent Quaqua from enforcing the width . <p> OptionPane <p> . **25;308;TOOLONG <p> 60 <p> Sets the maximum number of characters in text messages displayed in an option pane . Set this to Integer.MAXVALUE if you want the width of method JOptionPane. **29;335;TOOLONG being used instead . <p> RootPane . windowSnapDistance <p> 10 <p> Sets the distance up to which windows snap to the edges of each other and to the edges of the screen . Setting this to 0 or less , turns snapping off . <p> Note : Snapping is only in effect for look and feel decorated windows . <p> RootPane . **25;366;TOOLONG <p> false <p> Default value for the client property " **35;393;TOOLONG " . Setting this to true makes all windows , which @ @ @ @ @ @ @ @ @ @ display area . This is only in rare cases desirable , for example , when only display components are on a window . <p> ScrollBar . placeButtonsTogether <p> This boolean property defines the placement of scroll bar buttons . The default value is retrieved from the Appearance panel of the Mac OS X System Preferences . <p> Table . alternateBackground .0 <p> Table . alternateBackground .1 <p> These properties define the background colors ( java.awt.Color ) used for drawing alternating row colors in tables . <p> Tree . alternateBackground .0 <p> Tree . alternateBackground .1 <p> These properties define the background colors ( java.awt.Color ) used for drawing alternating row colors in trees . <p> TextField . autoSelect <p> PasswordField . autoSelect <p> FormattedTextField . autoSelect <p> Set this to Boolean.FALSE to prevent that all text is selected , when the user tabs into a JTextField , a JPasswordField or a JFormattedTextField . Note : You can set the Client property **31;430;TOOLONG to false or true , to override this locally . <p> The System property **31;463;TOOLONG determines the default value for these properties . <h> Font Properties <p> Property @ @ @ @ @ @ @ @ @ @ Guidelines Fonts guidelines for a description on how to use these fonts . <p> EmphasizedSystemFont <p> SmallSystemFont <p> **25;496;TOOLONG <p> MiniSystemFont <p> EmphasizedMiniSystemFont <p> ApplicationFont <p> LabelFont <p> ViewFont <p> MenuFont <h> Debugging Properties <p> Property <p> Notes <p> Quaqua.Debug . showClipBounds <p> Set this to true to display the clip bounds of Quaqua user interface delegates . <p> Quaqua.Debug . showVisualBounds <p> Set this to true to display the visual bounds of Quaqua user interface delegates . <p> Quaqua.Debug . **25;523;TOOLONG <p> Specifies the java.awt.Color used for drawing the component bounds when **29;550;TOOLONG is turned on . <p> Quaqua.Debug . textBoundsForeground <p> Specifies the java.awt.Color used for drawing the uppercase text bounds when **29;581;TOOLONG is turned on . <p> Quaqua.Debug . clipBoundsForeground <p> Specifies the java.awt.Color used for drawing the clip bounds when **27;612;TOOLONG is turned on . 
@@24629305 @4629305/ <h> bringToFront <h> sendToLayer <p> Sends a figure to a certain layer within a drawing . Each figure lays in a unique layer and the layering order decides which figure is drawn on top of another figure . Figures with a higher layer number have usually been added later and may overlay figures in lower layers . Layers are counted from to ( the number of figures - 1 ) . The figure is removed from its current layer ( if it has been already part of this drawing ) and is transferred to the specified layers after all figures between the original layer and the new layer are shifted to one layer below to fill the layer sequence . It is not possible to skip a layer number and if the figure is sent to a layer beyond the latest layer it will be added as the last figure to the drawing and its layer number will be set to the be the one beyond the latest layer so far . <h> draw <h> draw <h> lock <p> void lock() <p> Acquires the drawing lock . <h> unlock @ @ @ @ @ @ @ @ @ @ init <p> void init ( java.awt.Rectangle viewRectangle ) <p> Used to optimize rendering . Rendering of many objects may be slow until this method is called . The view rectangle should at least approximately enclose the CompositeFigure . If the view rectangle is too small or too large , performance may suffer . 
@@24629307 @4629307/ <h> JRootPane ( JFrame , JDialog and floating palette windows ) <h> Client properties : <p> Specifies whether the parent JFrame/JDialog of the JRootPane is used as a palette window . Works only when the JRootPane decorates a JFrame/JDialog . <p> **26;641;TOOLONG <p> Boolean <p> Specifies whether the title bar shall be placed vertically or horizontally . Works only when the JRootPane decorates a JFrame/JDialog . <p> Window . alpha <p> Float <p> Sets the transparency of the window . <p> Window . documentFile <p> File <p> Shows the icon of the file in the title bar . <p> Window <p> . documentModified <p> Boolean <p> Sets the window modified indicator in the title bar . <p> Window <p> . shadow <p> Boolean <p> Sets the shadow of the window . <p> Window <p> . style <p> java.lang.String <p> Values : " regular " , " small " <p> windowModified <p> Boolean <p> Sets the window modified indicator in the title bar ( deprecated ) . <h> UIManager properties : <p> Property <p> Type <p> Notes <p> **27;669;TOOLONG <p> Integer <p> Specifies the distance up to which windows snap @ @ @ @ @ @ @ @ @ @ of the screen . Setting this to a value to 0 or smaller , disables window snapping . <p> Note : Snapping is only in effect for look and feel decorated windows . <p> Note : Users can hold down the Alt-Key while moving a window to prevent snapping . <p> RootPane . **25;698;TOOLONG <p> Boolean <p> Default value for the client property " **35;725;TOOLONG " . Setting this to true makes all windows , which have a translucent area , draggable by all of their display area . This is only in rare cases desirable , for example , when only display components are on a window . <h> Client property : windowModified <p> Sets whether the document contained in the window has been modified and not saved yet . <p> You should set this property with an argument of Boolean.TRUE every time the windows document changes in such a way that it needs to be saved and with an argument of Boolean.FALSE every time it gets saved . Then , before closing the window you can use getClientProperty ( " windowModified " ) to determine whether to allow @ @ @ @ @ @ @ @ @ @ These properties are only in effect , when the JRootPane decorates the JFrame/JDialog . <p> Setting the property **25;762;TOOLONG to true makes the title bar of the JFrame/JDialog always draw in the active state . <p> Setting the property **26;789;TOOLONG to true places the title bar of the JFrame/JDialog on the left instead of on the top . <p> Floating palettes work best , when the font size of the JRootPane is set to 11 or to 9 . Font size 11 results in a small sized title bar . This is useful if you want to display a title in the title bar . Font size 9 is useful , if no title shall be displayed . Instead of setting the font size , you can set the client property JComponent.sizeVariant . <p> The following code snippet shows how to use the client properties and the font size : 
@@24629310 @4629310/ <h> DefaultDrawing <h> basicAdd <p> Adds a child to the figure at the specified index without firing events . <p> This method can be used to reinsert a child figure which has been temporarily removed from this CompositeFigure ( for example to reorder the sequence of the children ) and to efficiently build a drawing from an InputFormat. <h> drawFill <p> This method is called by method draw() to draw the fill area of the figure . AttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> drawStroke <p> This method is called by method draw() to draw the text of the figure . AttributedFigure configures the Graphics2D object with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . 
@@24629312 @4629312/ <h> Tab Layout Policy <p> The Quaqua Look and Feel supports tabbed panes with the " wrap " tab layout policy and the " scroll " tab layout policy . <p> Tabbed panes with " wrap " layout policy work best , when used in conjuction with the Jaguar design , as used by Mac OS X 10.2 and earlier versions : <p> Tabbed panes with " scroll " layout policy work best , when used with the Panther and Tiger designs as used by Mac OS X 10.3 and later versions : <p> The default layout policy is determined at startup . For the Jaguar design , the default layout policy is " wrap " , for other designs , the default layout policy is " scroll " . You can explicitly specific the default layout policy by setting the system property Quaqua.tabLayoutPolicy to wrap or to scroll . If you want Quaqua to determine the design automatically , do n't  ' set this property , or specify the value auto . <p> System.setProperty ( <p> " Quaqua.tabLayoutPolicy " , " wrap " <p> ) ; <p> The @ @ @ @ @ @ @ @ @ @ fit into a single run . The " wrap " layout policy stacks the tabs into multiple runs . The " scroll " layout policy first attempts to shorten the width of the tabs . If shortening is not possible , the tabs are put into a JComboBox . <p> Set the client property " **29;817;TOOLONG " to Boolean.false to prevent shortening . In this case , the tabs are either displayed fully or collapsed into a JComboBox . Shortening still happens for vertical tab runs . <p> JTabbedPane tp = new JTabbedPane() ; <p> LONG ... <p> tp.putClientProperty ( <p> " **29;848;TOOLONG " , Boolean.FALSE <p> ) ; <h> Regular and small sizes <p> Quaqua 's Jaguar tabbed panes supports regular and small sized tabbed panes . To get the small size style , set the font to Lucida Grande 11 . The regular size style uses the font Lucida Grande 13 . <p> JTabbedPane tp = new JTabbedPane() ; <p> tp.setFont ( <p> new Font ( " Lucida Grande " , Font.PLAIN , 11 ) <p> ) ; <h> TabbedPanes edge to edge <p> The image below shows @ @ @ @ @ @ @ @ @ @ the JFrame and an inner tabbed pane that does not do so . <p> To achive an edge to edge style , set the **29;879;TOOLONG property to negative values , until the border of the tabbed pane disappears on the right , left and bottom edge . <p> JTabbedPane tp = new JTabbedPane() ; <p> tp.putClientProperty ( <p> " **29;910;TOOLONG " , new Insets ( 3 , -3 , -4 , -3 ) <p> ) ; <h> Content border <p> The client property **38;941;TOOLONG can be used to switch the content border off . <p> JTabbedPane tp = new JTabbedPane() ; <p> tp.putClientProperty ( <p> LONG ... <p> ) ; <h> Content area <p> The insets and the background color of the content area of a JTabbedPane can be changed by specifiying the following client properties on the children of a JTabbedPane : **36;981;TOOLONG , **40;1019;TOOLONG . <p> JTabbedPane tp = new JTabbedPane() ; <p> JScrollPane child = new JScrollPane() ; <p> child.setBorder ( new EmptyBorder(0,0,0,0) ) ; <p> child.putClientProperty ( <p> " **36;1061;TOOLONG " , new Insets(0,0,0,0) <p> ) ; <p> child.putClientProperty ( <p> LONG ... <p> ) ; @ @ @ @ @ @ @ @ @ @ <p> The TabbedPaneChild properties are especially useful for placing a JScrollPane into a JTabbedPane with " scroll " tab layout policy . 
@@24629313 @4629313/ <h> Unsupported Attributes <p> The following attributes are not supported : <p> scriptmacros <p> id=script , ... <p> Defines macros for use in script and initscript . The identifier of the macro and the script assigned to the macro can be put into quotes . Since a script notation may make use of ' = ' and ' , ' , you can quote the i 'd and the script with a quote character of your choice , for example : " , ' , - . Default value : " " . <p> autoPlay <p> boolean <p> Set this to true , to start the player automatically . Default : " false " <p> cube <p> string <p> Name of a cube in the resource file . If you do n't specify this parameter , the default cube of the resource file is used . <p> debug <p> boolean <p> Set this to ' true ' to print debug informations on the console . Default : false . <p> displayLines <p> int <p> Number of lines of the Script display : set to 0 to switch the display off @ @ @ @ @ @ @ @ @ @ , for example " en " , " de " , " fr " . <p> notation <p> string <p> Name of a notation in the resource file . If you do n't specify this parameter , the default notation of the resource file is used . <p> resourceFile <p> URL <p> Address of a Cube Markup XML resource file . This file can be Zip-compressed to improve the startup time of the applet . The file extension must be . xml or . zip . <p> resourceData <p> xml <p> Cube Markup XML resource data . <p> scaleFactor <p> float <p> Scale factor . Default : " 1.0 " <p> scriptType <p> string <p> The type of the script : " solver " or " generator " . Default : " solver " . <p> scriptProgress <p> int <p> Position of the progress bar . Default value : end of script if scriptType is ' generator ' , 0 if script type is " solver " . <p> showPlayer <p> boolean <p> Set this to false , to hide the player . Default : true <p> showInfo <p> boolean @ @ @ @ @ @ @ @ @ @ field on the right of the player . Default : false <p> showController <p> boolean <p> Set this to false , to hide the controller of the player . Default : true 
@@24629314 @4629314/ <p> A tool to create a connection between two figures . The ConnectionFigure to be created is specified by a prototype . The location of the start and end points are controlled by Connectors . <p> To create a connection using the ConnectionTool , the user does the following mouse gestures on a DrawingView : <p> Press the mouse button inside of a Figure . If the ConnectionTool can find a Connector at this location , it uses it as the starting point for the connection . <p> Drag the mouse while keeping the mouse button pressed , and then release the mouse button . This defines the end point of the connection . If the ConnectionTool finds a Connector at this location , it uses it as the end point of the connection and creates a ConnectionFigure . <p> Version : <p> 4.2.1 2008-07-06 Method mouseReleased allowed to connect to figures even if **28;1099;TOOLONG , ) returned false . 4.2 2008-03-31 Added tow methods named canConnect() to this tool , so that subclasses can override the behavior . Made variables startConnector and endConnector protected instead of private . @ @ @ @ @ @ @ @ @ @ Reworked due to changes in ConnectionFigure interface . Removed split/join functionality for connection points . 3.1 2006-07-15 Added support for prototype class name . 3.0 2006-06-07 Reworked . 2.1 2006-03-15 When user is not pressing the mouse button , we use the mouse over view as the current view . 2.0.1 2006-02-14 Fixed drawing code . 2.0 2006-01-14 Changed to support double precision coordinates . 1.0 2003-12-01 Derived from JHotDraw 5.4b1. 
@@24629315 @4629315/ <h> How to do a fast Splash Screen in Java <p> Notice : This article has become obsolete with the new SplashScreen API that has been added to Java SE 6 . <p> There are many articles about doing Splash Screens in Java . Not all of them take performance seriously . This one does . <p> A splash screen is an image being shown on screen while an application is starting up . This article discusses how to create a splash screen that is shown very early in the process of starting a Java application . To achieve this we minimize the number of API classes needed to display the splash screen and we carefully avoid resource contention by the threads running in the JVM. <h> 1 . The Problem <p> Java applications often have very long initialization times . I am assuming , that we have already tried our best to reduce the startup latency of our application . But sometimes we reach a hard limit that we can not undercut . It takes a while until our application is ready , and there is nothing we @ @ @ @ @ @ @ @ @ @ a means to provide feedback to the user , telling that our application is starting up , and it also is a way to advertise our product . <p> At first glance , implementing a splash screen seems to be straightforward . The Swing API provides a rich set of classes to do this . Simply create a JWindow , put a JLabel with an ImageIcon on it , put the current Thread to sleep for 3 seconds and then continue loading the application ... <p> Unfortunately with such a nanve approach we not only end up increasing the start up latency of our application by the 3 seconds sleep time , we also happen to ' achieve ' that our splash screen shows up late in the initialization process of our application . And if the splash screen shows up late , it does not fulfil its job . <p> When we design a splash screen we have to take account of the following : <p> Class resolution . Before the Java Virtual Machine ( JVM ) can use a class , it has to load and initialize all @ @ @ @ @ @ @ @ @ @ special measures taken , the JVM loads and initializes all application classes before it starts to execute our splash screen code . This may take up a considerable amount of time . <p> Size of API 's . Displaying " Hello World " using Swing involves the loading of roughly 800 API classes into the JVM . Doing the same using AWT only takes about 600 API classes . The less API classes we use for our splash screen , the shorter will be its start up latency . <p> Limited Resources . Displaying a splash screen is a CPU intensive task . We do not want the application initialization code to contend with the splash screen code over CPU resources . <p> Clean design . We want to keep the splash screen code separate from the initialisation code of our application . This enables us to test it separately , and to add or remove it to our liking without having to do much code changing . <h> 2 . Design Proposal <p> The proposed design consists of three classes : MyApplication , Splasher and SplashWindow . The diagram @ @ @ @ @ @ @ @ @ @ is our application class . SplashWindow contains all code required to do the fast splash screen . Class Splasher is the new entry point for MyApplication . The numbers indicate the sequence of method invocations . <h> 3 . Class MyApplication <p> MyApplication is our application class . It contains the long running initialisation code . To achieve a clear design , we keep this class free from our splash screen code . The only concession that we require is , that its main method must return once the application is up and running . <p> Here is an outline of the code of MyApplication.java . <p> public class MyApplication public static void main ( String args ) /* Start the application and return when it is ready to use . */ <p> Please note that we can launch the application without a splash screen by directly invoking the main method of this class . This is useful for testing and debugging . <p> Now let 's see how to add a splash screen to this class . <h> 4 . Class Splasher <p> Splasher is our bootstrap class . @ @ @ @ @ @ @ @ @ @ the application class code , and to keep class SplashWindow maintenance free . Class Splasher consists of a main method only , which does three things : <p> Open the splash window <p> Invoke the main method of class MyApplication <p> Close the splash window when the main method of MyApplication returns <p> Please note that we want to keep this class as small as possible . The size of this class and of the of classes referenced by this class directly influence the startup latency of our splash screen . <p> As you can see , this class consists only of code that delegates tasks to the SplashWindow class . <p> In fact , we could have moved all the code of this class into class SplashWindow . Why have n't I done so ? Class Splasher contains all the code that needs to be changed per application . That is , for each application we will be using another splash image , and the class name of the application will also be different . This keeps class SplashWindow free from application specific changes . It can be reused @ @ @ @ @ @ @ @ @ @ its code . <p> Also note , that we could have put all three method calls into a single call . But keeping each step of the initialization procedure separate , makes the procedure easier to understand . <h> 5 . Class SplashWindow <p> Now let 's take a look at class SplashWindow . This class and its interaction with the other two classes are the meat of this article . <p> I will show only the essential portions of this class , the full listing is available in the attachment . <h> 5.1 Method invokeMain() <p> First let 's take a look at method invokeMain() . Here we invoke the main() method of our application using , er , clumsy Reflection code . <p> new InternalError ( " Failed to invoke main method " ) ; error.initCause(e) ; throw error ; <p> Today , most Java VM 's lazily resolve and verify classes . At one time , on Mac OS X 10.1 , we had the case of an eagerly resolving Java VM . Without using Reflection , the main method of class Splasher was only executed , after the @ @ @ @ @ @ @ @ @ @ and the rest of the application , including of all API 's used by the application . <p> Reflection is a means to dynamically write code at runtime . Therefore , the dependency between our splash screen code and the application code will only be revealed to the Java VM , when the Class.forName() method is executed . Since class Splasher invokes method invokeMain() after it has invoked method splash() , the splash screen will be shown to the user , before such a resolution process can take place . <p> Reflection does not prevent though , that the Java VM loads all files of a JAR file and of dependent JAR files into memory before executing our code . If JAR file loading is a restricting performance factor ( e.g. because we load them over a slow network connection ) , we may want to put the Splasher class and the SplashWindow together with the splash image into a separate JAR file . In the manifest of the JAR file , we do not specify a dependency to the application JAR files . Instead , we change the invokeMain() @ @ @ @ @ @ @ @ @ @ the JAR files containing the application . <p> You may have noticed , that there are two splash methods : one that creates the image from the URL , and one that works with the SplashWindow instance . This is just because I like to keep methods short and simple . <p> In the first splash() method we use the AWT Toolkit class to create the image . We use this method instead of the new Image IO API , because it does not immediately load the image using the current thread . We will initiate image loading in the AWT Event Dispatcher thread later . I will come back to this topic further below in this article . <p> In the second splash() method , you see that an instance of the SplashWindow is created ( class SplashWindow is a subclass of java.awt.Window ) . Then , the instance is shown . And then , we wait in a synchronized block until the paint method of the instance has been called . <p> The last two steps are worth looking at closely . Showing the SplashWindow , starts the @ @ @ @ @ @ @ @ @ @ the paint method of the SplashWindow . We wait in the synchronized block until the painting has happened . <p> Why is there an if-statement which guards the synchronized block ? <p> We must not wait , if method splash() is called from the AWT Event Dispatcher thread . This would cause a live lock , which would hang our application . This check appears to be overkill , because we are calling this method from the Main thread anyway . I have added it , because I sometimes use the SplashWindow to display the about box of my application , and then I do n't want to care on which thread I am calling this method . <p> The check for the number of available processors is more interesting . <p> On a single processor machine , if we would n't wait here , and instead proceed with our start up process , we would compete for the CPU with the AWT Event Dispatcher thread . Since the AWT Event Dispatcher thread has not yet started , we are likely to win the competition , or in this case @ @ @ @ @ @ @ @ @ @ splash screen . In the worst case , the splash screen would not be shown at all . <p> On a multiple processor machine , we have a chance , that both threads will get a CPU of their own . In this case , we have an opportunity to maximize resource usage . Of course , it all depends on how independent the two threads are with respect to other resources they are using . Thus , on a multiprocessor machine , we take a small risk of delaying the splash screen by a little bit . In return for the risk , we get better overall performance . <h> 5.3 The constructor <p> The constructor of class SplashWindow makes the object ready for later usage . <p> In the first of the two splash() methods , we used **34;1129;TOOLONG to create the splash image . This did not actually load the image data into memory . We load it now synchronously using a MediaTracker . <p> Depending on the number of available processors , this is not the only thing that is going on . This is because @ @ @ @ @ @ @ @ @ @ ) waiting in the synchronized block in the second of the two splash() methods . <p> If we are running on a single CPU machine , the processing of the image is the only task that we want to work on now . If the image is contained in the same JAR file as the other splash screen classes , the Java VM has loaded it into memory already . All we have to do , is to decode the image . The time for this task is entirely CPU bound . Any attempt to work on more than one task now , would needlessly delay the splash screen . <p> On a machine with more processors , the loading will happen asynchronously to the Main thread , which we have sent off to launch the application . If all files are contained in the same JAR file , we are using one CPU entirely for loading the image and leaving other resources free for the application initialization procedure . <h> 5.4 The painting methods <p> And finally , let 's take a look at the methods which are responsible for @ @ @ @ @ @ @ @ @ @ method update() in class Window fills its display area with a background color before calling the paint() method . Since we are drawing an image that completely covers this area , we directly call paint() . This is done to avoid undesired flickering of the splash image . <p> In method paint() , we draw the image , and after this has happened the first time , we notify the Main thread of our application . As I have described further above , on a single CPU machine , the Main thread is patiently awaiting this notification in method splash() . This strategy ensures that , on a single CPU machine , the user is granted to see the splash window . <h> 6 . Conclusion <p> Doing a fast splash screen , requires that we carefully manage resources , so that tasks needed for displaying the splash screen are executed prior to other tasks . <p> This article has shown , how to use Reflection to shift the class resolution task behind the splash screen task , and how to keep the CPU resource(s) focused on the splash screen @ @ @ @ @ @ @ @ @ @ screen . <p> In side tracks of this article , we have covered additional issues , such as avoiding flickering , and how to take advantage of multiprocessor machines . <h> 7 . Possible enhancements <p> The splash screen described in this article is pretty much bare bone . If you like , you can extend it to display information about start up steps to the user . <p> To do this , remember that we have designed class SplashWindow using the Singleton design pattern . Thus you can add more static methods to class SplashWindow , which act on the Singleton instance . These static methods can be accessed from the main method of the MyApplication class ( and of any other methods involved in the start up procedure of our application ) . <p> This will have no negative impact on the class resolution and class loading issue , because the dependency is directed from the application code to the splash screen code , and not the other way round . <h> Chapters <h> Downloads <h> Related Documentation <p> Java Splash Screen.pdf by Roy Ratcliffe takes a in-depth @ @ @ @ @ @ @ @ @ @ splash screens . Also discusses when to use and not to use a splash screen . <h> Splash Screen for Applets <p> A technique for presenting a Splash screen in an Applet , is to override method paint() of the Applet , and to let method init() invoke a Runnable() or a SwingWorker() on a background thread . Once the background thread finishes , it adds components to the Applet which obscure the splash screen . <p> I am using this technique for Applets which have a relatively small download size ( less than 200 KB ) , but need a long time to initialize . <p> For a working example take a look at my RubikPlayer Applet and my VirtualCube Applets . Both applets show a copyright message during initalisation . The latter take a little bit longer to initialize , so you can see the splash screen longer . <h> Credits <p> I would like to thank Roy Ratcliffe for his valuable critique and input on both the code and this article . And , of course , for providing an excellent analysis of multi-threaded splash screens . @ @ @ @ @ @ @ @ @ @ suggestions and the through analysis of the splash screen code published in the first version of this article . <p> I would like to thank the Apple Java-Dev community who had an in-depth discussion about fast Splash Screens in Java . 
@@24629316 @4629316/ <h> Java2D Performance Comparison <p> I have devised an applet which can be used to compare the performance of the Java2D Graphics2D object with respect to other software rendering algorithms implemented in pure Java . <p> For the comparison , the Java2D Graphics2D object renders on a BufferedImage . All rendering hints are set to speed up the rendering performance . <p> The drawing algorithms used for comparison are a Bresenham line drawing algorithm and a Scan Fill algorithm taken from the following book : Hearn , D. , Baker , M. ( 1994 ) . Computer Graphics . Second Edition . New Jersey : Prentice Hall . <p> I have implemented a single-threaded version and a concurrent version of these algorithms . The concurrent version does not come from the book . I made it by myself . - I disabled the concurrent version temporarily - . <p> The algorithms render on a BufferedImage with a packed , integer RGB sample model . The " accelerationPriority " of the BufferedImage is set to 0 when running on a Java 1.5 VM . <p> Before you read the results @ @ @ @ @ @ @ @ @ @ . Either run some benchmarks or play around with some individual tests . <h> Results ( for version 0.15 of the applet ) <p> Here are some of the measured results on a Mac Mini with a 1.42 Ghz PPC G4 processor using Java 1.5.006 . <p> Java2D <p> Single-Threaded <p> Concurrent <p> drawLine 1,000 times <p> 17 <p> 43 <p> - <p> drawLine 1,000 times with alpha <p> 16 <p> 35 <p> - <p> drawLine 1,000 times antialiased <p> 12 <p> 24 <p> - <p> drawLine 1,000 times same color <p> 21 <p> 46 <p> - <p> drawLine 1,000 vert. /horiz . <p> 25 <p> 50 <p> - <p> drawLine 3,000 short lines <p> 18 <p> 41 <p> - <p> drawLine 3,000 short same color <p> 38 <p> 46 <p> - <p> drawRect 500 times <p> 20 <p> 43 <p> - <p> drawGeneralPath 400 times <p> 6 <p> 12 <p> - <p> fillRect 500 times <p> 15 <p> 14 <p> - <p> fillRect 250 times with alpha <p> 8 <p> 4 <p> - <p> fillRect 1,000 vert. /horiz . <p> 44 <p> 51 <p> - <p> fillPolygon 500 times @ @ @ @ @ @ @ @ @ @ 4 <p> 6 <p> - <p> fill GeneralPath 200 with alpha <p> 5 <p> 3 <p> - <p> Here the measured results on the same computer using Java 1.4.209 . <p> Java2D <p> Single-Threaded <p> Concurrent <p> drawLine 1,000 times <p> 17 <p> 60 <p> - <p> drawLine 1 ' 000 times with alpha <p> 17 <p> 47 <p> - <p> drawLine 1,000 times antialiased <p> 12 <p> 29 <p> drawLine 1,000 times same color <p> 20 <p> 59 <p> - <p> drawLine 1,000 vert. /horiz . <p> 26 <p> 62 <p> - <p> drawLine 3,000 short lines <p> 20 <p> 58 <p> - <p> drawLine 3,000 short same color <p> 40 <p> 58 <p> - <p> drawRect 500 times <p> 21 <p> 56 <p> - <p> drawGeneralPath 400 times <p> 6 <p> 15 <p> - <p> fillRect 500 times <p> 15 <p> 15 <p> - <p> fillRect 250 times with alpha <p> 8 <p> 8 <p> - <p> fillRect 1,000 vert. /horiz . <p> 43 <p> 64 <p> - <p> fillPolygon 500 times <p> 6 <p> 7 <p> fill GeneralPath 400 times <p> 4 <p> 6 <p> - <p> @ @ @ @ @ @ @ @ @ @ - <p> Here the measured results on the same computer using Java 1.3.116 . <p> Java2D <p> Single-Threaded <p> Concurrent <p> drawLine 1,000 times <p> 13 <p> 58 <p> - <p> drawLine 1 ' 000 times with alpha <p> 12 <p> 46 <p> - <p> drawLine 1,000 times antialiased <p> 8 <p> 29 <p> drawLine 1,000 times same color <p> 17 <p> 58 <p> - <p> drawLine 1,000 vert. /horiz . <p> 25 <p> 63 <p> - <p> drawLine 3,000 short lines <p> 11 <p> 61 <p> - <p> drawLine 3,000 short same color <p> 20 <p> 68 <p> - <p> drawRect 500 times <p> 26 <p> 48 <p> - <p> drawGeneralPath 400 times <p> 6 <p> 13 <p> - <p> fillRect 500 times <p> 12 <p> 15 <p> - <p> fillRect 250 times with alpha <p> 8 <p> 6 <p> - <p> fillRect 1,000 vert. /horiz . <p> 29 <p> 67 <p> - <p> fillPolygon 500 times <p> 6 <p> 5 <p> fill GeneralPath 400 times <p> 4 <p> 4 <p> - <p> fill GeneralPath 200 with alpha <p> 5 <p> 4 <p> - <h> Conclusion <p> I expected @ @ @ @ @ @ @ @ @ @ after all , Java2D is implemented using native code . <p> Interestingly , most single-threaded algorithms perform decently with respect to Java2D . In some cases they are much faster than Java2D . This means , that either there is still some potential for performance improvement in the Java2D rendering pipeline , or the JVM is so good , that drawing algorithms implemented in pure Java can compete with native code . <p> Also it is interesting to see that the single threaded comparison code performs much better with Java 1.3 and 1.4 than with Java 1.5 . <p> The concurrent algorithms perform worse on the Mac Mini than the other algorithms . This is what I expected , but I did n't expect them to be so much slower - so I conclude , I did n't implement the concurrent code very well . The concurrent algorithms are designed for multi-processor computers anyway . Unfortunately I have n't got such a computer at hand to see whether they can improve their performance relative to the other algorithms . <h> Downloads <p> Licensing : **28;1165;TOOLONG and **30;1195;TOOLONG code is derived @ @ @ @ @ @ @ @ @ @ may not use this code unless in accordance with the Sun SCSL license ! 
@@24629318 @4629318/ <h> Fun Stuff <h> Animations <p> The animation pages present a large collection of hand drawn and computer generated animations from the late eighties and early nineties . The majority of the animations have been created on Amiga and Atari ST computers . <h> Neko the Cat <p> The little kitten Neko chases the mouse cursor around the desktop . Once she 's over it and the mouse does n't move she 'll prepare to take a nap . If the mouse goes outside the desktop she will reach the border and try to dig for it . She 'll eventually give up , and fall asleep . <p> Neko.jar This is an executable Java file that you can download and double click to start . You can click on the cat to stop the program . <p> Neko is my adaptation of the open source Java Applet " Java Neko " by Chris Parent . See this Wikipedia article for more information about Neko . <h> Rubik 's Cube <p> The Rubik 's Cube pages feature a large collection of Pretty Patterns and Virtual Cubes created by popular @ @ @ @ @ @ @ @ @ @ to 7x7x7 models . All cubes are interactive , some can even be disassembled . <p> Animated Cubes are bringing them to life with with precomputed or real time generated algorithms . <p> This page also contains a bunch of cube tools such as Script Applets and powerfull solvers for NxNxN cubes . The fast Super Cube Solver by AndrT Boulouard solves 2x2x2 thru 7x7x7 cubes from a scramble algorithm in SSE or WCA notation . <h> Earth View <p> This is one of the first Java applets , I ever made . Use EarthView to view a wireframe model of the Earth from any angle you like . 
@@24629319 @4629319/ <p> isMultiline - Set this to true , if the TextHolderFigure can hold multiple lines of text . If this is true , multiple lines of text are added to the same figure . If this is false , a new Figure is created for each line of text . <p> replace - Set this to true , if the contents of the file replaces the contents of the drawing ( for example , when loading a drawing from a file ) . Set this to false , to add the contents of the file to the drawing ( for example , when the file has been dropped into the drawing view ) . <p> replace - Set this to true , if the contents of the stream replaces the contents of the drawing ( for example , when loading a drawing from a stream ) . Set this to false , to add the contents of the file to the drawing ( for example , when the stream has been dropped into the drawing view ) . <p> replace - Set this to true , if the contents @ @ @ @ @ @ @ @ @ @ for example , when loading a drawing from a transferable ) . Set this to false , to add the contents of the transferable to the drawing ( for example , when the transferable has been dropped or pasted into the drawing view ) . 
@@24629320 @4629320/ <p> The location of the start and end points of the bezier path is defined by Connector objects , which are supplied by the connected figures . <p> If a connected figure is removed , the connection figure needs to be removed as well . To achieve this , ConnectionFigure listens to figureRemoved events sent by the two figures that it connects , and then fires a requestRemove event to get removed as well . <p> The bezier path of the connection figure can be laid out using a Liner . <p> Design Patterns <p> Framework Two figures can be connected using a connection figure . The location of the start or end point of the connection is handled by a connector object at each connected figure . Contract : Figure , ConnectionFigure , Connector . <p> Strategy The control points of the bezier path of a connection figure can be laid out using different layout algorithms which are implemented by a liner object . Context : ConnectionFigure ; Strategy : Liner . <p> Strategy The location of the start and end points of a connection figure are determined @ @ @ @ @ @ @ @ @ @ Context : Figure , ConnectionFigure ; Strategy : Connector . <h> setLiner <p> Set a Liner object which encapsulated a lineout algorithm for this figure . Typically , a Liner accesses the child components of this figure and arranges their graphical presentation . 41272 @qwx241272 <p> newValue - encapsulation of a lineout algorithm . <h> lineout <p> void lineout() <p> A " lineout " algorithm is used to define how the child components should be laid out in relation to each other . The task for layouting the child components for presentation is delegated to a Liner which can be plugged in at runtime. 
@@24629321 @4629321/ <h> setDoctype <p> void **27;1227;TOOLONG doctype ) <p> Sets the doctype for the XML document . <h> openElement <p> void **28;1256;TOOLONG tagName ) <p> Adds a new element to the DOM Document and opens it . The new element is added as a child to the current element in the DOM document . Then it becomes the current element . The element must be closed using closeElement. <h> closeElement <p> void closeElement() <p> Closes the current element of the DOM Document . The parent of the current element becomes the current element . <p> Throws : <p> **34;1286;TOOLONG - if the provided tagName does not match the tag name of the element . <h> addComment <p> void **27;1322;TOOLONG comment ) <p> Adds a comment to the current element of the DOM Document . <h> addText <p> void addText ( java.lang.String text ) <p> Adds a text to current element of the DOM Document . Note : Multiple consecutives texts will be merged . <h> addAttribute <h> addAttribute <p> Adds an attribute to current element of the DOM Document if it is different from the default value . <h> writeObject @ @ @ @ @ @ @ @ @ @ object . <p> Throws : <p> java.io.IOException <h> getPrototype <p> java.lang.Object getPrototype() <p> Returns a prototype for the object currently being written . This can be used , to reduce the amount of data written to DOMOutput . For example , by not writing object attributes , which have the same values as the prototype . 
@@24629322 @4629322/ <h> Getting JMF to work with Java Web Start <p> JMF can sometimes be a beast . Its very hard to get it to work with Java Web Start applications because of the very peculiar way in which JMF accesses its configuration file jmf.properties . <p> The file jmf.properties is essential to JMF . Without it , JMF can not associate multiplexers and codecs to media objects . JMF looks for this file in directories denoted by the Java class path . Unfortunately the class path of Java Web Start applications only consists of JAR files . Since a JAR file is not a directory , JMF can not find the jmf.properties file , and thus can not function . <p> I dug a bit in the code of JMF , and found a way to load the jmf.properties by myself . Here is a code snippet showing how to locate and load it from inside the JAR file of my Java Web Start application : 
@@24629323 @4629323/ <p> An input format implements a strategy for reading a Drawing using a specific format from either an InputStream , an URI or a Transferable . <p> Typically the format can be recognized by a Mime type or by a file extension . To identify the format used by a file , an appropriate FileFilter for a javax.swing.JFileChooser component can be requested from InputFormat . <p> This interface intentionally contains many identical operations like OutputFormat to make it easy , to write classes that implement both interfaces . <h> read <p> replace - Set this to true , if the contents of the file replaces the contents of the drawing ( for example , when loading a drawing from a file ) . Set this to false , to add the contents of the file to the drawing ( for example , when the file has been dropped into the drawing view ) . <p> replace - Set this to true , if the contents of the stream replaces the contents of the drawing ( for example , when loading a drawing from a stream ) . Set this @ @ @ @ @ @ @ @ @ @ to the drawing ( for example , when the stream has been dropped into the drawing view ) . <h> read <p> Reads figures from the specified Transferable and adds them to the specified drawing . 41272 @qwx241272 <p> t - The Transferable . <p> drawing - The drawing . <p> replace - Set this to true , if the contents of the transferable replaces the contents of the drawing ( for example , when loading a drawing from a transferable ) . Set this to false , to add the contents of the transferable to the drawing ( for example , when the transferable has been dropped or pasted into the drawing view ) . 
@@24629324 @4629324/ <p> I created this port for scientific purposes . The port currently only encompasses a few core classes of pbrt-v2 and a small number of implementation classes . The currently supported statements in . pbrt files are listed here . <p> For most parts , the port closely follows the book . The biggest deviations are in the parser for the PBRT file format ( which is a " man-made " parser in this port and not a generated one ) , and in the avoidance of global states ( such as avoidance of api.cpp ) , allowing to render multiple scenes simultaneously in the same Java virtual machine . <p> References to book pages are given in many places in the code , which should help you to find your way around this Java port . References are given to both edition of the books , where applicable . <p> The source and binary distributions of this port include a graphical user interface which is not part of the original pbrt-v2 . I built the user interface on top of the JHotDraw 7 application framework and the Quaqua @ @ @ @ @ @ @ @ @ @ is licensed under the GNU General Public License , JPBRT is also under this license . <p> I included some additional classes , namely JHotDraw and the Quaqua Look and Feel which are separately available under the GNU Lesser General Public License and/or Creative Commons Attribution . <h> System Requirements <p> Any operating system that supports Java 6 will do , including but not limited to Mac OS X , Linux , Solaris , Unix and Windows . <p> On some operating systems ( esp . Windows ) you have to install Java SE 6 before you can install JPBRT ( download Java from Javasoft ) <h> Example Scenes <h> Downloads <h> JPBRT 0.5 <p> This is an experimental software release with unfinished functionality . <p> Installs and launches JPBRT on all platforms . <p> 2.5 MB <p> Launches JPBRT with the -server JVM option for improved performance . To see an improvement , you need to " warm up " Java , by rendering a simple scene first . Uncheck the menu item " Renderer &gt; Update Image While Rendering " to gain some extra performance . 
@@24629325 @4629325/ <h> JHotDraw 7 : Changes <h> JHotDraw 7.62011-01-06 <p> General This release drops the org.jhotdraw.annotations package in favor of FindBugs annotations . <p> Drawing Framework User interface classes which depend on the drawing framework have been moved from the org.jhotdraw.gui package into the new org.jhotdraw.draw.gui package . <p> Application Framework Menus are now generated by the new MenuBuilder class instead of by the ApplicationModel . <h> JHotDraw 7.5.12010-08-01 <p> Fixes : <p> Fixes the color chooser popup when a security manager is active . <p> Improves performance of the **30;1381;TOOLONG ( ) method . <p> Fixes painting issues with the background of DefaultDrawingView . <h> JHotDraw 7.52010-07-28 <p> Enhancements and Changes : <p> Drawing Framework InputFormat and OutputFormat work now with URI 's instead of files for identifying the storage location of a drawing . The ResizeHandleKit supports now aspect preserving resizing by pressing the Alt- or Ctrl-Key . The canvas area is now drawn by Drawing instead of DrawingView . The ButtonFactory can now create color chooser popup buttons . DOMStorable is not implemented by the Figure interface anymore allowing the implementation of figures which do not depend @ @ @ @ @ @ @ @ @ @ delegate for JColorChooser has been added to the " Palette " look and feel . <p> Example applications The user interface of the SVG example application has been improved . - <p> General Java annotations have been added for clarity . @Nullable and @NotNull annotations specify allowed and disallowed occurences of null values . This is work in progress . <p> Some changes in the package structure and renamings of classes have been made in order to improve the clarity of the frameworks . <h> JHotDraw 7.42010-01-16 <p> Enhancements : <p> Application Framework : The application framework works now with URI objects instead of File objects . This allows the creation of applications which are not file-based , such as network-based applications ( browsers ) and database-oriented applications . <p> Changes : <p> Application Framework Actions in the application framework are now organised in an ActionMap hierarchy . ( File- ) URIChoosers are now created by the ApplicationModel instead by the View . <p> Drawing Framework The package org.jhotdraw.draw has been split up into sub-packages . <p> Platform requirements : Minimum platform requirement is now J2SE6 . The following third-party @ @ @ @ @ @ @ @ @ @ following third-party source files have been removed : LinearGradientPaint and RadialGradientPaint from the Apache Batik library . <p> JHotDraw 7.3.12009-10-18 <p> This version fixes bugs found in 7.3 . <p> Notable enhancements : <p> Default input map and action map are now handled by the DrawingEditor instead by AbstractTool . <p> Notable fixes : <p> Copy and paste did not work on Mac OS X 10.6 . <p> Figures which were very small caused rendering artefacts on DefaultDrawingView and caused ImageOutputFormat to crash . <p> Setting a drawing on DefaultDrawingView caused flickering . <h> JHotDraw 7.32009-10-11 <p> Substantial changes and enhancements have been made to fix shortcomings and bugs of the frameworks and to improve the usability of drawing editors . <p> Please take a look at the JDiff report for a detailed description of all API changes between JHotDraw 7.2 and 7.3 . <p> Notable changes are : <p> General : <p> The documentation of framework interfaces and classes shows now the design patterns being used ( like JHotDraw 6 did ) . <p> Drawing Framework : <p> The method names for setting and getting an attribute from a @ @ @ @ @ @ @ @ @ @ , Object ) . The sample code uses now these methods instead of the setter and getter methods in class AttributeKey . <p> The Worker class has been redesigned , to better support the common use cases of a Worker . <p> Support for weak event listeners has been added to class AbstractBean . Weak event listeners help to prevent memory leaks in applications . <p> Sample applications : <p> SVG Sample : SVG Tiny 1.2 compliance has been improved . The SVGDrawingPanel can now more easily integrated as a component into an application . <h> JHotDraw 7.22009-05 <p> Substantial changes and enhancements have been made to fix shortcomings and bugs of the frameworks and to improve the usability of drawing editors . <p> Please take a look at the JDiff report for a detailed description of all API changes between JHotDraw 7.1 and 7.2 . <p> Drawing Framework : <p> The type safety of figure attributes has been improved , by making use of type tokens in AttributeKey and setter and getter methods with templates in Figure . <p> The usability has been improved . Figures indicate there bounds @ @ @ @ @ @ @ @ @ @ number of user interface classes for the creation of toolbars have been added , and are used by the SVG sample application . <p> Drawing objects can now be serialized using the **30;1413;TOOLONG . This allows to easily implement short-term persistence for drawings ( for example for clipboard support ) . <p> Application Framework : <p> The resource support has been reimplemented to be closer to JSR-296 . Resource bundles can now use place holders in their values . The resource keys used by JHotDraw match now with the correspoinding JavaBeans property names . <h> JHotDraw 7.12008-03 <p> Substantial changes have been made to fix shortcomings and bugs of the frameworks . <p> Please take a look at the JDiff report for a detailed description of all API changes between JHotDraw 7.0.9 and 7.1 . <p> Drawing Framework : <p> Most Figure methods with prefix basic have been removed . These methods were used to support Undo/Redo by the Figure objects . In JHotDraw 7.1 , this task has been moved to the Tool objects . <p> The class structure has been modified to gain more flexibility . Most notably @ @ @ @ @ @ @ @ @ @ . <p> Application Framework : <p> The experimental application framework based on JSR-296 has been removed , because it is not mature enough yet , to keep JHotDraw in sync with it . <p> The Project interface has been renamed to View , to be more in line with the upcoming Swing application framework JSR-296 . <p> Samples : <p> SVG : The background colors of SVG drawings can be set now . A number of bugs related to reading and writing gradients has been fixed . There is no support for editing gradients yet . <p> ODG : This sample is not functional yet . It consists only of a few skeleton classes . <h> JHotDraw 7.0.92007-06-21 <p> Redesigned Undo/Redo handling for Figure attributes . <p> Made many incompatible changes in all packages in order to pave the way for SVG support . <p> Rewrote the SVG sample application . <p> Enhanced the Draw package to make support for transformations on Figures possible , in order to be able to support SVG . <p> Added Batik gradient classes , in order to be able to support SVG . <p> @ @ @ @ @ @ @ @ @ @ version 0.42 . This package will replace org.jhotdraw.app in future versions . <h> JHotDraw 7.0.82007-01-10 <p> Streamlined interface names and class names to make it easier to learn the framework . <p> All code is now compilable with J2SE6 . The minimum platform requirements for JHotDraw 7 remains J2SE5 . <h> JHotDraw 7.0.72006-11-12 <p> Reorganized file structure . <p> Fixed NetBeans project files and Ant build scripts . <p> Fixed guide . <h> JHotDraw 7.0.62006-08-27 <p> Renamed PlasmaDraw to JHotDraw 7 . <p> Changed copyright notices in all source files . <h> JHotDraw 7.0.52006-07-30 <p> Moved all packages from ch.randelshofer to org.jhotdraw . <p> Reimplemented the ' Net ' and ' Pert ' sample applications . <p> Implemented an ' SVG ' sample application . <p> Fixed minor issues here and there . <p> Added a tweaked version fo NanoXML back into the framework . The tweaked version of NanoXML allows to read XML documents which have a DTD , without opening a network connection to the DTD document and thus improving performance when opening a XML document . Once we figure out , how can use the javax.xml API @ @ @ @ @ @ @ @ @ @ NanoXML again . <h> JHotDraw 7.0.32006-01-29 <p> Added support for BTzier paths and replaced all legacy Polygon code with it . <p> Cleaned up the framework . CompositeFigure does not implement FigureListener anymore . <p> Moved layout strategy for ConnectionFigure into a separate class named Liner . Added a SlantedLiner . ElbowLiner not yet implemented . <p> Migrated from Java 1.4 to 1.5 . The framework uses now type save collections . <h> JHotDraw 7.0.22006-01-18 <p> Revived the project . Replaced integer coordinate system by a double precision coordinate system . <h> JHotDraw 7.0.1 2004-03-01 <p> Finished adaptation from JHotDraw 5.4b1 . JHotDraw 7 's framework is based now entirely on Java idioms . It makes use of Java2D , Swing Undo/Redo , XML . The user interface is now very close to MS Office 2002. 
@@24629326 @4629326/ <h> Super Cube Solver v2.3 <p> S1 ? Overview The SuperCube Solver will solve the cube from a scramble algorithm provided by a user , either as a supercube cube or as a regular cube . <p> S2 ? Algorithms ? Scramble algorithm : basic moves must be separated with a single blank and recognized by the Solver . ? Moves notation can be either in SSE or WCA notation ( single slice , no cube rotation ) . ? WCA scrambles can be copied from : WCA Official Cube scrambler ? Expressions of commutators and semi-commutators are recognized by the Solver . <p> O1 ? Overview Each orbit is solved *separately* : any solution algorithm will *not* move stickers located outside the current orbit . <p> O2 ? Features and Limitations The Solver will provide complete solution algorithms only if : 1 . ' Initial ' and ' Goal ' permutations are those of legal cube states 2 . ' Delta ' permutation *total* parity of a given orbit is even : <p> So , it 's up to the user to provide strings of cycles that will @ @ @ @ @ @ @ @ @ @ can be achieved by counting cycles involving an even number of letters each and verifying that the count is indeed even . <p> Example : ( DAB ) ( CIKF ) ( PG ) is a permutation of even parity because there are 2 cycles ( CIKF ) and ( PG ) of even length . Notice that ' Initial ' and ' Goal ' permutations must be of the same parity , either even or odd , and not necessarily even . <p> O3 ? Permutation Cycle Notation Permutation cycle notation : cycles of letters must be enclosed in parenthesis , disjoint and with no repeated letters . <p> ? Corners : a single letter per corner piece is sufficient as the Solver will complete the permutation by adding the 2 missing letters . There are 3 letters per corner and any of these 3 letters is allowed to appear only *once* in the cycle notation , provided that *all* permuted corners are distinct . <p> Example : ( DJAG ) ( BMCK ) , where corner ( D , O , F ) is represented by letter ' @ @ @ @ @ @ @ @ @ @ use missing letters ' O ' and ' F ' in cycles . Notice that even though letter ' D ' appears only once in the first cycle , then letters ' O ' or ' F ' ca n't no longer appear in subsequent cycles , to ensure that permuted corners are indeed distinct . <p> ? Midges : a single letter per midge piece is sufficient as the Solver will complete the permutation by adding the missing letter . There are 2 letters per midge and any of these 2 letters is allowed to appear only *once* in the cycle notation , provided that *all* permuted midges are distinct . <p> Example : ( DAB ) ( CIK ) ( FPG ) ( MTJ ) , where midge ( E , D ) is represented by letter ' D ' so that there is no longer need to use missing letter ' E ' in cycles . Notice that even though letter ' D ' appears only once in the first cycle , then letter ' E ' ca n't no longer appear in subsequent cycles , to @ @ @ @ @ @ @ @ @ @ Cycles of corners + corner twists are allowed in a same string , provided all cycles are disjoint.Example : ( DJAGB ) ( CPR ) ( MQU ) , where the first 5 corners are permuted and the 2 other twisted . <p> ? Twisted corners 3- , 5- or 7-cycle are allowed in a same string , provided *all* corner stickers are listed.Example : ( BCGLRNSPX ) ( MUQ ) , where the 3 corners ( B , L , S ) , ( C , R , P ) and ( G , N , X ) are permuted , with the sum of their 3 twists ! = 0 and a fourth corner ( M , U , Q ) is twisted in-place to set the sum of all 4 twists to zero again . <p> ? Cycles of midges + midge flips are allowed in a same string , provided all cycles are disjoint.Example : ( DABCI ) ( KS ) ( FN ) , where the first 5 midges are permuted and the 2 other flipped . <p> ? Flipped midges 3- , 5- , @ @ @ @ @ @ @ @ @ @ string , provided *all* midge stickers are listed.Example : ( AHCLIO ) ( FN ) , where 3 midges ( A , L ) , ( H , I ) and ( C , O ) are permuted , with the sum of their 3 flips ! = 0 and a fourth midge ( F , N ) is flipped in-place to set the sum of all 4 flips to zero again . <p> O6 ? Isograms Isograms : an isogram is a word or phrase in which no letter is used more than once . Disjoint cycles can be thought of as isograms , many of which can be displayed on a cube as strings of permuted stickers , mainly on edges or centers though . 
@@24629328 @4629328/ <h> Common Properties <p> Changes the size variant of a component , if set to regular , small or mini . The default value is regular . <p> Note : Setting this property causes the UI delegate , to set an appropriate font on the component . <p> Quaqua.Component . cellRendererFor <p> If a component is used as a cell renderer , this property can be used to specify the JComponent which contains the cels . For example , set this to a JTable , a JTree or a JList object . <p> This has the following effect : <p> The cell renderer can draw itself differently , so that it fits visually into a cell of the specified JComponent . <p> The cell renderer can determine its selection color depending on the focus state of the specified JComponent rather than on its own focus state . <p> Quaqua.Component . visualMargin <p> If set to a java.awt.Insets value , specifies the margin around the visually perceived borders of a component and its clip bounds . If no value is specified , then the UIManager property Component.visualMargin is used . @ @ @ @ @ @ @ @ @ @ have been implemented in Quaqua . Thus the following components ignore currently the visual margin : <p> JSlider <p> JSpinner <p> JTabbedPane with Panther design <h> JCheckBox <p> Property <p> Notes <p> Quaqua.Label . style <p> Changes the style of the label portion of the JCheckBox if set to : " plain " , " shadow " or " emboss " . If no value is specified , the plain style is used . <h> JComboBox <p> Property <p> Notes <p> JComboBox . isTableCellEditor <p> If set to Boolean.TRUE causes the JComboBox to render without a border , so that it fits visually into a JTable cell . <p> Alternatively to this , **34;1445;TOOLONG can be used . <h> JFileChooser <p> Property <p> Notes <p> Quaqua.FileChooser . preview <p> If set to a java.awt.Component , specifies the component used for rendering the file preview in the last column of the column view in the file browser . <p> If this property is not set , or if its value is null , the file chooser renders the preview using its own renderer . <h> JButton <p> Property <p> Notes <p> @ @ @ @ @ @ @ @ @ @ , if set to one of the following String values : bevel , square , push , colorWell , toggle , toggleWest , toggleCenter , toggleEast , toolBar , toolBarRollover , toolBarTab , help . If no value is specified , the push style is used . This property overrides the JButton.buttonType property . <p> JButton . buttonType <p> Changes the style of a button , if set to one of the following String values : icon , toolbar , text . If no value is specified , the text style is used . This property is here for backwards compatibility with Apple 's Aqua Look and Feel only . It is overriden , if the Quaqua.Button.style property is set . <h> JOptionPane <p> Property <p> Notes <p> Quaqua.OptionPane . destructiveOption <p> Specifies the index of the destructive option on the JOptionPane . If no value is specified , all option buttons are aligned to the lower right corner of the option pane . <p> If an Integer value is specified , all option buttons with a lower index than the Integer value are aligned to the lower right corner @ @ @ @ @ @ @ @ @ @ message text . <h> JLabel <p> Property <p> Notes <p> Quaqua.Label . style <p> Changes the style of a label if set to : " plain " , " shadow " or " emboss " . If no value is specified , the plain style is used . <h> JList <p> Property <p> Notes <p> Quaqua.List . style <p> Changes the style of a list , if set to : " striped " or to " plain " . If no value is specified , the plain style is used . <h> JPopupMenu <p> Property <p> Notes <p> Quaqua.PopupMenu . windowAlpha <p> A float value which specifies the alpha transparency of the popup window . If no value or null is specified , a system dependent transparency value is chosen . <h> JRootPane <p> Property <p> Notes <p> Quaqua.RootPane . isPalette <p> If set to Boolean.TRUE , turns a JDialog or a JFrame into a palette window . The title bar of a palette window will always render in activated state . It is your responsibility to hide the palette window , when none of your application has focus . @ @ @ @ @ @ @ @ @ @ the JRootPane decorates the window . <p> Quaqua.RootPane . isVertical <p> If set to Boolean.TRUE , renders the title bar of a JDialog or a JFrame on the left instead of on the top . <p> This property will only take into effect , when the JRootPane decorates the window . <p> apple.awt.brushMetalLook <p> If set to Boolean.TRUE , fuses the title bar of the JFrame with the JToolBar at the top of the window , and fuses the border with the JToolBar at the bottom of the window , if the appropriate style of the JToolBar is set . <p> Set this to Boolean.FALSE to prevent that all text is selected , when the user tabs into the field . This property does not affect JTextPane and JTextArea . Note : You can set the UIManager property TextComponent.autoSelect to false , to turn this off globally . <p> Quaqua.TextComponent . showPopup <p> Set this to Boolean.FALSE to disable the text component popup menu . <h> JTextField <p> Property <p> Notes <p> Quaqua.TextField . style <p> If set to " search " , renders a rounded border like the border @ @ @ @ @ @ @ @ @ @ set to " plain " , renders a rectangular border like for regular text fields . The default value is " plain " . <h> JToolBar <p> Property <p> Notes <p> Quaqua.ToolBar . style <p> Changes the style of a tool bar , if set to : plain , title , bottom or gradient . If no value is specified , the plain style is used . <p> The " title " style requires that the client property apple.awt.brushMetalLook is set on the JRootPane . <p> Quaqua.ToolBar . isDividerDrawn <p> If set to Boolean.FALSE , turns the divider line between the toolbar and the center area of its panel off . <p> JToolBar . isRollover <p> If set to Boolean.TRUE , turns a roll over effect for the buttons on the toolbar on . This requires Java 1.4 to work . <h> JTree <p> Property <p> Notes <p> Quaqua.Tree . style <p> Changes the style of a tree , if set to : plain , striped or sourceList . If no value is specified , the plain style is used . 
@@24629329 @4629329/ <h> Class Base64 <p> v2.1 - Cleaned up javadoc comments and unused variables and methods . Added some convenience methods for reading and writing to and from files . <p> v2.0.2 - Now specifies UTF-8 encoding in places where the code fails on systems with other encodings ( like EBCDIC ) . <p> v2.0.1 - Fixed an error when decoding a single byte , that is , when the encoded data was a single byte . <p> v2.0 - I got rid of methods that used booleans to set options . Now everything is more consolidated and cleaner . The code now detects when data that 's being decoded is gzip-compressed and will decompress it automatically . Generally things are cleaner . You 'll probably have to change some method calls that you were making to support the new options format ( ints that you " OR " together ) . <p> v1.5.1 - Fixed bug when decompressing and decoding to a byte using decode ( String s , boolean gzipCompressed ) . Added the ability to " suspend " encoding in the Output Stream so you can turn @ @ @ @ @ @ @ @ @ @ base64 data in an otherwise " normal " stream ( like an XML file ) . <p> v1.5 - Output stream pases on flush() command but does n't do anything itself . This helps when using GZIP streams . Added the ability to GZip-compress objects before encoding them . <p> v1.4 - Added helper methods to read/write files . <p> v1.3.6 - Fixed OutputStream.flush() so that ' position ' is reset . <p> v1.3.5 - Added flag to turn on and off line breaks . Fixed bug in input stream where last buffer being read , if not completely full , was not returned . <p> I am placing this code in the Public Domain . Do with it as you will . This software comes with no guarantees or warranties but with plenty of well-wishing instead ! Please visit http : //iharder.net/base64 periodically to check for updates or to contribute improvements . <h> Method Detail <h> encodeObject <p> Serializes an object and returns the Base64-encoded version of that serialized object . If the object can not be serialized or there is another error , the method will return null . The object is not GZip-compressed before being encoded. 
@@24629330 @4629330/ <h> JBrowser <p> Like NSBrowser , JBrowser provides a user interface for displaying and selecting items from a list of data or from hierarchically organized lists of data such as directory paths . When working with a hierarchy of data , the levels are displayed in columns , which are numbered from left to right . <p> JBrowser uses a TreeModel , and can be used as a replacement for a JTree . It does not have all the features of a JTree though . Especially cell editing is not supported . <p> JBrowser is designed to work with the Quaqua Look and Feel . If you want to use it with another Look and Feel , you need to implement the user interface delegate BrowserUI , and you need to adapt the ViewportUI . Changes in ViewportUI are needed , in order to draw empty columns at the right of the JBrowser , when the viewport is wider than the currently selected path . <p> If for some reason , you ca n't implement the user interface delegate classes BrowserUI and ViewportUI by yourself , you can use @ @ @ @ @ @ @ @ @ @ . <p> The following sample code shows how to use JBrowser without the Quaqua Look and Feel , and without implementig user interface delegates . Note the use of the JBrowserViewport helper class ! 
@@24629331 @4629331/ <h> Extras <h> Links <h> Fellay 's Eight Color Cube <p> Fellay 's Eight Color Cube is divided into eight cubes of distinct colors . Each corner has a uniform color , while the edges are split into two and the centers into four colors . Compared to a regular Rubik 's cube the corners no longer need to be oriented but it is required for the side parts . <p> The layout of Fellay 's Eight Color Cube was created in 2017 by Fabien Fellay . It is a color variation of the Eight Color Cube published by Douglas R. Hofstadter in the Scientific American issue of March 1981 . In it 's article Hofstadter also thought about alternate ways in coloring the cube : <p> The potential of the 3 + 3 + 3 cube is not close to be exhausted . One rich area of unexplored terrain is that of alternate colorings . The idea was mentioned to me by various M.I.T. cube hackers . One can color the cubies in a variety of ways . Each new coloring presents a different kind of unscrambling problem @ @ @ @ @ @ @ @ @ @ and center-cubie orientations take on a vital importance . In an other variant , corner-cubie orientations are irrelevant and centers matter. + ( Excerpt from Scientific American , March 1981 ) <p> A different coloring can make it more complicate solving a cube but can also simplify it . This variant coloring uses eight colors in a way to focus more on the edges and side parts but no longer care about corner orientations . <h> A classic cube in new colors <p> Fabien Fellay devised the same layout by imagining an octahedron ( its ' Dual Polyhedron ' ) inside the cube . The eight colored faces of the octahedron are then projected on the enclosing cube . The color concept is based on the additive and subtractive color model and brings the colors in relation to each other . <p> The black color origin , the product of the three subtractive primary colors cyan , magenta and yellow , is located on the frontside of the cube , at the intersection of faces U ( Up ) , R ( Right ) and F ( Front ) . @ @ @ @ @ @ @ @ @ @ three additive primary colors red , green and blue , is located on the backside of the cube , at the intersections of faces D ( Down ) , L ( Left ) and ( B ) Back . <p> The product of two subtractive prime colors is located in between the corresponding two colors : adding yellow to cyan yields green , adding cyan to magenta yields blue and adding magenta to yellow yields red . <p> Vise versa the same is applied to the product of two additive prime colors : adding blue to green yields cyan , adding green to red yields yellow and adding red to blue yields magenta . <h> Dual Polyhedron <p> In geometry , polyhedra are associated into pairs called ' duals ' , where the vertices of one correspond to the faces of the other . Starting with any given polyhedron , the dual of its dual is the original polyhedron . <p> Each Platonic solid has a dual Platonic solid . If a midpoint ( center ) of each face in the Platonic solid is joined to the midpoint of each @ @ @ @ @ @ @ @ @ @ first . <p> The illustration shows , that the dual of the cube is the octahedron . <h> The number of possible positions <p> The number of possible positions of the Eight Color Cube is 8 ! + 12 ! / 2 + 211 + 46 / 2 = 40 ' 503 ' 019 ' 070 ' 029 ' 824 ' 000 40.503 + 1018 which is about 40.5 quintillion on the short scale or 40.5 trillion on the long scale . Compared to a regular Rubik 's Cube the Eight Color Cube has about 93.6% of its possible positions . <p> The Eight Color Cube has eight corners , twelve edges and 6 marked centers . There are 8 ! ( 40 ' 320 ) ways to arrange the corners . There are 12 ! / 2 ( 239 ' 500 ' 800 ) ways to arrange the edges , since an odd permutation of the corners implies an odd permutation of the edges as well . Eleven edges can be flipped independently , with the flip of the twelfth depending on the preceding ones , giving 211 ( @ @ @ @ @ @ @ @ @ @ 2 ( 2 ' 048 ) ways to orient the centers , since an even permutation of the corners implies an even number of quarter turns of the centres as well . 
@@24629332 @4629332/ <p> A tool to create new figures . The figure to be created is specified by a prototype . <p> To create a figure using the CreationTool , the user does the following mouse gestures on a DrawingView : <p> Press the mouse button over the DrawingView . This defines the start point of the Figure bounds . <p> Drag the mouse while keeping the mouse button pressed , and then release the mouse button . This defines the end point of the Figure bounds . <p> The CreationTool works well with most figures that fit into a rectangular shape or that concist of a single straight line . For figures that need additional editing after these mouse gestures , the use of a specialized creation tool is recommended . For example the TextTool allows to enter the text into a TextFigure after the user has performed the mouse gestures . <p> Alltough the mouse gestures might be fitting for the creation of a connection , the CreationTool is not suited for the creation of a ConnectionFigure . Use the ConnectionTool for this type of figures instead . <h> @ @ @ @ @ @ @ @ @ @ specified prototype but without an attribute set . The CreationTool clones this prototype each time a new Figure needs to be created . When a new Figure is created , the CreationTool applies the default attributes from the DrawingEditor to it . 41272 @qwx241272 <p> prototype - The prototype used to create a new Figure . <h> CreationTool <p> Creates a new instance with the specified prototype but without an attribute set . The CreationTool clones this prototype each time a new Figure needs to be created . When a new Figure is created , the CreationTool applies the default attributes from the DrawingEditor to it , and then it applies the attributes to it , that have been supplied in this constructor . 41272 @qwx241272 <p> prototype - The prototype used to create a new Figure . <p> attributes - The CreationTool applies these attributes to the prototype after having applied the default attributes from the DrawingEditor. 
@@24629334 @4629334/ <p> The code attribute let 's the browser know which Java class it must use to show the applet . The value must be " ANIMApplet.class " . <p> codebase <p> text <p> You can use the codebase attribue to tell the browser in which directory the animapplet.jar file is located . If you specify a relative URL , then it 's interpreted relative to the HTML document 's location . By specifying an absoluteURL , you can load the applet from just about anywhere - even from a different HTTP server . Please note that due to security restrictions : The ANIM-files must be in the same directory-subtree where the animapplet.jar file is located . <p> archive <p> required <p> text <p> The archive attribute indicates the file where the Java program code is stored . Please note that on most web-servers the case of this value must match the case of the file name " ANIMApplet.jar " . <p> If you specify the parameters for Sun 's Java plug-in , you have to store the file " ANIMApplet.jar.pack.gz " in the same directory where you stored " ANIMApplet.jar @ @ @ @ @ @ @ @ @ @ and height of the applet . Add 16 pixels to the height of the animation to accomodate enough space for the control panel . Tip : Use the " info " parameter to determine the best width and height of ANIMApplet for your animation . <p> height <p> required <p> number <p> animSource <p> url <p> The animSource parameter specifies the directory where the animation file is stored . Please omit this parameter if you store the animation file at the same location as the file " animapplet.jar " . Pleas note that , due to security restrictions , an applet may access only files that are located on the same directory subtree where the applet code is stored . <p> animArchive <p> url <p> The imageArchive parameter indicates the . zip-File that contains the ANIM-File . Zipping greatly reduces the download time of your animation . Do not specify this line when you do n't zip the animation file . <p> anim <p> required <p> filename <p> The file-name of the IFF ANIM animation file or of the IFF ILBM image . <p> boxBgColor <p> color <p> This parameter @ @ @ @ @ @ @ @ @ @ by the animation ( e. g. before the first frame of the animation is loaded ) . Specify a hex value ( e. g. " 0xff0000 " or " #ff0000 " ) , three RGB values ( e.g. " 255,0,0 " ) or an HTML color name ( e.g. " red " ) . The default value depends on the browser settings . If the browser uses the Java Plug-In from Sun , this color will be shown while the applet is being loaded.Tip : This value should match the background color of your HTML page . <p> boxFgColor <p> color <p> This parameter specifies the foreground color for messages displayed on the applet . Specify a hex value ( e. g. " 0xff0000 " or " #ff0000 " ) , three RGB values ( e.g. " 255,0,0 " ) or an HTML color name ( e.g. " red " ) . The default value depends on the browser settings . If the browser uses the Java Plug-In from Sun , this color will be used for messages displayed while the applet is being loaded . <p> boxMessage <p> text @ @ @ @ @ @ @ @ @ @ , this parameter specifies a message that is shown while the applet is being loaded . <p> image <p> url <p> If the browsers uses the Java Plug-In from Sun , this parameter specifies the image being shown while the applet is being loaded . This is often referred to as a " splash screen " . The image should have the same size as specified by the " width " and " height " attributes . <p> scale <p> variant <p> " scale " is either " toFit " , " aspect " or a ( fractional ) number . By default the value of " scale " is " toFit " . If set to " toFit " , the animation is scaled to fit the size of the applet as specified by the " height " and " width " attributes ( note : the controller occupies 16 pixels of the height ) . If this is set to " aspect " , the movie will scale to fit the size of the applet while maintaining its aspect ratio . If this is set to a ( @ @ @ @ @ @ @ @ @ @ that number ( e.g. 1.5 ) . <p> framesPerSecond <p> number <p> If specified overrides the frame delay settings in the animation file . The value " 0 " is default and hence uses the time settings from the animation file . Supports fractional values . <p> playEveryFrame <p> boolean <p> By default , this parameter is set to " false " . When set to " true " , causes the applet to play every frame of the animaton even if it is necessary to play at a slower rate to do so . This attribute isparticularly useful to play short fast looping animations . <p> playWrapupFrames <p> boolean <p> A well formed IFF ANIM file contains two wrapup frames ( images ) at the end of the file . The wrapup frames are identical with the first two frames of the animation . They are required to do fast looping animations . Setting this parameter to " true " makes ANIMApplet treat the wrapup frames like regular frames . That is , the animation is treated as if it had two additional frames . The default value is @ @ @ @ @ @ @ @ @ @ set to " true " , ANIMApplet renders the video using a 24 bit direct color model regardless of the color model used by the animation . The default value is " true " . <p> blendColorCycles <p> boolean <p> When set to " true " , colors in a color cycle are blended into each other instead of being shifted in discrete steps . The default value is " false " . <p> audio <p> boolean <p> When this is set to " false " , the applet does not load audio data from the file . The default value is " true " . <p> colorCycling <p> boolean <p> When this is set to " false " , the applet does not start plaiyng the color cycling . The default value is " true " . <p> controller <p> boolean <p> If " controller " is set to " false " , the control panel will not display . The default is " true " . To avoid distortion of the animation you should add 16 pixels to the height attribute when the control panel is displayed . @ @ @ @ @ @ @ @ @ @ " , the autoPlay parameter causes the animation to start playing as soon as the applet estimates that it will be able to play the entire movie without waiting for additional data . This version of ANIMApplet will start playing only after downloading the whole animation file . The default value is " true " . <p> loop <p> boolean <p> By default , " loop " is set to " true " . When set to true , the " loop " parameter makes the animation play continuously . <p> pingPong <p> boolean <p> By default , " pingPong " is set to " false " . When set to true , the " pingPong " parameter makes the animation play forth and back . This will work only for animations that are encoded using Eric Graham 's compression mode ' J ' delta frames which are XOR encoded . <p> info <p> boolean <p> Set this parameter to " true " to display information about the animation . This information is useful to determine the preferred size of ANIMApplet . <p> debug <p> boolean <p> Set this parameter @ @ @ @ @ @ @ @ @ @ frame of the animation . This parameter is useful if you think that ANIMApplet does not display your animation properly . <h> Third Party Libraries <p> This software is the confidential and proprietary information of Sun Microsystems , Inc . ( " Confidential Information " ) . You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the license agreement you entered into with Sun . <p> - <p> Parts of this software ( as marked ) is Copyright ( c ) 21 Jan 1985 Steve Hayes , Electronic Arts This software is in the public domain . <p> I , as the author and copyright holder , allow you to do anything you wish with this book free of charge , including copying , printing and republishing . In return , you must preserve this notification and the books website , MA 02139 , USA. 
@@24629336 @4629336/ <h> Method Detail <h> setDoctype <p> void **27;1481;TOOLONG doctype ) <p> Sets the doctype for the XML document . <h> openElement <p> void **28;1510;TOOLONG tagName ) <p> Adds a new element to the DOM Document and opens it . The new element is added as a child to the current element in the DOM document . Then it becomes the current element . The element must be closed using closeElement. <h> closeElement <p> void closeElement() <p> Closes the current element of the DOM Document . The parent of the current element becomes the current element . <p> Throws : <p> **34;1540;TOOLONG - if the provided tagName does not match the tag name of the element . <h> addComment <p> void **27;1576;TOOLONG comment ) <p> Adds a comment to the current element of the DOM Document . <h> addText <p> void addText ( java.lang.String text ) <p> Adds a text to current element of the DOM Document . Note : Multiple consecutives texts will be merged . <h> addAttribute <h> addAttribute <p> Adds an attribute to current element of the DOM Document if it is different from the default value @ @ @ @ @ @ @ @ @ @ <p> Writes an object . <p> Throws : <p> java.io.IOException <h> getPrototype <p> java.lang.Object getPrototype() <p> Returns a prototype for the object currently being written . This can be used , to reduce the amount of data written to DOMOutput . For example , by not writing object attributes , which have the same values as the prototype . 
@@24629337 @4629337/ <h> org.jhotdraw.draw Class AttributeKeys <p> Defines AttributeKeys used by the Figures in this package as well as some helper methods . <p> If you are developing an applications that uses a different set or an extended set of attributes , it is best , to create a new AttributeKeys class , and to define all needed AttributeKeys as static variables in there . <p> **33;1635;TOOLONG f ) Returns the distance , that a Rectangle needs to grow ( or shrink ) to draw ( aka stroke ) its shape as specified by the FILLUNDERSTROKE and STROKEPOSITION attributes of a figure . <p> static double <p> **33;1670;TOOLONG f ) Returns the distance , that a Rectangle needs to grow ( or shrink ) to fill its shape as specified by the FILLUNDERSTROKE and STROKEPOSITION attributes of a figure . <p> static double <p> **32;1705;TOOLONG f ) Returns the distance , that a Rectangle needs to grow ( or shrink ) to make hit detections on a shape as specified by the FILLUNDERSTROKE and STROKEPOSITION attributes of a figure . <h> CANVASWIDTH <p> The width of the canvas . The value @ @ @ @ @ @ @ @ @ @ a value between 1 and Double.MAXVALUE . If the value is null , the width is dynamically adapted to the content of the drawing . <h> CANVASHEIGHT <p> The height of the canvas . The value of this attribute is a Double object . This is a value between 1 and Double.MAXVALUE . If the value is null , the height is dynamically adapted to the content of the drawing . <h> STROKEPLACEMENT <p> Stroke placement . The value is either StrokePlacement.CENTER , StrokePlacement.INSIDE or StrokePlacement.OUTSIDE . This only has effect for closed paths . On open paths , the stroke is always centered on the path . <h> getFont <h> getFontStyle <h> **26;1739;TOOLONG <p> Returns the distance , that a Rectangle needs to grow ( or shrink ) to fill its shape as specified by the FILLUNDERSTROKE and STROKEPOSITION attributes of a figure . The value returned is the number of units that need to be grown ( or shrunk ) perpendicular to a stroke on an outline of the shape . <h> **26;1767;TOOLONG <p> Returns the distance , that a Rectangle needs to grow ( or shrink ) @ @ @ @ @ @ @ @ @ @ by the FILLUNDERSTROKE and STROKEPOSITION attributes of a figure . The value returned is the number of units that need to be grown ( or shrunk ) perpendicular to a stroke on an outline of the shape . <h> **25;1795;TOOLONG <p> Returns the distance , that a Rectangle needs to grow ( or shrink ) to make hit detections on a shape as specified by the FILLUNDERSTROKE and STROKEPOSITION attributes of a figure . The value returned is the number of units that need to be grown ( or shrunk ) perpendicular to a stroke on an outline of the shape . 
@@24629338 @4629338/ <p> A selection tool is in one of three states : 1 ) area selection , 2 ) figure dragging , 3 ) handle manipulation . The different states are handled by different tracker objects : the DefaultSelectAreaTracker , the DefaultDragTracker and the DefaultHandleTracker . <p> A Figure can be selected by clicking at it . Holding the alt key or the ctrl key down , selects the Figure behind it . <h> keyPressed <p> The Tool uses the InputMap to determine what to do , when a key is pressed . If the corresponding value of the InputMap is a String , the ActionMap of the tool is used , to find the action to be performed . If the corresponding value of the InputMap is a ActionListener , the actionPerformed method of the ActionListener is performed . 
@@24629340 @4629340/ 41265 @qwx241265 <h> Textures <h> Extras <h> Four Color Cube <p> The Four Color Cube only features stickers in four different colors . In the initial state the colors are arranged in such a way that no two adjacent stickers share the same color . This sticker arrangement follows the ' four color theorem ' , also known as ' four color map theorem ' . In mathematics it states that , no more than four colors are required to color the regions of a map , so that no two adjacent regions have the same color . <p> The layout of the Four Color Cube was created in 2015 by Evgeniy Grigoriev . The color scheme was created in 2015 by Walter Randelshofer . <h> The four color theorem <p> The intuitive statement of the ' four color theorem ' , i.e. that given any separation of a plane into contiguous regions , called a map , the regions can be colored using at most four colors so that no two adjacent regions have the same color+ , needs to be interpreted appropriately to be correct . <p> @ @ @ @ @ @ @ @ @ @ technically , are in the closure of ) three or more countries , must be ignored . In addition , bizarre maps ( using regions of finite area but infinite perimeter ) can require more than four colors . Second , for the purpose of the theorem , every ' country ' has to be a connected region , or contiguous . In the real world , this is not true ( e.g. the Upper and Lower Peninsula of Michigan , Nakhchivan as part of Azerbaijan , and Kaliningrad as part of Russia are not contiguous ) . Because all the territory of a particular country must be the same color , four colors may not be sufficient . <p> This problem is sometimes also called ' Guthrie 's problem ' after F. Guthrie , who first conjectured the theorem in 1852 . The conjecture was then communicated to de Morgan and thence into the general community . In 1878 , Cayley wrote the first paper on the conjecture . <p> The four color theorem was proven in 1976 by Kenneth Appel and Wolfgang Haken . It was the first major theorem to be proved using a computer . 
@@24629341 @4629341/ <p> The LinearGradientPaint class provides a way to fill a Shape with a linear color gradient pattern . The user may specify 2 or more gradient colors , and this paint will provide an interpolation between each color . The user also specifies start and end points which define where in user space the color gradient should begin and end . <p> The user must provide an array of floats specifying how to distribute the colors along the gradient . These values should range from 0.0 to 1.0 and act like keyframes along the gradient ( they mark where the gradient should be exactly a particular color ) . <p> This code will create a LinearGradientPaint which interpolates between red and white for the first 20% of the gradient and between white and blue for the remaining 80% . <p> In the event that the user does not set the first keyframe value equal to 0 and the last keyframe value equal to 1 , keyframes will be created at these positions and the first and last colors will be replicated there . So , if a user specifies @ @ @ @ @ @ @ @ @ @ Color.red , .3 , .7 this will be converted to a gradient with the following keyframes : Color.blue , Color.blue , Color.red , Color.red , 0 , .3 , .7 , 1 <p> The user may also select what action the LinearGradientPaint should take when filling color outside the start and end points . If no cycle method is specified , NOCYCLE will be chosen by default , so the endpoint colors will be used to fill the remaining area . <p> The following image demonstrates the options NOCYCLE and REFLECT . <p> The colorSpace parameter allows the user to specify in which colorspace the interpolation should be performed , default sRGB or linearized RGB . <p> **39;1822;TOOLONG cm , java.awt.Rectangle deviceBounds , **25;1863;TOOLONG userBounds , **29;1890;TOOLONG transform , java.awt.RenderingHints hints ) Creates and returns a PaintContext used to generate the color pattern , for use by the internal rendering engine . 
@@24629342 @4629342/ <h> getMatchType <h> setStartIndex <h> findNext <p> Resets this matcher and then attempts to find the next subsequence of the input sequence that matches the pattern , starting at the specified index . 41272 @qwx241272 <p> startIndex - the index from which to start the search . <p> Returns : <p> the index of the first occurrence of the search string , starting at the specified offset , or -1 if no occurrence was found . <h> findNext <p> public int findNext() <p> Attempts to find the next subsequence of the input sequence that matches the pattern . <p> This method starts at the beginning of the input sequence or , if a previous invocation of the method was successful and the matcher has not since been reset , at the first character not matched by the previous match . <p> Returns : <p> the index of the first occurrence of the search string , starting at the specified offset , or -1 if no occurrence was found . <h> findPrevious <p> public int findPrevious ( int startIndex ) <p> Resets this matcher and then attempts to find the @ @ @ @ @ @ @ @ @ @ , starting at the specified index . 41272 @qwx241272 <p> startIndex - the index from which to start the search . <p> Returns : <p> the index of the first occurrence of the search string , starting at the specified offset , or -1 if no occurrence was found . <h> findPrevious <p> public int findPrevious() <p> Attempts to find the previous subsequence of the input sequence that matches the pattern . <p> This method starts at the beginning of the input sequence or , if a previous invocation of the method was successful and the matcher has not since been reset , at the first character not matched by the previous match . <p> Returns : <p> the index of the first occurrence of the search string , starting at the specified offset , or -1 if no occurrence was found . 
@@24629343 @4629343/ <h> JFileChooser <h> Client properties : <h> System properties : <p> Set this to " false " if you experience crashes with QuickLook file previews in the file chooser . <h> Client property : **26;1921;TOOLONG <p> Sets the component used for rendering the file preview in the last column of the column view in the file browser . <h> General Description <p> The FileChooserUI of the Quaqua Look and Feel roughly matches the design of native file dialogs on Mac OS X 10.3 through 10.5 ( Jaguar , Panther and Leopard ) . <h> JFileChooser with Java 1.5 and Quaqua set to the Leopard design <h> JFileChooser with Java 1.4 and Quaqua set to the Panther design <h> JFileChooser with Java 1.4 and Quaqua set to the Jaguar design : <p> The design is determined at startup . You can force a specific style , by setting the system property Quaqua.design to jaguar or to panther . If you want Quaqua to determine the design automatically , do n't  ' set this property , or specify the value auto . <p> System.setProperty ( <p> " Quaqua.design " , " @ @ @ @ @ @ @ @ @ @ this , will also alter the design of other user interface elements . It is not recommended to use another style than the one used by the operating system . Or else you will see undesired artefacts , because Quaqua does not fully replace all user interface elements of the underlying Aqua Look and Feel by Apple . <p> You can use class JSheet to display a file chooser as a document modal sheet . 
@@24629344 @4629344/ <p> Supports writing of time-based video and audio data into a QuickTime movie file ( . MOV ) without the need of native code . <p> QuickTimeWriter works with tracks and samples . After creating a QuickTimeWriter one or more video and audio tracks can be added to it . Then samples can be written into the track(s) . A sample is a single element in a sequence of time-ordered data . For video data a sample typically consists of a single video frame , for uncompressed stereo audio data a sample contains one PCM impulse per channel . Samples of compressed media data may encompass larger time units . <p> Tracks support edit lists . An edit list specifies when to play which portion of the media data at what speed . An empty edit can be used to insert an empty time span , for example to offset a track from the start of the movie . Edits can also be used to play the same portion of media data multiple times without having it to store it more than once in the track . Moreover edit @ @ @ @ @ @ @ @ @ @ non-sync frames . For example , MP3 layer III audio data can not be cut at arbitrary frames , because audio data can be ' borrowed ' from previous frames . An edit list can be used to select the desired portion of the audio data , while the track stores the media starting from the nearest sync frame . <p> Samples are stored in a QuickTime file in the same sequence as they are written . In order to getCodec optimal movie playback , the samples from different tracks should be interleaved from time to time . An interleave should occur about twice per second . Furthermore , to overcome any latencies in sound playback , at least one second of sound data needs to be placed at the beginning of the movie . So that the sound and video data is offset from each other in the file by one second . <p> For convenience , this class has built-in encoders for video frames in the following formats : RAW , ANIMATION , JPEG and PNG . Media data in other formats , including all audio data , @ @ @ @ @ @ @ @ @ @ . Alternatively , you can plug in your own codec. <h> addVideoTrack <p> timeScale - The media time scale . This is typically the frame rate . If the frame rate is not an integer fraction of a second , specify a multiple of the frame rate and specify a correspondingly multiplied sampleDuration when writing frames . For example , for a rate of 23.976 fps specify a time scale of 23976 and multiply the sampleDuration of a video frame by 1000 . <p> width - The width of a video image . Must be larger than 0 . <p> height - The height of a video image . Must be larger than 0 . <p> Returns : <p> Returns the track index . <p> Throws : <p> **34;1949;TOOLONG - if the width or the height is smaller than 1 . <h> write <p> Writes multiple already encoded samples from a byte array into a track . <p> This method does not inspect the contents of the data . The contents has to match the format and dimensions of the media in this track . 41272 @qwx241272 <p> track - @ @ @ @ @ @ @ @ @ @ samples . <p> data - The encoded sample data . <p> off - The start offset in the data . <p> len - The number of bytes to write . Must be dividable by sampleCount . <p> sampleDuration - The sampleDuration of a sample . All samples must have the same sampleDuration . <p> isSync - Whether the samples are sync samples . All samples must either be sync samples or non-sync samples . <p> Throws : <p> **34;1985;TOOLONG - if the sampleDuration is less than 1 . <p> java.io.IOException - if writing the sample data failed . <h> isVFRSupported <p> public boolean isVFRSupported() <p> Returns true because QuickTime supports variable frame rates . <h> isDataLimitReached <p> public boolean isDataLimitReached() <p> Returns true if the limit for media samples has been reached . If this limit is reached , no more samples should be added to the movie . <p> QuickTime files can be up to 64 TB long , but there are other values that may overflow before this size is reached . This method returns true when the files size exceeds 260 or when the media sampleDuration value of a track exceeds 261. 
@@24629345 @4629345/ <h> xpoints <p> public double xpoints <p> The array of X coordinates . The number of elements in this array might be more than the number of X coordinates in this Polygon . The extra elements allow new points to be added to this Polygon without re-creating this array . The value of npoints is equal to the number of valid points in this Polygon. <h> ypoints <p> public double ypoints <p> The array of Y coordinates . The number of elements in this array might be more than the number of Y coordinates in this Polygon . The extra elements allow new points to be added to this Polygon without re-creating this array . The value of npoints is equal to the number of valid points in this Polygon. <h> invalidate <p> Invalidates or flushes any internally-cached data that depends on the vertex coordinates of this Polygon . This method should be called after any direct manipulation of the coordinates in the xpoints or ypoints arrays to avoid inconsistent results from methods such as getBounds or contains that might cache data from earlier computations relating to the vertex @ @ @ @ @ @ @ @ @ @ iterates along the boundary of this Polygon and provides access to the geometry of the outline of this Polygon . An optional AffineTransform can be specified so that the coordinates returned in the iteration are transformed accordingly . 
@@24629346 @4629346/ <p> The interface of a graphical figure . A figure knows its display box and can draw itself . A figure can be composed of several figures . To interact and manipulate with a figure it can provide Handles and Connectors . <p> A figure has a set of handles to manipulate its shape or attributes . A figure has one or more connectors that define how to locate a connection point . <p> Figures can have an open ended set of attributes . An attribute is identified by a string . <p> Default implementations for the Figure interface are provided by AbstractFigure . <p> Figures can have dependent figures . The existence od dependent figures depend on another figure . This is the case for figures such as ConnectedTextFigures and LineDecoration . Thus , they are " externally " dependent on a figure in contrast to ( internally ) contained figures . This means , " normal " figures ( figures that are not containers ) can still have dependent figures . Dependent figures are especially important if the figure which the depend on is deleted because they @ @ @ @ @ @ @ @ @ @ <h> moveBy <p> void moveBy ( int dx , int dy ) <p> Moves the Figure to a new location . 41272 @qwx241272 <p> dx - the x delta <p> dy - the y delta <h> basicDisplayBox <p> void **30;2021;TOOLONG origin , java.awt.Point corner ) <p> Changes the display box of a figure . This method is always implemented in figure subclasses . It only changes the displaybox and does not announce any changes . It is usually not called by the client . Clients typically call displayBox to change the display box . <h> decompose <h> addToContainer <p> Sets the Figure 's container and registers the container as a figure change listener . A figure 's container can be any kind of FigureChangeListener . A figure is not restricted to have a single container . <h> getTextHolder <h> getDecoratedFigure <p> Get the underlying figure in case the figure has been decorated . If the figure has not been decorated the figure itself is returned . The DecoratorFigure does not release the the decorated figure but just returns it ( in contrast to LONG ... 
@@24629348 @4629348/ <h> JHotDraw 7 : Release Notes <h> Release Notes for JHotDraw 7 <p> Important : JHotDraw 7 is currently in a premature state . Review the framework before you start using it . Do n't blame yourself when something is n't working as expected the problem ist most likely due to the issues in the framework . All constructive feedback is highly appreciated . <p> The API is not stable yet : Expect many minor incompatible changes in all packages . <p> Note : This version requires J2SE 6 . <p> JHotDraw 7 is a major departure from previous versions of JHotDraw only the cornerstones of the original architecture remain . The API and almost every part of the implementation have been reworked to take advantage of the Java 2 SE 6 platform . <p> JHotDraw 7 is not backwards compatible with previous versions of the JHotDraw framework . <p> Summary of major changes : <h> Architectural changes : <p> The package structure of the framework has been revised the number of packages has been considerably reduced . <p> The framework complies now to the JavaBeans setter and getter @ @ @ @ @ @ @ @ @ @ Java2D . It uses double precision coordinates for all drawings . <p> Java 5 typesafe collections are used now instead of Java 1.1 collections . <p> Undo/Redo is implemented based on the Swing undo package . <p> Cut , Copy and Paste clipboard operations are supported . <p> Commands are now based on Swing Action objects . <p> ConnectionFigures support layouting using a layout strategy object ( the ' Liner ' ) . <p> The application framework has been replaced by a new framework supporting single document interface ( SDI ) , multi document interface ( MDI ) and the Mac OS X document interface . <h> Functionality changes : <p> The usability of the drawing tools has been improved less mouse clicks are needed for many of the drawing operations . <p> A drawing can be shown and edited in multiple windows with different scale factors . <p> XML is used as the default external storage format and for clipboard operations . <p> Support for lines , and complex shapes is now based on bTzier paths instead of on polygons . <p> Figures support multiple detail levels of Handles @ @ @ @ @ @ @ @ @ @ . This release has not yet been made . <h> Release Notes for JHotDraw Version 5.2 <p> Note : This version requires Swing/JFC 1.1 <p> The purpose of this release is to : <p> Use Swing/JFC GUI elements instead of AWT ( where possible ) <p> Support for special Swing/FC features : <p> Support for Multiple Document Interface ( MDI ) applications with several internal frames has been added . **41;2053;TOOLONG the base class which must be subclasses to takeadvantage of managing internal frames . All examples are now derived from this class . <p> Support for applications with splitted editor windows by deriving the drawing application from **45;2096;TOOLONG <p> Drawing windows have scrollbars <p> Popup menus are available for additional functionality and control over graphical figures when using **40;2143;TOOLONG <p> Toolbars can have different tools depending on the context of the currently selected figure and tool <p> A new composite figure is available which delegates its graphical representation and figure attributes to another figure . Moreover , it canbe configured with an external layout algorithm that contains the logic forhow to lay out the child elements of the composite @ @ @ @ @ @ @ @ @ @ configuredby a class implementing **41;2232;TOOLONG such LONG ... <p> New **32;2275;TOOLONG that allow to add new file formats for storing and restoring drawings ( e.g. using XML ) <p> Build configuration for Ant , which can be used to compile all standard JHotDraw classes , to packagethem into a jar file and to generate javadoc information . Some instruction how to compile and build JHotDraw can be found here . <p> Some minor bug fixes <h> Release Notes JHotDraw Version 5.1 <p> Changes for this release : <p> the delegation based event model is used to track figure changes.The FigureChangeListener interface supports to observe figure changes.A FigureChangeListener receives FigureChangeEvents.The old mechanism based on Observer/Observable and the notion of a containerwas eliminated . A figure now onlyhas listeners . There is a new support class **30;2309;TOOLONG manage the listeners . Using listeners is more consistent with the AWT/JFCevent handling style.CompositeFigure , Decorator , ConnectionFigure , and Drawingare now FigureChangeListeners . <p> StandardDrawing is a CompositeFigure . It is possible to inserta StandardDrawing as a figure into a drawing . This change does notimpact the framework package . The Drawing interface is @ @ @ @ @ @ @ @ @ @ as an argument , but storeit in an instance variable . Existing Tools have to be adapted accordingly . <p> SelectionTool is more open for customization . The trackers to be used for thedifferent selection modes can be overridden by the factory methods createHandleTracker , createDragTracker , createAreaTracker . The MouseTracker class was merged into AbstractTool and could be eliminated . The selection tool to be used in an application can be customizedby overridding createSelectionTool in **38;2341;TOOLONG illustrates how to use a customized selection tool thatcan handle double clicks on figures . <p> DrawApplication supports keyboard short cuts for the common operations . <h> JDK1.1 features <h> Event Model <p> All event handling related classes use the JDK1.1 event model.This required to change some method signatures to refer to morespecific events . Returning a boolean to indicate the consumptionof an event was removed . <h> Serialization <p> This version supports to use of serialization to make adrawing persistent . **30;2381;TOOLONG LONG ... both the oldstorable and the serializable format . Support for thestorable formatwill be removed in the next version . <p> Serialization is used in the default implementation of @ @ @ @ @ @ @ @ @ @ <p> Thanks to 1.1 the access to resources could be drastically simplified.All the resources are now accessed relative to classes.The images directory with standard images is therefore part of thepackage hierarchy . <p> IconKit could be decoupled from DrawingEditor and was moved **25;2413;TOOLONG to org.jhotdraw.util.Refer to the sample applications for how toload and access resources like images . <h> Various UI Features <p> Tools support to use tool specific cursors . <p> org.jhotdraw.application shows the DrawingView by default in a ScrollPane . There is a new method createContents that can be overridden to customizethe default arrangement . The default size of the view can be customized byoverriding getDrawingViewSize() . <p> org.jhotdraw.application supports to print a drawing . <h> Packaging <p> The packaging was changed to separate the framework interfacesfrom default implementations . <p> The framework package defines the coreinterfaces and leaves default implementations to the standard package.All key abstractions of the framework are now defined as interfaces.Ward Cunningham has suggested this some time ago and it ended upto be natural and logic evolution . <p> The implementation of the framework interfaces comes in two flavors.Abstract classes like AbstractFigure , provide @ @ @ @ @ @ @ @ @ @ StandardDrawing implement aframework interface and can be used as is . <p> The framework package was renamed to " framework " the old " fw " was due to a temprorary bug in the used IDE : <p> A figures package was forked of the standard package . This packageprovides a kit of standard figures and their related handle andtool classes . <p> There is a new package contrib that contains classes contributedby others . <h> Connectivity <p> Connectors were introduced to define connections between figures.A figure can have one or more connectors . A figure creates aconnector for a specific location connectorAt ( int x , int y ) . A connector knows how to findthe connection point . A connection figure keeps track of aconnector for its start and end point . <p> Figure.chop() is no longer needed and was removed . Its functionalityis subsumed by Connectors . <p> A set of standard connectors is provided in the standard and figurepackages . <p> BoxChopConnector : finds a connection point by chopping the connection at the figure 's bounding box . <p> LocatorConnector : uses a locator to find @ @ @ @ @ @ @ @ @ @ ona figure . Referto the NetApp sample for an example of using them . <p> **25;2440;TOOLONG : finds the connection points based on the shortest distancebetween figures . <p> EllipseChopConnector : finds a connection point by chopping the connection at the ellipse defined by the figure 's bounding box . <p> Connectors are optionally visible and Figure has a method connectorVisibility to turn their visibility on and off . This is used by the ConnectionToolto highlight connection points when the mouse moves over a figure . <p> TextFigures can be attached to other figures . The **25;2467;TOOLONG to create a connected TextFigure . Try it out in JavaDraw.The text figureis connected to the Figure that is clicked when thetool is active . To position a connected TextFigure figures can overridethe method connectedTextLocator to return a locator . <h> Various Changes <p> FigureEnumeration extends Enumeration to enable to iterate overfigures without having to do a down casted in client code . Itprovides an additional method nextFigure to get the next Figure . <p> AbstractFigure was split . AbstractFigure no longer keeps track ofthe FigureAttributes dictionary . The dictionary is now maintainedin @ @ @ @ @ @ @ @ @ @ subclasses without having to use theFigureAttributes implementation . <p> Trackers are gone . Trackerfunctionality is implemented in the Handles themselves . In contrastto Locators they did not turn out to be reusable for different handles.The class BoxHandleKit hides the different Handle implementation classesfrom the API. 
@@24629349 @4629349/ <h> 3D Image Laboratory <p> This software can simulate viewpoint changes between the left and right ' eye ' of a stereo image pair . <p> This is experimental software with incomplete functionality . The menu items do n't work " just drag images into the " Stereo Image " image wells , then click " Compute Viewpoint Simulation " and wait until the processing finished . Sometimes you have to swap the left with the right image to get proper results . <p> You can use the sliders to transition between the viewpoints . <p> Click " Export as Video " to export the viewpoint transition as a QuickTime video . <p> The exported videos are quite large . To compress them , load them into the QuickTime player , and then use the menu " Save for Web " . <p> Note that altough this software can load stereo pictures ( . MPO files ) taken from a Finepix Real 3D W1 camera , it does not actually create useful results with these pictures . This is because my software does not rectify the images before processing @ @ @ @ @ @ @ @ @ @ use of disparity maps between a stereo image pair . A disparity map describes the distance between corresponding points on two images . <p> The video gradually displaces the pixels from their original location up to the distance given by the disparity maps . Pixels on the left image which become obscured by the transition are filled in by pixels taken from a transition computed from the right image . 
@@24629350 @4629350/ <h> Shape3D <p> coords - Coordinate data for the shape . Each group of three entries describe a vector x , y , z in three dimensional space . <p> faces - Faces of the shape . Each entry in the first dimension of this array describes a face . Each entry in the second dimension of this array represents a vertex at the borderline of the face . Each vertex is the index of a vector in the coords array . The vertices of the face must be indicated in clockwise direction . All vertices must be on the same plane and the boundary of the face must be convex . <p> colors - The colors for each face . For each face , two colors can be specified : a fill color ( index 0 of the inner array ) and a wireframe color ( index 1 of the inner array ) . <h> Shape3D <p> coords - Coordinate data for the shape . Each group of three entries describe a vector x , y , z in three dimensional space . <p> faces - Faces of @ @ @ @ @ @ @ @ @ @ this array describes a face . Each entry in the second dimension of this array represents a vertex at the borderline of the face . Each vertex is the index of a vector in the coords array . The vertices of the face must be indicated in clockwise direction . All vertices must be on the same plane and the boundary of the face must be convex . <p> colors - The colors for each face . For each face , two colors can be specified : a fill color ( index 0 of the inner array ) and a wireframe color ( index 1 of the inner array ) . <p> reducedFaceCount - The shape will only draw reducedFaceCount colors , if the attribute isReduced is set to true . 
@@24629351 @4629351/ <h> RectangleFigure <h> drawFill <p> This method is called by method draw() to draw the fill area of the figure . AbstractAttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> drawStroke <p> This method is called by method draw() to draw the text of the figure . AbstractAttributedFigure configures the Graphics2D object with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . 
@@24629352 @4629352/ <p> isVisible() A Figure is only drawn by a CompositeFigure , if it is visible . <p> void <p> **29;2494;TOOLONG , Figure&gt; oldToNew , boolean disconnectIfNotInMap ) After cloning a collection of figures , the ConnectionFigures contained in this collection still connect to the original figures instead of to the clones . <h> draw <p> void draw ( java.awt.Graphics2D g ) <p> Draws the figure . 41272 @qwx241272 <p> g - The Graphics2D to draw to . <h> getLayer <p> int getLayer() <p> Gets the layer number of the figure . The layer is used to determine the z-ordering of a figure inside of a drawing . Figures with a higher layer number are drawn after figures with a lower number . The z-order of figures within the same layer is determined by the sequence the figures were added to a drawing . Figures added later to a drawn after figures which have been added before . If a figure changes its layer , it must fire a **28;2525;TOOLONG event to its figure listeners . <h> isVisible <p> boolean isVisible() <p> A Figure is only drawn by a CompositeFigure @ @ @ @ @ @ @ @ @ @ invisible figures too . <h> restoreTransformTo <p> void **35;2555;TOOLONG restoreData ) <p> Restores the transform of the figure to a previously stored state . <h> transform <p> void **39;2592;TOOLONG tx ) <p> Transforms the shape of the Figure . Transformations using double precision arithmethics are inherently lossy operations . Therefore it is recommended to use **25;2633;TOOLONG restoreTransformTo() to provide lossless undo/redo functionality . <p> This is a basic operation which does not fire events . Use the following code sequence , if you need event firing : <h> setAttribute <p> Sets an attribute of the figure and calls attributeChanged on all registered FigureListener 's . <p> For efficiency reasons , the drawing is not automatically repainted . If you want the drawing to be repainted when the attribute is changed , you can either use key.set ( figure , value ) ; or figure.willChange() ; figure.setAttribute ( key , value ) ; figure.changed() ; . <h> getAttributes <p> Returns a view to all attributes of this figure . By convention , an unmodifiable map is returned . <h> getAttributesRestoreData <p> java.lang.Object **26;2660;TOOLONG <p> Gets data which can be used to @ @ @ @ @ @ @ @ @ @ been applied to it . <h> restoreAttributesTo <p> void **36;2688;TOOLONG restoreData ) <p> Restores the attributes of the figure to a previously stored state . <h> isSelectable <p> boolean isSelectable() <p> Returns true , if the user may select this figure . If this operation returns false , Tool 's should not select this figure on behalf of the user . <p> Please note , that even if this method returns false , the Figure may become part of a selection for other reasons . For example , if the Figure is part of a GroupFigure , then the Figure is indirectly part of the selection , when the user selects the GroupFigure. <h> isRemovable <p> boolean isRemovable() <p> Returns true , if the user may remove this figure . If this operation returns false , Tool 's should not remove this figure on behalf of the user . <p> Please note , that even if this method returns false , the Figure may be removed from the Drawing for other reasons . For example , if the Figure is used to display a warning message , the Figure can @ @ @ @ @ @ @ @ @ @ is no longer relevant . <h> isTransformable <p> boolean isTransformable() <p> Returns true , if the user may transform this figure . If this operation returns false , Tool 's should not transform this figure on behalf of the user . <p> Please note , that even if this method returns false , the Figure may be transformed for other reasons . For example , if the Figure takes part in an animation . <h> createHandles <p> detailLevel - The detail level of the handles . Usually this is 0 for bounding box handles and 1 for point handles . The value -1 is used by the SelectAreaTracker and the HandleTracker to highlight figures , over which the mouse pointer is hovering . <h> findCompatibleConnector <p> Gets a compatible connector . If the provided connector is part of this figure , return the connector . If the provided connector is part of another figure , return a connector with the same semantics for this figure . Return null , if no compatible connector is available . <h> remap <p> After cloning a collection of figures , the ConnectionFigures contained in @ @ @ @ @ @ @ @ @ @ to the clones . Using This operation and providing a map , which maps from the original collection of figures to the new collection , connections can be remapped to the new figures . 
@@24629353 @4629353/ <p> For QuickTime , the videos are encoded with the Apple Animation codec , which I already had implemented some time ago . <p> You can download the file ScreenRecorder.jar . Double click the file to start the screen recorder . The . jar file also includes the source code of the recorder . The code is preliminary , and may substantially change in future releases . <p> The code described in this article is obsolete . Stay tuned for a new recorder which also supports audio capture in AVI files . <p> Update 2011-07-05 : <p> The rate of screen and mouse captures can now be adjusted individually . <p> Update 2011-05-13 : <p> I have added support for audio capture . This feature is currently only available with QuickTime videos , since AVIWriter is not finished yet . Audio is recorded from line-in . Line-in is usually the microphone of the computer . <p> Update 2011-05-09 : <p> I have changed the code so that it will record into the home folder " Videos " on Windows , and into - " Movies " on Mac OS @ @ @ @ @ @ @ @ @ @ recording silently failed if this folder did not exist . Now , an error message is displayed . <p> Update 2014-01-22 : I have closed the comment section for this article , because the screen recorder class is obsolete . Take a look at the Monte Media Library for newer versions . <p> I downloaded the jar file and working on it , it is very nice and working great thanks for that . But I want to record the Audio which is coming out from the music player in my PC . Is it possible to record like that . <p> Yes , recording audio generated by the PC is possible . The screen recorder records audio from line in . To record audio generated by the PC , connect the audio output jacket and the audio input jacket with a cable . You can buy this kind of cable at every electronics store . <p> Thanks for your reply now Iam able to record the lineout audio coming from my pc , but the thing is when Iam recording the video for 1 min the file size is @ @ @ @ @ @ @ @ @ @ reduce the size of the recorded file by coding . <p> The file size is determined by your choice of the codecs , rate settings and the amount of screen changes . <p> With the default settings of the screen recorder ( QuickTime , Screen Capture Codec , Millions of colors , 10 fps screen rate , 30 fps mouse rate , 22.050 Hz audio ) on a 1024 x 768 computer screen , I get about 10 MB per minute , while browsing through a few Internet pages and writing an e-mail . <p> ya , me to getting 10 MB per minute with the settings which you have given but while recording a video on the screen i am getting the file size as 100MB per minute . I think it is the bit rate problem , is there any way to control or to set the bit rate in this application .. <p> Screen recorders are not suited for capturing videos . It is not clear to me , why you want to do this ? I mean , if you already have a video file , @ @ @ @ @ @ @ @ @ @ are two possibilities for reducing the file size : <p> Postprocessing with a third-party tool : After capturing the video with the Screen Capture codec , use ffmpeg to re-encode the screen recording with H.264 . This will give the best results , but you may encounter problems with bandwidth and space limitations of your hard disk while recording . <p> Bandwidth-Limitation while recording : The JPEG codec supports different quality settings . Recording a full-screen video with JPEG 50 % encoding will yield a smaller file size than the TechSmith Codec . The file will still be huge though . Again , you can postprocess it with ffmpeg , but since the JPEG codec introduces artefacts , the resulting movie will have two generations of compression artefacts ( JPEG + H.264 ) . <p> The " Colors " option specifies the number of colors that are recorded . This is used to limit the bandwidth of a recording . For hundreds of colors , 8-bits per pixel are needed ; for thousands of colors 16-bits are needed , for millions of colors 24-bits . <p> I have n't noticed issues @ @ @ @ @ @ @ @ @ @ experience ? Have you ensured that the microphone level of your computer is properly set . For example , if the microphone level is set too high , audio amplitudes will be clipped resulting in distorted sounds . <p> Hello Werner , I have checked it .. but with avi format the audio quality is good .. but not with quicktime .. can you please explain the different encoding techniques that you have provided ? thank you , priyanka <p> Audio is passed through from the audio channel . No encoding is applied . Maybe the screen recorder does not specify the proper audio format ( for example big endian instead of little endian ) . Which audio setting did you use , and on which platform did you perform the recording ? <p> I am currently working on screen recording with audio feature application.The jar file which you have provided is exactly what am looking for.I just want to pass parameters at the run time to the jar file.The main purpose of this research is the user do n't  need to click the record button to start the recording @ @ @ @ @ @ @ @ @ @ parameter the jar should start the recording &amp; when it received Stop parameter the jar should stop the recording.Guide me how to pass parameters &amp; in which file i have to make changes to reach my destination.Thanks in advance . <p> When playing the recorded video the audio is not clear &amp; very noisy.I used Quicktime , 20 FPS &amp; Primary Sound Capture Driver with 44.100 Hz , Stereo.When played in windows media player the audio is so good but i couldnt able to watch the video.When played in VLC player the video is so good but audio is heavily disturbed &amp; very noisy.When played in quick time player it asks me to install additional softwares.How can i record &amp; play the video with audio without any noise &amp; disturbance ? Please guide me to solve this issue ? <p> I have made the java screen recorder now how do I export it to MP4 and compress it to make less then 4 MB for 1 minutes full screen recording .. http : **29;2726;TOOLONG also have the screen recorder and its gives less then 4 mb file size ever time @ @ @ @ @ @ @ @ @ @ 
@@24629355 @4629355/ <h> Package net.n3.nanoxml Description <p> NanoXML is included here , to provide a fast and easy to XML parser which can be used by security restricted Java Applets . <p> With this patched version , NanoXML has been made to be compilable with J2SE5 and to take advantage of the Java2 Collections API . <p> NanoXML has been changed to not open a network connection to retrieve the DTD of a document . This reduces the time needed to read an XML document and it allows to open XML documents when a computer is offline , or when a Java applet runs in a restricted environment that does n't allow connections to the computer hosting the DTD. 
@@24629357 @4629357/ <p> Replace the following icons in the Swing UIManager by a 64 x 64 pixel version of your application icon : OptionPane.errorIcon , **26;2757;TOOLONG , OptionPane.questionIcon , OptionPane.warningIcon . <p> Use Lucida Grande Bold 13 for the main message text and Lucida Grande Plain 11 for the information message text . <p> Do n't display a title on your option pane . <p> Tell Quaqua which option is destructive , so that it can be placed at a distance to non-destructive options . <h> Specifying the width of the option pane <p> Quaqua uses the UIManager property **32;2785;TOOLONG to determine the width of HTML messages and **38;2819;TOOLONG to determine the width of text messages . You can change these values if they do n't fit your requirements . 
@@24629359 @4629359/ <h> **29;2859;TOOLONG <p> Creates a new byte array output stream . The buffer capacity is initially 32 bytes , though its size increases if necessary . <h> **29;2890;TOOLONG <p> public **33;2921;TOOLONG size ) <p> Creates a new byte array output stream , with a buffer capacity of the specified size , in bytes. 41272 @qwx241272 <p> size - the initial size . <p> Throws : <p> **34;2956;TOOLONG - if size is negative . <h> **29;2992;TOOLONG <p> public **34;3023;TOOLONG buf ) <p> Creates a new byte array output stream , which reuses the supplied buffer . <p> Method Detail <h> write <p> public void write ( int b ) <p> Writes the specified byte to this byte array output stream . <p> Overrides : <p> write in class **29;3059;TOOLONG 41272 @qwx241272 <p> b - the byte to be written . <h> write <p> public void write ( byte b , int off , int len ) <p> Writes len bytes from the specified byte array starting at offset off to this byte array output stream . <p> Overrides : <p> write in class **29;3090;TOOLONG 41272 @qwx241272 <p> b - the @ @ @ @ @ @ @ @ @ @ data . <p> len - the number of bytes to write . <h> reset <p> public void reset() <p> Resets the count field of this byte array output stream to zero , so that all currently accumulated output in the output stream is discarded . The output stream can be used again , reusing the already allocated buffer space . <p> Overrides : <p> reset in class **29;3121;TOOLONG <p> See Also : <p> **26;3152;TOOLONG <h> seek <p> public void seek ( long pos ) throws java.io.IOException <p> Sets the current stream position to the desired location . The next read will occur at this location . The bit offset is set to 0 . <p> An **25;3180;TOOLONG will be thrown if pos is smaller than the flushed position ( as returned by getflushedPosition ) . <p> It is legal to seek past the end of the file ; an EOFException will be thrown only if a read is performed . 41272 @qwx241272 <p> pos - a long containing the desired file pointer position . <p> Throws : <p> **35;3207;TOOLONG - if pos is smaller than the flushed position . <p> @ @ @ @ @ @ @ @ @ @ getStreamPosition <p> public long getStreamPosition() throws java.io.IOException <p> Returns the current byte position of the stream . The next write will take place starting at this offset . 
@@24629360 @4629360/ 41265 @qwx241265 <h> Textures <h> Extras <h> Tangle Cube <p> Each sticker shows 4 ropes of different colors so that each rope connects 2 sides of the sticker , and each side has 2 ropes leading to it . All the stickers have the same rope pattern and are using the same 4 colors , though the color arrangement usually differs . In the initial state ropes of the same color are connected , giving a total of 16 closed paths , or 4 paths per color . Note that each cube face has the same 2+2 pattern . <p> The layout of the Tangle Cube was created in 2011 by OlivTr Nagy and Walter Randelshofer . It is based on Patrick Hahn 's idea to cover a Pocket Cube with tiles similar to the ' Rubik 's Tangle ' . Only one unique solution allows to cover the surface of a 2+2+2 cube . <p> ' Rubik 's Tangle ' is a 2D tile puzzle invented by Ern Rubik . There exist several variants of this puzzle , which all have very similar tiles : <p> Rubik 's @ @ @ @ @ @ @ @ @ @ 1990 . The puzzle has 25 single sided cardboard tiles , and the aim was simply to make a 5+5 square with matching edges . The 4 rope pieces on a tile can be colored in 4 ! = 24 ways , and all these occur in a Tangle set . There is one duplicate piece to make the 25 tile set complete . The original Tangle came in 4 flavours , each with a different duplicate piece . An additional puzzle could be created by collecting all 4 sets , and trying to combine them into a 10+10 square . Unfortunately , the combined set of 100 tiles can not be placed in a 10+10 square . The furthest are 99 tiles : a square with one corner tile missing and one of the duplicate tiles is left . <p> Rubik 's Mini Tangle , a simpler version , was also released around 1990 which was still made from single sided cardboard but had only 9 tiles making a 3+3 square . <p> Rubik 's Tangle , the final version , came out in 1995 . It is made @ @ @ @ @ @ @ @ @ @ on both sides but with different color arrangements . Of course , the aim is again to build a 3+3 square . 
@@24629361 @4629361/ <h> Animated Cubes <h> Geo &amp; Clock Cube <h> Settings <h> Status Message <h> Cross Domain AJAX Requests via PHP proxy <p> Click on the map to create a marker and to apply the current latitude and longitude on the cubes , then click on the marker to open an infowindow and click the ' Elevation ' link . The marker is draggable . <p> The script in this page uses a simple proxy with about 40 lines of PHP code . The proxy script was slightly adapted and responds to GET and POST requests . The proxy requires PHP with the curl extension installed . <p> The AJAX elevetion request goes to the proxy and from there to www.earthtools.org . The answer goes back to the proxy and from there to the client script . 
@@24629362 @4629362/ <h> Craig Collins <h> Rise of The Robots ? Builder Droid <p> The ' New Generation ' Amiga CD32 game Rise of The Robots+ by Mirage takes you to a future world , highly industrialised , where technologies have developed and crashed together to create a supreme super-tech society . Over centuries of technological progress , the planet has paid a heavy price . Life is only sustainable in huge city-states that constitute civilisation , the land and oceans beyond have been plundered for raw materials and are irretrievably polluted . Now , all life support : food , water and breathable air is manufactured in population centres . A ruling politico-military class controlls the production of these resources and manipulates the human underclasses accordingly . Internal social disorder is commonplace , both military and trade wars between city states are regularly instituted as a means of population control . <p> The servants of society are robots . The city state Metropolis 4 , the setting for Rise , is the home of Electrocorp , the planet 's major robot manufacturer . Electrocorp produce a huge range of machines @ @ @ @ @ @ @ @ @ @ right up to highly sophisticated military and bio-simulatory models . The Electrocorp manufacturing compley is entrely run by droids , managed day-to-day by the ultimate in robot technology , the polymorphic Supervisor class droid . The Supervisor is unique and has successfully run the Electrocorp plant for several month , that is , until she becomes infected by a highly pernicious computer Ego-Virus corrupting her behavioural programming and creating a vicious psychotic personality . <p> The only way to stop the Supervisor as she proceeds to take over the factory and reprogram its robot-workers , is to send in a human-based Cyborg to seek out and destroy her . <p> The BHF03 Builder droid ( Code Name : Prime-8 ) is designed to supersede the more primitive Loader class . The huge BHF03 is designed to be able to carry heavy plant components around the engineering floors of manufacturing units . <p> BHF03 carries a highly developed power transfer system . From the high energy electro-magnetic server housed in the massive thorax , it is able to instantly switch bolts of energy through to the slave units within its limbs @ @ @ @ @ @ @ @ @ @ arms , results in these huge masses of metal sweeping through the air to deliver blows with a force of several tons . <p> The Builder droid 's rather top-heavy design , coupled with its limited intelligence , dictates a rather static combat style , the Builder tends to crouch rather than use its full height of some 3 metres . This tactic affords protection for its lower limbs and presents a squat armoured bulk to an attacker which can be difficult to penetrate . 
@@24629364 @4629364/ <h> Notation <h> Superset ENG 3x3 <p> Superset ENG 3x3 is a notation for Rubik 's Cubes with 3 layers . The notation is based on the English language . It supports 90 and 180 twists of the layers of the cube . A whole cube can be rotated along its face axes . Permutation and orientation changes of individual cube parts can be specified using permutation cycles . <h> Face twists : R , R ' , R2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? +90 <p> R <p> U <p> F <p> L <p> D <p> B <p> ? ? ? -90 <p> R ' <p> U ' <p> F ' <p> L ' <p> D ' <p> B ' <p> ? ? ? +180&amp;deg <p> R2 <p> U2 <p> F2 <p> L2 <p> D2 <p> B2 <p> Clockwise 90 twists of the six faces of the cube are described by the capital letters : R , U , F , L , D and B , ( right , up , front , left , @ @ @ @ @ @ @ @ @ @ the right face in clockwise direction as seen from the right face . <p> Counterclockwise twists and rotations are described by appending the inversion operator ' to a move : R ' , U ' , F ' , ... <p> In environments , where the ' character can not be used , the character - can be used as an alternative inversion operator . <p> 180 twists and rotations are described by appending the number 2 to a move : R2 , U2 , F2 , ... <h> Tier twists : TR , TR ' , TR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? +90 <p> TR <p> TU <p> TF <p> TL <p> TD <p> TB <p> ? ? ? -90 <p> TR ' <p> TU ' <p> TF ' <p> TL ' <p> TD ' <p> TB ' <p> ? ? ? +180&amp;deg <p> TR2 <p> TU2 <p> TF2 <p> TL2 <p> TD2 <p> TB2 <p> Twists which go two layers deep ( tier twists ) are described by prepending the letter T to a face @ @ @ @ @ @ @ @ @ @ example , TR rotates the outer two layers in clockwise direction as seen from the right face . <h> Mid-layer twists : MR , MR ' , MR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? +90 <p> MR <p> MU <p> MF <p> ML <p> MD <p> MB <p> ? ? ? -90 <p> MR ' <p> MU ' <p> MF ' <p> ML ' <p> MD ' <p> MB ' <p> ? ? ? +180&amp;deg <p> MR2 <p> MU2 <p> MF2 <p> ML2 <p> MD2 <p> MB2 <p> Twists of the layer in the middle ( mid-layer twists ) are described by prepending the letter M to a face twist : MR , MU ' , MF2 . For example , MR rotates the middle layer in clockwise direction as seen from the right face . <h> Slice twists : SR , SR ' , SR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? +90 <p> SR <p> SU <p> SF <p> SL <p> SD <p> SB <p> @ @ @ @ @ @ @ @ @ @ <p> SF ' <p> SL ' <p> SD ' <p> SB ' <p> ? ? ? +180&amp;deg <p> SR2 <p> SU2 <p> SF2 <p> SL2 <p> SD2 <p> SB2 <p> Twists of opposing faces ( slice twists ) are described by prepending the letter S to a face twist . For example , SR turns the right face and the opposing left face in clockwise direction as seen from the right face . <h> Cube rotations : CR , CR ' , CR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? +90 <p> CR <p> CU <p> CF <p> CL <p> CD <p> CB <p> ? ? ? -90 <p> CR ' <p> CU ' <p> CF ' <p> CL ' <p> CD ' <p> CB ' <p> ? ? ? +180&amp;deg <p> CR2 <p> CU2 <p> CF2 <p> CL2 <p> CD2 <p> CB2 <p> Rotations of the whole cube ( cube rotations ) are described by prepending the letter C to a face twist . For example , CR rotates the whole cube in clockwise direction as seen from @ @ @ @ @ @ @ @ @ @ can be grouped using brackets : ( R U F ) . <h> Repetition <p> Moves and groups can be repeated multiple times by appending the number of repetitions to the closing bracket : ( R U F ) 3. 
@@24629365 @4629365/ <p> LONG ... t , int action , **32;3244;TOOLONG parent , int index ) Causes a transfer to the model from a clipboard or * a DND drop operation . <p> void <p> LONG ... newChild , **32;3278;TOOLONG parent , int index ) Inserts the specified element at the specified position in this list Shifts the element currently at that position ( if any ) and any subsequent elements to the right ( adds one to their indices ) . <h> createNodeAt <p> Invoke this to insert a new child at location index in parents children . * This will then message nodesWereInserted to create the appropriate * event . This is the preferred way to add children as it will create the * appropriate event . * * @param type the type of the new child to be created . * @param parent a node from the tree , obtained from this data source . * @param index index of the child . * @exception IllegalStateException if the parent node does not allow children . <p> an Object that specifies the default child type that can be inserted @ @ @ @ @ @ @ @ @ @ can be inserted here . The value must be one of the types returned by operation getCreatableNodeTypes. <h> isNodeRemovable <p> public boolean LONG ... node ) <p> Returns wether the specified node may be removed . * * @param node a node from the tree , obtained from this data source . * @return Returns true for all nodes except for the root . * Returns false if the model is disabled . <h> isNodeEditable <p> public boolean LONG ... node ) <p> Returns wether the specified node may be renamed . * * @param node a node from the tree , obtained from this data source . * @return Returns true for all nodes except . * Returns false if the model is disabled . <h> isImportable <p> Indicates whether the model would accept an import of the * given set of data flavors prior to actually attempting * to import it . * * @param row The insertion point . * @param transferFlavors the data formats available * @return true if the data can be inserted into the component , * false otherwise <h> exportTransferable <p> Creates a @ @ @ @ @ @ @ @ @ @ transfer of the specified elements . * Returns the representation of the rows * to be transferred , or null if transfer is not possible . * * @param rows Row indices . <h> importTransferable <p> Causes a transfer to the model from a clipboard or * a DND drop operation . * * @param row The insertion point . * @param t The transfer data . * @return The number of imported elements or 0 if nothing * was imported . 
@@24629366 @4629366/ <h> JHotDraw 7 : Getting Started <h> Playing around with the sample code <p> JHotDraw comes with a number of mini examples and with some sample programs which you can use to get an idea about its capabilities . <p> The mini examples are located in the org.jhotdraw.sample.mini package . The purpose of the mini examples is to convey a specific aspect or feature of the framework . Most of the mini examples consist only of a single Java class . <p> The larger sample programs are accessible from the navigation bar on the left side of this page . The executable . jar files are located in the folders named Draw , Net , ODG , PERT , SVG and Teddy . The larger sample programs demonstrate how to build a complete application or applet using JHotDraw . <h> Looking at the source code <p> The folder jhotdraw7 is a NetBeans project . If you have the NetBeans IDE , you can open this folder as a project . When you do this , you may have to fix dependencies . All dependent files are located in the @ @ @ @ @ @ @ @ @ @ NetBeans , you can build and run it . This will most likely start one of the sample programs , which are located in the org.jhotdraw.samples packages . <p> You can run any of the classes named Main as well as most classes in the org.jhotdraw.sample.mini package . <h> Integrating JHotDraw into a project of your own <p> JHotDraw is a framework , and not an API . With new versions of the framework , you likely need to adapt your dependent code . JHotDraw also contains a lot of sample code and default implementations , which you are unlikely to need in your application . And finally , the artwork which ships with JHotDraw ( for example the icons ) may not match the style of your application . That 's why we think it makes little sense to bundle JHotDraw into a . jar-file , which can be put into the classpath of an application . 
@@24629367 @4629367/ <h> JPEG images with CMYK and YCCK image data <p> by werner on October 18th , 2008 <p> In order to improve the compatibility of my EmbedPDF applet , I am trying to implement support for JPEG images with CMYK and YCCK colors . <p> Reading this kind of images is harder than I thought . The JPEG file format is complex . The file format can be a basic JFIF ( JPEG file interchange format ) or an extended variant named EXIF ( Exchangeable image file format for digital still cameras ) . In addition , Adobe Photoshop includes some- application data in JPEG files which is relevant for decoding CMYK and YCCK encoded image data . <p> Together with the JPEG Still Image Data Compression Standard book on my desk , and the comments given in bug report 4799903 for Java , I have managed to read the basic JFIF file structure , and put some preliminary code in place which performs a basic decoding of CMYK and YCCK image data . My reader is not yet able to always determine the encoding type , and does @ @ @ @ @ @ @ @ @ @ is sometimes wrong and saturation is often too high . <p> This image sums up my progress on the JPEG reader . The window at the top left , shows the raw file data , the window in the middle the file structure , and the window at the bottom right a decoded image ( which currently has too much saturation ) : <p> Update 2008-10-20 : I solved the hue and saturation issue . It turns out that the APP2 marker segments of a JFIF file contain fragments of an ICC Profile , if they start with the null-terminated string " ICCProfile " . ( The APP2 marker segments can be seen listed on the second window of my screenshot ) . Surprisingly , JPEG images with YCCK image data contain a CMYK ICC Profile , and not a YCCK profile , as one would expect . I am now converting the image from YCCK to CMYK , and then I perform the conversion to RGB using the ICC Profile provided in the JPEG image . This gives the right colors : <p> Oiyee ! Congratulations on making it @ @ @ @ @ @ @ @ @ @ = You made it farther than I ever did . <p> The most I 've ever done is extract pieces of information out of it such as thumbnails from EXIF files ( it turns out ImageIO , least I knew , cant actually do this so it saves a huge amount of time when you 're dealing with megapixel images in a file-browser setting ) . And THAT was pretty hard ; I cant imagine how much work it was making sense of the rest of it ! <p> I 've encountered the same problems when trying to encode a cmyk jpeg ( out of flash as3 specifically ) . <p> I 'm currently testing writing various icc profiles to the APP2 marker but with no success do you have any advice or examples I understand you are ( were ? ) working to display/embed cmyk jpegs and I 'm working the other way around ( trying to emulate photoshops creation of ) but you may be able to help all the same . <p> I am using com.itextpdf.text.Image class for finding DPI of JPEG image . It works fine for RGB colorspace images , @ @ @ @ @ @ @ @ @ @ there any way to find DPI of JPEG images using Java ? 
@@24629368 @4629368/ <h> Extras <h> Links <h> Fellay 's Twelve Color Cube <p> Fellay 's Twelve Color Cube is divided into twelve areas of distinct colors . Each edge has a uniform color , while the corners are split into three and the centers into four colors . Compared to a regular Rubik 's cube the edges no longer need to be oriented but it is required for the side parts . <p> The layout of Fellay 's Twelve Color Cube was created in 2017 by Fabien Fellay . It is a color variation of the Twelve Color Cube published by Douglas R. Hofstadter in the Scientific American issue of March 1981 . In it 's article Hofstadter also thought about alternate ways in coloring the cube : <p> The potential of the 3 + 3 + 3 cube is not close to be exhausted . One rich area of unexplored terrain is that of alternate colorings . The idea was mentioned to me by various M.I.T. cube hackers . One can color the cubies in a variety of ways . Each new coloring presents a different kind of unscrambling problem @ @ @ @ @ @ @ @ @ @ and center-cubie orientations take on a vital importance . In an other variant , corner-cubie orientations are irrelevant and centers matter. + ( Excerpt from Scientific American , March 1981 ) <p> A different coloring can make it more complicate solving a cube but can also simplify it . This variant coloring uses twelve colors in a way to focus more on the corners and side parts but no longer care about edge orientations . <h> The number of possible positions <p> The number of possible positions of the Twelve Color Cube is 8 ! + 37 + 12 ! / 2 + 46 / 2 = 43 ' 252 ' 003 ' 274 ' 489 ' 856 ' 000 43.252 + 1018 which is about 43.3 quintillion on the short scale or 43.3 trillion on the long scale . The Twelve Color Cube has exactly the same amount of possible positions than a regular Rubik 's Cube . <p> The Twelve Color Cube has eight corners , twelve edges and 6 marked centers . There are 8 ! ( 40 ' 320 ) ways to arrange the corners . @ @ @ @ @ @ @ @ @ @ the eighth depends on the preceding seven , giving 37 ( 2 ' 187 ) possibilities . There are 12 ! / 2 ( 239 ' 500 ' 800 ) ways to arrange the edges , since an odd permutation of the corners implies an odd permutation of the edges as well . There are 46 / 2 ( 2 ' 048 ) ways to orient the centers , since an even permutation of the corners implies an even number of quarter turns of the centres as well . 
@@24629369 @4629369/ <p> When other computers had maybe 16 colors at max , the Amiga ( not an " IBM-compatible " ) was suddenly released in 1985 with 4096 colors , stereo sound , plug-and-play , and something even more unheard of : it was built from the ground-up to multitask , meaning it could run more than one program at once ... all the essentials for multimedia . Even with its GUI ( " windows-like " display ) , all this was still accomplished with less than 100k : about 1/10th a megabyte . <p> ( Of course , through some hacks , as well as adding 16 megabytes of memory and over 100 megahertz of " speed " to drive through the mess , Microsoft was able to make an IBM computer do about the same thing 10 years later . " Windows 95 " was hailed as a great accomplishment , and ... well , I 'll rant later ; ) <p> Going to Software , Etc. in the late- ' 80s , the Amiga was always proudly displayed in the front of all the other computers ; @ @ @ @ @ @ @ @ @ @ corner . We were amazed at how , for the first time , a personal computer had enough colors to display a real picture , and how the colors actually seemed to blend-together in the painting program ... we could n't tell where one color began and another ended . The lady there was always excited to bring us the Dragon 's Lair game to play , which looked incredibly like the real animation used in the laserdisc arcade version ... and this was being run off floppies . Alas , the last time I was in Software , Etc. , they did n't know what an Amiga was .... <p> The " business " world ( IBM , Apple , Microsoft , etc. ) scoffed at the Amiga , and said that there was n't a place for fancy graphics and sound ( or even multitasking ) in business computers : only for " game " machines ... which today a compliment . And so people believed them . ( Today , Apple has a " commitment " to graphics , and Microsoft is trying to sell game consoles @ @ @ @ @ @ @ @ @ @ for graphics and animation ( it had a screen-mode allowing it to plug directly into a TV ... something else that was also supposedly a major accomplishment for IBM PCs ten years later ! ) ; the Amiga 's animation , using the popular " Video Toaster " and " LightWave " software , can be seen via Babylon 5 as well as a zillion other TV shows and films . It also was a staple in almost every Public Access station during the ' 90s . But - especially since there was n't yet a World Wide Web - the rest of the public did n't really know where to begin with all the capabilities that had so suddenly become available . <p> Commodore computers , who currently owned the Amiga ( though not to be confused with the well-known Commodore 64 computer ) , was also suffering from mismanagement and hardly ever advertised except in its own magazines . The CEO said , " We do n't need advertising ; if people want it , they 'll buy it . " Commodore went bankrupt in 1993 . Many @ @ @ @ @ @ @ @ @ @ seen an Amiga television advertisement , which I why when I found some on an old MTV recording from 1989 , I had to scan them off for others to see ( yes , they did exist ! ) . <p> Gateway 2000 bought the rights to the Amiga in 1997 , but has n't done much . <p> Former Apple engineer Jean-Louis Gassee ( now at BeOS , Inc. ) , reminiscing about Apple in the mid- ' 90s , said : " When the Amiga came out , everyone was scared as hell . No one could figure out how they packed so much power into its off-the-shelf parts . " Apple 's Mac was still black and white , cost more , and could only do one thing at a time . But , Apple advertised ; Commodore did n't . " We Apple were really scared of the Amiga . Fortunately , Irving Gould CEO of Commodore helped Apple by running Commodore into the ground . " ( Interview with Mr. Gasse in Amazing Computing , Nov. 1996 ) Around the same time , Atari was @ @ @ @ @ @ @ @ @ @ and later the Falcon ) - which was also way ahead of IBM/Microsoft 's PC and Apple 's Macintosh . Ironically , the two companies with the best products bit the dust , and vice-versa ; Atari and Commodore put all their money into their computer development , while Apple and IBM/Microsoft instead put their money into their advertising . Since most of the public did n't know much about computers back then , advertising proved to the most important part of making computers . <p> OTHER AMIGA FIRSTS ( as of 1985 ) : <p> *2-button mouse standard <p> *Variety of screenmodes , switchable without re-booting ( one could even , for instance , drag a screenmode such as VGA smoothly over another with the mouse . ) <p> *Official versions of Myst and Quake ( which do indeed exist and made by clickBOOM ) can be run successfully on Amigas from the ' 80s . <p> *Cheap , Cheap , CHEAP ! ! ! <p> Unfortunately , now people look up the specs of an Amiga , see that it ran on a Motorola 680xx processor or whatever @ @ @ @ @ @ @ @ @ @ That is because they are judging it by what other computers could do with the same resources , which was nowhere near what an Amiga could achieve . <p> Personally I have never seen the memory requirements of PCs versus Macs be incredibly different ; most people would figure a 16 mb PC is relatively equal in performance to a 16 mb Mac ( or maybe to a 12 mb Mac ) . But 16 mb on a PC/Mac is the equivalent of only about 2-4 mb on an Amiga ; it 's not even in the same ballpark . ( And the amount of speed needed is also as drastically different . ) I believe the true test of a computer is what it can do without a lot of memory and " speed . " Throw on a zillion megs and megahertz and any computer OS should be able to do a lot . <p> Even with my 2 megabyte Amiga , I could simultaneously run an OS better than Windows 95 ( Workbench 3.1 ) , use a WYSIWYG ( **28;3312;TOOLONG ) word processor ( Final Copy @ @ @ @ @ @ @ @ @ @ resolution , check e-mail/newsgroups or download files with a text-based internet program ( Terminus ) , and even have a cool screensaver running . A Windows PC ca n't be turned on with 2 megabytes . <p> The first thing I noticed when using other computers on the University campus is how , when flipping from one application 's window to another , an ancient 7mhz half-meg Amiga can do it instantly no matter how low on memory or resources , but on a newer 150mhz/16meg computer there is a lull ( or sometimes a wait of over a minute while an application finishes what it 's doing ! ) . Why ? Because PCs and Macs were designed as word processors that can only do one thing at a time ... not multimedia computers . And no amount of hardware or software improvements will ever change that . Their solution ? Add more and more horsepower to something that is poorly designed , inefficient , and has poor if any multimedia infrastructure . Heck if I had a ColecoVision going at 800 mhz with a graphics card and 128 @ @ @ @ @ @ @ @ @ @ and years of R&amp;D , it could probably do a lot of neat things too ... but it would still be a mess and nowhere near its full potential . And all the extra workarounds required to make it do simple tasks would make it crash all the time and have strange problems that even the computer makers ca n't track down ( sound familiar ? : ) <p> So ... I du n no , though I once was interested in computers , now-a-dayz nothing new really excites me . I figure that - no matter how good a new technology looks - it is n't nearly at its full potential , because it 's running on what was once a fancy typewriter - an IBM " green-screen " from the ' 70s on steroids - instead of something designed from the ground-up for multimedia . <p> THE COMMERCIALS <p> The first commercial on this page seemed to be the most comprehensive and main one out of those I had . The second features a teenager 's parents becoming annoyed because everybody keeps coming over to use his computer @ @ @ @ @ @ @ @ @ @ teenager - with the aid of a video camera , genlock , and coaxial cable attached to the neighbor 's TV - tricks the girl next door into thinking he 's won some kind of Grammy music award on her television . All the commercials interestingly contain music from the movie The Goonies . Does anyone know who the announcer or " Stevie Palmer " are ? <p> NOTE : The two bigger pictures on this page from the end of the commercials make nice wallpaper for your Windows or Mac PC ; ) <p> WATCH an Amiga CD32 commercial ! This page has a commercial for the Commodore Amiga CD32 - the world 's first 32-bit video game system . ( I 'm assuming this was never shown in the US ... or maybe anywhere else for that matter . ) Click on the " multimedia " link . <p> Anti-Windows Boot ScreensA few pictures I made that you can use as your PC 's boot screen to express your frustration with Windows . <p> WATCH the original Amiga " Juggler " animation.Site explaining the Juggler animation and has @ @ @ @ @ @ @ @ @ @ n't actually tried it on an Amiga , but MooVid plays avi 's so if anyone tries it let me know ! ( I remember seeing a clip of this animation in Tom Petty 's " Jammin ' Me " video from 1987 by the way . ) Now if someone could scan the original " Boing ! " animation that would be cool .... <p> A fatal exception OE has occured in module SOLITAIRE at 10B3:23A132C9 . The current application will be terminated . * Press any key to continue . There is a 1% chance that another application wo n't crash . * Press CTRL-ALT-DEL to restart your computer . You will lose any unsaved information , and your hard drive could crash with all the wear and tear the Windows boot procedure will place on it , just like how it always has to run when you move the mouse . <p> Amiga : ( noun ) The most technologically advanced computer that hardly anyone cares about . Use in sentence : " I wanted to buy an Amiga for its low price and great color graphics @ @ @ @ @ @ @ @ @ @ Macintoshes . So , to remain compatible with the rest of the world , I spent three times as much on a Macintosh and got only half the graphics capability of an Amiga . " <p> Below is an actual ad for a book byMICROSOFT PRESSabout the " fantastic " Amiga ! ( I found this in Commodore Magazine , July 1987 ... click to enlarge ) <p> Unlike many computer " history " pages which do n't even turn up any results for the term " Amiga " , I was surprised at finding an entry in the AOL Webopedia ( now apparently the ZD Net Webopedia ) for the " powerful " Amiga , and even a mention of the Amiga under the " multitasking " term . <p> Here are some more ' 80s Amiga ads ... they 're great ads , but Commodore unfortunately just put them in their own magazines : 
@@24629370 @4629370/ <p> As mentioned in an earlier article , I have written a reader for JPEG images with CMYK color data in Java . <p> This reader can be used with Java ImageIO . I have made a demo including source code : CMYKDemo.jar . You can download this file and then double click it to run the demo . The demo is a window onto which you can drop a CMYK image . You can unzip the file to get the source code . <p> Here is how to use the CMYKJPEGImageReader with ImageIO : <p> Register the reader with ImageIO.This can be done by putting the file CMYKDemo.jar into the class path.Alternatively if you want to build the reader from source and integrate it into your own . jar file you can create a file named LONG ... and put it in the class path . <p> The file should contain the following line : <p> LONG ... <p> Read an image with ImageIO.Unfortunately , the ImageIO.read method is not a reliable way for reading a JPEG CMYK image . <p> ImageIO.read(file) ; <p> This does not work @ @ @ @ @ @ @ @ @ @ There is no way to specify in which order the readers shall be used . So , sometimes , ImageIO will use our CMYKJPEGImageReader and succeed , and sometimes it will try to use its own reader , and fail . <p> Therefore , we need to use the following code snippet , which tries out all JPEG readers until it succeeds . <p> WebGL is a new 3D graphics context for the &lt;canvas&gt; HTML element . It allows to create high-performance 3D rendering in a browser without the need of plug-ins . The WebGL graphics context is an OpenGL ES API for JavaScript . <p> I think , the WebGL API should be very familiar for everyone who has already programmed with OpenGL in C++ and GLSL . Creating a 3D rendering with WebGL typically involves the following steps : <p> Add a &lt;canvas&gt; element to an HTML page . <p> Access the element from JavaScript , and get the WebGL context . <p> Load a vertex shader and a fragment shader into the context . <p> Load geometry , colors and textures into the context . <p> Specify @ @ @ @ @ @ @ @ @ @ geometry through the context . <p> I have ported one of my virtual Rubiks Cube applets from Java to WebGL . To ease my work , I used some code from the WebGL demo repository . Below is a screenshot . <p> For QuickTime , the videos are encoded with the Apple Animation codec , which I already had implemented some time ago . <p> You can download the file ScreenRecorder.jar . Double click the file to start the screen recorder . The . jar file also includes the source code of the recorder . The code is preliminary , and may substantially change in future releases . <p> The code described in this article is obsolete . Stay tuned for a new recorder which also supports audio capture in AVI files . <p> Update 2011-07-05 : <p> The rate of screen and mouse captures can now be adjusted individually . <p> Update 2011-05-13 : <p> I have added support for audio capture . This feature is currently only available with QuickTime videos , since AVIWriter is not finished yet . Audio is recorded from line-in . Line-in is usually @ @ @ @ @ @ @ @ @ @ <p> I have changed the code so that it will record into the home folder " Videos " on Windows , and into - " Movies " on Mac OS X and everywhere else . In the prior version , recording silently failed if this folder did not exist . Now , an error message is displayed . <p> Update 2014-01-22 : I have closed the comment section for this article , because the screen recorder class is obsolete . Take a look at the Monte Media Library for newer versions . <p> " In case of object-oriented programs , relating features to their implementations is , however , a difficult task , as object- oriented programming languages provide no means for expressing features explicitly . In object-oriented programs , features are implemented implicitly as inter-class collaborations crosscutting not only multiple classes but also multiple architectural units , e.g. layers in layered architectures . This physical tangling and scattering of features over several source code units makes their implementations difficult to identify and understand . " <p> They used the SVG sample application of JHotDraw 7.5 as an example . @ @ @ @ @ @ @ @ @ @ features , and thus makes such an analysis unnecessarily hard . From now on , I am going to extend the package comments and class comments in JHotDraw with a " Features " section , similar to the " Design Patterns " section which is already present . The " Features " section will name a feature , state the part of the feature that the package or class implements , and list participating packages and classes . <p> This release only does minor tweaks in the drawing framework . My focus was on overall robustness of the code and on cleaning up the framework for creating menu bars . <p> To improve the robustness of JHotDraw , I have adopted FindBugs annotations . Most packages of JHotDraw define the @NonNull annotation as the default for all classes , fields and methods . Fields , method parameters and return values which can be set to null are annotated individually with @Nullable . I ran JHotDraw through the FindBugs static code analyzer and fixed all potentially harmful issues , that the tool discovered and I deemed important . <p> In the @ @ @ @ @ @ @ @ @ @ groups by the new interface MenuBuilder . A JHotDraw Application can piece the groups together into JMenuBar(s) and JPopupMenu(s) to build the user interface of the application . <p> Updated JavaDoc and change documentation ( generated with JDiff ) is available on my JHotDraw 7 pages . <p> In my article Writing QuickTime videos in pure Java , I said I would integrate audio support if I would get the right incentives ( wine or books ) . - This has happened , and so I have implemented an all new class named QuickTimeWriter , which supports writing of audio and video data into a QuickTime Movie file in pure java . <p> The class is still in a very early stage . Right now , it can be used for combining a single audio track with a single video track . <p> Audio has to be encoded before it can be written . I tried to make this as simple as possible by supporting **31;3342;TOOLONG in one of the addAudioTrack() methods . <p> As with my previous implementation , QuickTimeWriter provides a minimal set of encoders for video data @ @ @ @ @ @ @ @ @ @ PNG , Photo-JPEG , Apple Animation ( RLE ) and None ( Raw ) . Other encodings are possible , but you have to encode the frames by yourself . <p> QuickTimeWriter stores samples in the same sequence in the movie file as they are written . If a movie is created for further processing , the samples can be written in any order . If the movie shall be playable , samples of multiple tracks should be interleaved about twice per second . I have described this in more detail in the class comments . <p> I have also created a small demo program which shows how to put it all together : <p> The animations shown on his site are absolutely stunning . The images are exquisitely drawn with great attention to detail . The animations have been quilted into many different layers of a scene . There are so many different things going on , you have to look at an image for a long time to fully appreciate it . The animations were created by artist Mark Ferrari . <p> Joseph has implemented color cycling using @ @ @ @ @ @ @ @ @ @ image data object from the canvas 2d context by calling context.createImageData , and then writes the pixels into it . Since canvas does not support images with indexed colors , it is not sufficient to just update the color lookup table to achieve a color cycled animation . Instead , each individual pixel has to be updated explicitly . This is quite a burden for JavaScript , causing the fan of my laptop to blow strongly after looking at an animation for a few minutes . Nevertheless , the animations achieve about 30 fps on my 2 GHz Intel Core 2 Duo . <p> Mark has created the images using Deluxe Paint II for PC compatibles . The color cycling is done using CRNG " color range cycling " , and is thus limited by the number of colors in the palette . ( Using DRNG " DPaint enhanced color cycling " available in Deluxe Paint IV for Amiga , it would have been possible to use more colors ) . Therefore , since the number of colors is limited to 256 , and since Mark uses so many different @ @ @ @ @ @ @ @ @ @ kind of jerkiness in the animations but they are super smooth ! <p> This is thanks to a new technique named BlendShift Cycling which Mark has developed . Instead of shifting colors in discrete steps through a cycle , the colors are blended seamlessly in and out of the color registers . - A very simple and effective technique . <p> Since I am hosting a number of CRNG cycled animations on my web site , I thought it would be great to have the same quality of animation too . Therefore I have updated my Java applets . For example , the Defender of the Crown title screen animation is now smooth like silk . <p> A major subject of this course were correctness proofs of algorithms.With proofs we can show the correctness of a program . This is in contrast to- testing , which can only show the presence of errors , but not their absence . <p> The ultimate goal is showing the complete correctness of a software application . This is not possible as of today , but major progress has been done in this area @ @ @ @ @ @ @ @ @ @ many more advanced things , with Spec# we can show the absence of null pointer errors in a program . <p> Since I did n't  want to include IDEA code with another license model into JHotDraw , and since I wanted to tinker a little bit with the concept , I have created a new annotations package in JHotDraw 7.5.1 . <p> My @Nullable and @NotNull annotations are almost identical to the ones in IDEA . The only difference is , that the annotations can be set on classes as well . Usually , I set a @NotNull annotation on a class , to say that by default all types and methods defined by this class are non-null . And then , I set the @Nullable annotation to define exceptions of this rule . This nicely keeps down the number of annotations needed in a Java class . <p> I have n't yet used these annotations on many classes in JHotDraw , but I plan to use them everywhere in this project . <p> Update 2011-01-07 : In the meantime I dropped my annotation package and - use now FindBugs annotations @ @ @ @ @ @ @ @ @ @ be defined at various levels in the source code for example on a method , a class or on a complete package . This keeps the source code tidy . The FindBugs analyzer can use these annotations to find potential problems in the code . I have fixed all problems that I considered potentially harmful . 
@@24629372 @4629372/ <h> New color cycling technique for animated images <p> The animations shown on his site are absolutely stunning . The images are exquisitely drawn with great attention to detail . The animations have been quilted into many different layers of a scene . There are so many different things going on , you have to look at an image for a long time to fully appreciate it . The animations were created by artist Mark Ferrari . <p> Joseph has implemented color cycling using an HTML 5 canvas object . He programmatically creates an image data object from the canvas 2d context by calling context.createImageData , and then writes the pixels into it . Since canvas does not support images with indexed colors , it is not sufficient to just update the color lookup table to achieve a color cycled animation . Instead , each individual pixel has to be updated explicitly . This is quite a burden for JavaScript , causing the fan of my laptop to blow strongly after looking at an animation for a few minutes . Nevertheless , the animations achieve about 30 fps on @ @ @ @ @ @ @ @ @ @ has created the images using Deluxe Paint II for PC compatibles . The color cycling is done using CRNG " color range cycling " , and is thus limited by the number of colors in the palette . ( Using DRNG " DPaint enhanced color cycling " available in Deluxe Paint IV for Amiga , it would have been possible to use more colors ) . Therefore , since the number of colors is limited to 256 , and since Mark uses so many different cycles simultaneously , I would have expected to see some kind of jerkiness in the animations but they are super smooth ! <p> This is thanks to a new technique named BlendShift Cycling which Mark has developed . Instead of shifting colors in discrete steps through a cycle , the colors are blended seamlessly in and out of the color registers . - A very simple and effective technique . <p> Since I am hosting a number of CRNG cycled animations on my web site , I thought it would be great to have the same quality of animation too . Therefore I have updated @ @ @ @ @ @ @ @ @ @ the Crown title screen animation is now smooth like silk . 
@@24629374 @4629374/ <h> Changes in Version 2.0alpha71 2009-01-05 <p> All cubes except the DiamondCube with the Idx3d-engine can now be twisted by dragging the mouse pointer over the stickers . <p> Removed players with Geom3D engine from CubeTwister HTML template to reduce the overall download size . These applets are currently not used by CubeTwister alpha . <h> Changes in Version 2.0alpha70 2009-01-03 <p> The player applets are now localized in English , German , French and Italian . <p> Cubes can now be twisted by dragging the mouse pointer over the stickers . For now , this only works for CubeTwister and for applets with the Idx3d-engine . It is not fully implemented yet for the Diamond cube and it is not implemente yet for the " flat " Geom3D-engine . <h> Changes in Version 2.0alpha69 2008-12-30 <p> Fixed parameter " faceList " in cube player applets . <p> Added parameters " showResetButton " , " showScrambleButton " and " showSettingsButton " to cube player applets . <h> Changes in Version 2.0alpha68 2008-12-26 <p> . jar-files in HTML templates are now generated from the . jar.pack.gz files to reduce download @ @ @ @ @ @ @ @ @ @ movies , AVI videos , and video still images . <h> Version 1.0.3.2 2007-03-04 <p> Updated Quaqua look and feel to version 3.7.5 . This fixes an issue which rendered tabbed panes unusable on computers running Java 1.5 or higher . <h> Version 1.0.3.1 2004-02-22 <p> This is a hotfix for a bug which prevented the forms in the right pane of CubeTwister from displaying properly on any operating system running Java 1.4.2 and on Mac OS X 10.3 ( Panther ) running any version of Java 1.3 or 1.4 . <h> Version 1.0.3 2003-11-10 <p> Added notation Touchard Deledicq FRA to template . <p> Fixed a bug which prevented copy &amp; paste from working on Java 1.4 . <p> Added a better file chooser for Mac OS X ( Quaqua Look and Feel ) . <h> Version 1.0.2 2003-08-19 <p> Fixed a minor bug which prevented CubeTwister 1.0.1 to run on Windows . <h> Version 1.0.1 2003-08-18 <p> Fixed a minor bug which prevented CubeTwister 1.0 to run on non-Mac OS X operating systems . <h> Version 1.0 2003-08-10 <p> Script Editor : Graphical editor for entering the state @ @ @ @ @ @ @ @ @ @ added . 
@@24629375 @4629375/ <h> JToolBar <h> Client properties : <p> The " title " style requires that the client property apple.awt.brushMetalLook is set on the JRootPane . <p> Quaqua.ToolBar . isDividerDrawn <p> java.lang.Boolean <p> If set to Boolean.FALSE , turns the divider line between the toolbar and the center area of its panel off . <h> General <p> The style of a toolbar provides a visual cue about its purpose . <p> " plain " style : This style was in use from Mac OS X 10.0 through 10.4 . Use this style only , if none of the other styles fit your purpose . <p> " title " style : Use this style for the toolbar at the top of a window . Tool bars with this style should give users immediate access to the most frequently used features in an application. * <p> " bottom " style . Use this style for the toolbar at the bottom of a window . Tool bars with this style should give users access to controls that directly affect the contents or organization of the window body. * <p> " gradient " style . @ @ @ @ @ @ @ @ @ @ a JList , JTree or a JTable . Tool bars with this style should affect the contents of a list , tree or table . The " gradient " style works best for JTree 's which have the client property " Quaqua.Tree.style " set to " sourceList " . <p> * On Mac OS X 10.5 or newer , JToolBar 's with the " title " -style fuse with the frame borders of the window , if the client property " apple.awt.brushMetalLook " is set on the JRootPane . JToolBar 's with the " bottom " -style always fuse with the frame borders of the window . Note that the window can be moved by dragging a fused toolbar . <h> Components on a JToolBar <p> Components added to a JToolBar inherit the style of the JToolBar . This may not always work , if components are first added to a JPanel , and then the JPanel is added to the JToolBar . In this case , it is necessary to set client properties on the components . <p> JToggleButton 's on JToolBar 's support the style toolBarTab . This @ @ @ @ @ @ @ @ @ @ . <h> Example 1 <p> A floatable JToolBar on the left , containing three JButtons , a JSeparator and three JToggleButtons . All buttons have an icon , but no text . The JSeparator was created using method addSeparator of the JToolBar . <h> Example 2 <p> A non-floatable JToolBar placed on the top , containing three JButtons , a JSeparator and three JToggleButtons . All buttons have text only . <p> JToolBar toolBar = new JToolBar() ; <p> ... <p> toolBar.addSeparator() ; <p> JToggleButton videoButton = new JToggleButton() ; <p> **25;3375;TOOLONG ; <p> videoButton.setText ( " Video " ) ; <p> toolBar.add(videoButton) ; <h> Example 3 <p> A non-floatable JToolBar placed on the top , containing three JButtons , a JSeparator and three JToggleButtons . All buttons have an icon and text placed below the icon . The JToggleButtons use the client property Quaqua.Button.style set to toolBarTab . <p> JToolBar toolBar = new JToolBar() ; <p> **27;3402;TOOLONG ; <p> ... <p> toolBar.addSeparator() ; <p> JToggleButton videoButton = new JToggleButton() ; <p> **27;3431;TOOLONG ; <p> videoButton.setText ( " Video " ) ; <p> LONG ... <p> LONG ... <p> **30;3460;TOOLONG @ @ @ @ @ @ @ @ @ @ ; <p> toolBar.add(videoButton) ; <h> Example 4 <p> A non-floatable JToolBar placed on the top , containing three JButtons , a JSeparator and three JToggleButtons . All buttons have text only , the font is set to Lucida Grande 11 ( the AHIG " Small system font " ) . The JToggleButtons use the client property Quaqua.Button.style to create a " segmented control " look . 
@@24629376 @4629376/ <h> Plugging FMJ decoders and renderers into JMF <p> Decoders from the FMJ project can be used as plug ins for JMF . But some work is required . <p> FMJ plug ins do not work out of the box , because JMF is very picky about the format descriptions that a plug in returns to advertise its input/output capabilities . <p> To get support for PNG-encoded AVI and QuickTime videos in JMF , one can use the FMJ PNGDecoder as a codec plugin . JMF can only build a data flow graph though if one patches the FMJ PNGDecoder and the FMJ ImageIODecoder as follows : <p> Method **35;3492;TOOLONG needs to return a new VideoFormat ( " png " ) object so that JMF can associate it with the corresponding " png " FourCC in the video files . This VideoFormat object can be returned in addition to the PNGFormat object which is already returned . <p> Method **39;3529;TOOLONG needs to return a new **27;3570;TOOLONG ( ) , -1 , Format.byteArray , inputCast.getFrameRate() , 24 , 16711680 , 65280 , 255 ) object , so that JMF can @ @ @ @ @ @ @ @ @ @ RGBFormat object can- be returned in addition to the RGBFormat object which is already returned . <p> To get support for JPEG-encoded AVI and QuickTime videos in JMF , one can use the FMJ JPEGRenderer as a renderer plugin . The following patch is needed in FMJ : <p> Method **36;3599;TOOLONG needs to return new **28;3637;TOOLONG , null , Format.NOTSPECIFIED , Format.byteArray , Format.NOTSPECIFIED ) . This is needed , so that JMF can associate it with the " MJPG " FourCC in the video files . Again , this format object can be returned in addition to the one already being returned . <p> Thanks to these patches , my own little media player MultiShow is now able to play JPEG- and PNG-encoded videos in AVI and QuickTime files . <p> In case someone is interested in the code . The patched FMJ code is available in the download file of MultiShow . <p> Have you seen anything that suggests that a platform-independent Theora decoder that can be dropped into JMF is available anywhere ? <p> Do you know anything about Sun adding simple video support to Java in @ @ @ @ @ @ @ @ @ @ ? <p> I can use QuickTime to make Theora videos in MOV wrappers quite nicely now . They look good and appear to play well . Also , they 're very much smaller than the Cinepak that I 've had to use for years . Now , QuickTime wont even export Cinepak in MOV format ; I must use AVI . I am also having problems playing AVI Cinepak videos at times depending on the content . <p> I can only expect JMF to be more and more of a problem . For the short term , I 'd love to have JMF play Theora in MOVs . Maybe that will last until a decent media API appears in Java . <p> FMJ wo n't work for me . I really must have an invisible load for my customers , most of whom are students . I can use jmf.jar . <p> I think , Sun wants us to use JavaFX for video playback . = I hope , they will integrate the JavaFX video component into a future version of Java . Unfortunately this will probably not happen for Java 7 , since @ @ @ @ @ @ @ @ @ @ Thank you for sharing your applications . I am trying to create a Java application running on Windows that receives MPEG4 video packets on a UDP port and renders the images on a Java panel . I have been attempting to use JMF with various pluginsFOBS , JFFMPEGwithout success . Do you have any suggestions for getting JMF to process MP4 video ? I would greatly appreciate any help you could offer . Thank you . <p> I have no recent experience with JMF and real time streaming using RTSP ( Afaik RTSP is a UDP protocol ) . I tried it out many years ago , and it worked fine at the time . <p> Afaik JMF together with JFFMPEG should be able to handle most file formats . I would first try getting these libraries to work with a local MP4 file . Once that is properly set up , I would tinker around with RTSP. 
@@24629378 @4629378/ <h> Screenmate " Neko " in Java <p> Neko is Japanese for cat . According to Wikipedia it was originally written for the- NEC PC-9801 . I know it from the OS/2 program of the same name . <p> ( Image from Wikipedia commons ) <p> The little kitten Neko chases the mouse cursor around the desktop . Once she 's over it and the mouse does n't  move shell prepare to take a nap . If the mouse goes outside the desktop she will reach the border and try to dig for it . Shell eventually give up , and fall asleep . <p> The cat is displayed on a JWindow which I have made transparent using the following command : <p> **35;3667;TOOLONG , false ) ; <p> Since Neko is supposed to chase the cursor , we need to poll the mouse location in regular intervals using a Swing Timer . I query the location using a call to the MouseInfo class:PointerInfo pointerInfo = **26;3704;TOOLONG Point mouseLocation = **25;3732;TOOLONG ; <p> We do n't  want Neko to go outside of the Desktop area . I determine the bounds @ @ @ @ @ @ @ @ @ @ gc = **26;3790;TOOLONG ; Rectangle screenBounds = gc.getBounds() ; Insets screenInsets = **32;3818;TOOLONG ; <p> The rest of the code is pretty much identical with Chris Java applet . 
@@24629380 @4629380/ <h> Psygnosis <h> Lemmings Intro <p> The legendary game , developed 1990 by DMA Design and published 1991 by Psygnosis , was one of the most popular computer games of its time . The enormous success on the Amiga led to its rapid porting to a breath-taking number of other platforms , and is considered to be the most widely-ported video game of all time . <p> The aim of Lemmings+ is to guide a group of up to 100 cute , little critters through a series of hazard-filled screens . What gamers quickly grew to love was the emergent nature of the gameplay ? you often genuinely believed that you had found a unique way of completing a level . Absolute design genius . <p> The player can give the green-haired Lemmings special skills at appropriate moments , enabling them to build a save path home . Otherwise the dopey little creatures would mindlessly wander ' en masse ' into any danger in their path . <p> Famously , the concept for Lemmings+ came from an animation created by Mike Dailly over a lunchtime , to prove a @ @ @ @ @ @ @ @ @ @ . 
@@24629384 @4629384/ <p> Note Howdy ! So far , of the positions I know that take 20 , there are 36 that have 8 cubies fully correct ( as Superflip does ) and only one that has more than 8 . This position is the following : F3 R3 F2 U2 F1 L2 B1 D2 R2 L2 U1 B2 U1 B3 D2 F1 L2 D2 R3 F3This is a fascinating position : every cubie is located correctly , but eight corners are twisted and two edges are flipped.Still , by ease of description , superflip is still champion. -tom ( Tomas G. Rokicki , November 24 , 2013 ) 
@@24629386 @4629386/ <h> Robert J. Mical <h> Boing Ball Demo ( Screenshot ) <p> The Amiga Boing Ball is a mythical object in the computer industry . It was created for a computer show to demonstrate the capabilities of the prototype Amiga ( codename ' Lorraine ' ) . The demo showed a red-and-white spinning ball , bouncing up and down and casting a shadow on a wall behind it while multitasking in the background . The echoing deep ' boing ' sound and left-right motion was added soon after the show was over . <p> According to the legend , the Boing Ball demo was written late one night at the Winter CES show in January 1984 by RJ Mical and Dale Luck . At the time it was an amazing achievement that surpassed all current systems of the time . Because the bouncing ball animation was so fast and smooth , attendees did not believe the Amiga prototype was really doing the rendering . Suspecting a trick , they began looking around the booth for a hidden computer or VCR . <p> The 1984 Boing Ball demo was one @ @ @ @ @ @ @ @ @ @ It was specifically designed to take advantage of the Amiga 's custom graphics , achieving a level of speed and smoothness not previously seen on an affordable computer . The demo was operating in it 's own screen , allowing the higher resolution Amiga Workbench screen to be dragged down to make the Boing Ball visible from behind , bouncing up above the Workbench while the Workbench remained fully active . Since the Boing Ball used almost no CPU time ( only to calculate the bounce angles ? animation was handled by playfield vertical and horizontal scrolling tricks , the rotation animation was done with color cycling in the graphics chip , and of course the sound chip handled the sound ) , this made a particularly impressive demonstration of multitasking at the time . <p> The original Amiga team preferred the Boing Ball design , adopting as the unofficial trademark . Dozens of Boing Ball logos were made for the A1000 launch , until Commodore decided to use the rainbow-colored double checkmark . <p> Fortunately , the old design was not forgotten and the design became an unofficial representation @ @ @ @ @ @ @ @ @ @ Commodore went into liquidation the Boing Ball became a symbol of the Amiga philosophy and power before it was tainted by Commodore . 
@@24629388 @4629388/ <h> Squeezing the Meta-Data out of an MPO file <p> This camera shoots stereo pictures and stores them in a Multi-Picture ( MPO ) file . <p> Fuji did- a very fine job by standardizing and publishing the details of this format with the Japanese Camera &amp; Imaging Products association ( CIPA ) . <p> MPO files created by my camera consist of two concatenated JFIF streams . The meta-data is stored in TIFF Image File Directories ( IFD ) within APP1- and APP2-segments of the JFIF data streams . <p> The meta-data consists of Exif data sets and Multi-Picture Format ( MPF ) data sets. - - Exif provides information about the camera settings and the picture taking conditions . The MPF data set is crucial for interpreting the contents of the MPO file . It tells as how the images in the file are related to each other . <p> Not all important meta data for viewing stereo images is stored in the MPF data set though . Some additional data is provided by the Fujifilm MakerNote of the second image . <p> The important parts of @ @ @ @ @ @ @ @ @ @ Number of images . Tells us how many images are in the MPO file ( 2 for a stereo image ) . <p> MP Entry Information . Contains information about each image in the MPO file . Such as MP Type Code which is set to - MultiFrameDisparityImage for a stereo image . <p> Convergence Angle . Is the angle formed by the line of sights between the base viewpoint and the current viewpoint . On the Fujifilm camera , the left eye is the base viewpoint and the right eye has a convergence angle of 2.2 degrees . <p> Baseline Length . The distance between the two camera eyes . This is 7.7 cm on the Fujfilm camera . The average human eye distance is around 6.3 cm . <p> Important meta data for stereo image viewing stored in the Fujifilm MakerNote of the second image : <p> Parallax . Controls the horizontal overlap of the two images . This is used to adjust the 3D effect of an image displayed on the monitor on the back of the camera . The value stored in the MakerNote is -2 @ @ @ @ @ @ @ @ @ @ picture below shows how I worked my way through the file format . In the window at the top you can see a stereo picture I shot with the camera . The second window shows a binary representation of the Exif data . The Exif IFD is marked in yellow and green . The window below shows the parsed structures of the IFD . The fourth window shows the parsed information from the MPF data set . The MPTypeCode states that I shot a Multi-Frame Disparity Image , which is well the technical term for a stereo image . <p> I have integrated the code into MultiShow . If you have MPO files of your own , you can use it to inspect their meta-data . <p> Now , what is left to do , is shooting more pictures , and trying to make something useful with all this data <p> Update 2010-7-7 : Added information about the important bits of data for stereo viewing . <p> Werner thank you for adding the MPO features to your MultiShow application . I am impressed with the native look-and-feel of your application @ @ @ @ @ @ @ @ @ @ possible using Java . Guess I should look more closely at Java since I 'm basically opposed to creating applications that run on only one platform , but I still do n't  want to give up the native goodness of the host UI . <p> I believe Java is a very good option for cross-platform applications , if one is ready to invest some extra work into platform-integration . Of course , Java is not the only good solution . Qt and Flex are good solutions too . 
@@24629389 @4629389/ <p> Instructional text , consisting of a problem description and instructions for the student <p> A problem diagram <p> A solution diagram <p> When the tutorial page is presented , a student can : <p> Read the instructional text <p> Edit the problem diagram <p> Retrieve a textual description of the differences between the current edit of the problem diagram with the solution <p> The tutorial page can be exported as a SCORM Sharable Content Object . Using additional tools , this allows integrating the tutorial page into a larger online tutorial , bundling it up into a SCORM Package Interchange File , and deploying it on an online learning management system . <h> State of this Project <p> This project is in an experimental state . Do not use it for the creation of real learning content , as you might face issues with the tutorial pages once you deploy them . Also , we do not guarantee backwards compatiblity of XML source files created using the tool . <p> Except for the simulation , Conceptul and Relational Entity Relationship Diagrams are fully implemented . <p> The exported @ @ @ @ @ @ @ @ @ @ For a final release , a template mechanism needs to be added , allowing to integrate the pages created with Concept Modeler into the graphical design of learning content produced by other tools . <h> License <p> Concept Modeler is dual-licensed under the GNU Lesser General Public License LGPL and the Creative Commons Attribution 3.0 License . <h> History of this project <p> Concept Modeler is a remnant of a project application , which was made at the Lucerne University of Applied Sciences and Arts ( HSLU ) in 2001 . Unfortunately , the project was not admitted , but I had already put a considerable effort in my spare time into the prototype for the class diagram editor . <p> In 2006 , the project seemed to become a revival , as part of a collaborative project between HSLU and the Scuola universitaria professionale della Svizzera italiana ( SUPSI ) . Unfortunately , HSLU had to back out of the project in 2007 . The result of this collaboration were two concept modeler tools for entity relationship diagrams . <p> And finally , also in 2007 , Florian Padrun @ @ @ @ @ @ @ @ @ @ project , as part of his diploma project at HSLU. 
@@24629390 @4629390/ <h> drawFill <p> This method is called by method draw() to draw the fill area of the figure . AbstractAttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> drawImage <h> drawStroke <p> This method is called by method draw() to draw the text of the figure . AbstractAttributedFigure configures the Graphics2D object with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . <h> findCompatibleConnector <p> Gets a compatible connector . If the provided connector is part of this figure , return the connector . If the provided connector is part of another figure , return a connector with the same semantics for this figure . Return null , if no compatible connector is available . 
@@24629392 @4629392/ <p> Names of weekdays may be written using two different forms . The first is a short form , which is used in this calendar . In the second form , the word ? ? ? which means ' day ' , come before the short form . This full form is used in phrases like ' last Sunday ' or ' next Monday ' , for example . <p> Arabic months <p> ? ? ? ? ? , ? ? ? , yanayir ( January ) <p> ? ? ? ? ? ? , ? ? ? , fibrayir ( February ) <p> ? ? ? ? , ? ? ? , maris ( March ) <p> ? ? ? ? ? , ? ? ? , abril ( April ) <p> ? ? ? ? , ? ? ? , mayu ( May ) <p> ? ? ? ? ? , ? ? ? ? ? , ? ? ? , yuniya , yuniyu ( June ) <p> ? ? ? ? ? , ? ? ? ? ? , ? ? ? , yuliya , yuliyu @ @ @ @ @ @ @ @ @ @ ? ? ? , agus ? us ( August ) <p> ? ? ? ? ? ? , ? ? ? , sibtambar ( September ) <p> ? ? ? ? ? ? , ? ? ? , uktubar ( October ) <p> ? ? ? ? ? ? , ? ? ? , nufambar ( November ) <p> ? ? ? ? ? ? , ? ? ? , disambar ( December ) <p> In arabic , letters may be written using up to three different forms , depending on their position inside a word . Letters that are at the beginning , inside or at the end of a word may not be the same . There is also a fourth form , which is used when the letter is unconnected , ie. not connected to another one . This latter form has been used here for writing the first three letters of each month on the cube . <p> The layout of the arabic calendar cube was created in 2008 by AndrT Boulouard and Walter Randelshofer. 
@@24629393 @4629393/ 41265 @qwx241265 <h> Bus Game Cube <p> The Bus Game Cube is a game for two to six players driving their own imaginary bus from the ' Start ' to the ' End ' field and picking up and dropping off passengers . <p> It 's a deterministic game , where players can only discover their fates by following the rules . With alternate rules it can become highly nonlinear , especially when more then two players compete . The fate of the game remains uncertain . <p> The initial state of the cube displays three closed road loops . Two of them are not accessible from the ' Start ' , but this is going to change while playing the game . <p> The layout of the Bus Game Cube was created in 2010 by Stefan Berinde . <h> Gameplay <h> Game rules <p> The journey of your bus begins at the ' Start ' field . Try to reach the ' End ' field below the bridge faster then your mates . Twist the back face in clockwise direction when you come along a ' B-Sign ' @ @ @ @ @ @ @ @ @ @ ' Pick Up ' of your color and you have to deliver them at the ' Drop Off ' with the same color . Then aim for the ' End ' field as soon the passengers left the bus . Note that players stop on every connected ' Bus Stop ' or ' Drop Off ' . Hand over the cube to the next player when you reach your ' Drop Off ' color . <h> Alternative rules <p> As long there are only three players or less , they can choose up to three colors . But they have to deliver only the passengers they let enter the bus . The players decide freely on which of their ' Drop Off ' colors they halt the bus . An other rule would be to hand over the cube only on a ' Drop Off ' that does n't match the players color(s) . Then the cube goes to the player of that color . If no player has this color , the next player get 's the cube . <h> Playing the game <p> The players are choosing their @ @ @ @ @ @ @ @ @ @ decide . After scrambling the cube , the game can begin . The players are driving now alternately the road until they reach a ' Drop Off ' field where they have to hand over the cube to the next player . Before reaching such a field , they may come along other fields such as ' B-Signs ' . When a connected ' Pick Up ' or ' Drop Off ' field is reached , the players write down the bus stop ( ' Pick Up ' or ' Drop Off ' ) , bus stop color , bus state ( empty or full ) and move direction on their player cards . Now the next player can continue his journey at the field he was pausing the game . The players make sure that they always keep their move directions during the game . <h> Winning the game <p> A player has won when he reaches the ' End ' field before his mates . <h> Textures <h> Extras <h> Player Cards <h> The Game Board <p> To play the game , the players must know the meaning @ @ @ @ @ @ @ @ @ @ Move Direction <p> The ' Start ' of the game is on the bridge . A player wins when he first reaches the ' End ' which is located on the same spot , right under the bridge . The arrows at the start indicate the ' Move Direction ' for the bus at the begining of the game . <h> Road &amp; Intersections <p> Follow the ' Road ' in your move direction . You can not move in opposite direction or turn around . On ' Intersections ' the road leads either over or under the bridge . <h> Pick Ups <p> The six ' Pick Ups ' of different colors along the road are places where bus passengers gather . <h> Bus Stops <p> A bus can only stop and pick up passengers when the gray platforms of the ' Bus Stop ' and the ' Pick Up ' do connect properly . Once the bus is loaded , it can not pick up other passengers until they have been delivered to a ' Drop Off ' with the same color . <h> Drop Offs <p> The @ @ @ @ @ @ @ @ @ @ where passengers can leave the bus . Passengers can not exit if they entered the bus at a pick up with a different color . <h> B-Signs <p> Stop the bus here for a moment and perform a B move ( twist the back face in clockwise direction ) . This will alter the current street layout . 
@@24629394 @4629394/ <h> Notation <h> Superset ENG 4x4 <p> Superset ENG 4x4 is a notation for Rubik 's Cubes with 4 layers , such as the Revenge Cube . The notation is based on the English language . It supports 90 and 180 twists of the layers of the cube . A whole cube can be rotated along its face axes . Permutation and orientation changes of individual cube parts can be specified using permutation cycles . <h> Face twists : R , R ' , R2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? ? +90 <p> R <p> U <p> F <p> L <p> D <p> B <p> ? ? ? ? -90 <p> R ' <p> U ' <p> F ' <p> L ' <p> D ' <p> B ' <p> ? ? ? ? +180&amp;deg <p> R2 <p> U2 <p> F2 <p> L2 <p> D2 <p> B2 <p> Clockwise 90 twists of the six faces of the cube are described by the capital letters : R , U , F , L , D and B , @ @ @ @ @ @ @ @ @ @ , back ) . For example , R rotates the right face in clockwise direction as seen from the right face . <p> Counterclockwise twists and rotations are described by appending the inversion operator ' to a move : R ' , U ' , F ' , ... <p> In environments , where the ' character can not be used , the character - can be used as an alternative inversion operator . <p> 180 twists and rotations are described by appending the number 2 to a move : R2 , U2 , F2 , ... <h> Tier twists : TR , TR ' , TR2 , ... T3R <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? ? +90 <p> TR <p> TU <p> TF <p> TL <p> TD <p> TB <p> ? ? ? ? -90 <p> TR ' <p> TU ' <p> TF ' <p> TL ' <p> TD ' <p> TB ' <p> ? ? ? ? +180&amp;deg <p> TR2 <p> TU2 <p> TF2 <p> TL2 <p> TD2 <p> TB2 <p> ? ? ? ? +90 @ @ @ @ @ @ @ @ @ @ <p> T3B <p> ? ? ? ? -90 <p> T3R ' <p> T3U ' <p> T3F ' <p> T3L ' <p> T3D ' <p> T3B ' <p> ? ? ? ? +180&amp;deg <p> T3R2 <p> T3U2 <p> T3F2 <p> T3L2 <p> T3D2 <p> T3B2 <p> Twists which go multiple layers deep ( tier twists ) are described by prepending the letter T to a face twist : TR , TU ' , TF2 . <p> The depth of the tier can be specified by inserting a number after the letter T. For example , T3R twists three layers deep in clockwise direction as seen from the right face . <p> If the dept is not explicitly specified , the value 2 is assumed : TL , TD ' , TB2 . <p> To keep scripts short , T1R is never used , because it is equivalent to R. T2R is never used , because it is equivalent to TR . <h> Mid-layer twists : MR , MR ' , MR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? ? +90 @ @ @ @ @ @ @ @ @ @ <p> MB <p> ? ? ? ? -90 <p> MR ' <p> MU ' <p> MF ' <p> ML ' <p> MD ' <p> MB ' <p> ? ? ? ? +180&amp;deg <p> MR2 <p> MU2 <p> MF2 <p> ML2 <p> MD2 <p> MB2 <p> Twists of the layer in the middle ( mid-layer twists ) are described by prepending the letter M to a face twist : MR , MU ' , MF2 . <p> On cubes with an even amount of layers , the mid-layers are the ones closer to the face of the cube . <p> The number of layers twisted can be specified by inserting a number after the letter M. For example , M2R twists two layers in the middle in clockwise direction as seen from the right face . <p> If the depth is not explicitly specified , the value 1 is assumed , for example ML , MD ' , MB2 . <p> To keep scripts short , M1R is never used , because it is equivalent to MR . <h> Wide-layer twists : WR , WR ' , WR2 <p> Move <p> @ @ @ @ @ @ @ @ @ @ Back <p> ? ? ? ? +90 <p> WR <p> WU <p> WF <p> WL <p> WD <p> WB <p> ? ? ? ? -90 <p> WR ' <p> WU ' <p> WF ' <p> WL ' <p> WD ' <p> WB ' <p> ? ? ? ? +180&amp;deg <p> WR2 <p> WU2 <p> WF2 <p> WL2 <p> WD2 <p> WB2 <p> Twists of all layers except the outer faces ( wide-layer twists ) can be described by prepending the letter W to a face twist : WR , WU ' , WF2 . <p> WR is equal to M2R and twists two layers in the middle in clockwise direction as seen from the right face . <h> Slice twists : SR , SR ' , SR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? ? +90 <p> SR <p> SU <p> SF <p> SL <p> SD <p> SB <p> ? ? ? ? -90 <p> SR ' <p> SU ' <p> SF ' <p> SL ' <p> SD ' <p> SB ' <p> ? ? ? ? +180&amp;deg <p> @ @ @ @ @ @ @ @ @ @ SB2 <p> Twists of opposing faces ( slice twists ) are described by prepending the letter S to a face twist . For example , SR turns the right face and the opposing left face in clockwise direction as seen from the right face . <h> Slice range twists : S2-2R , S2-2R ' , S2-2R2 , ... <p> Slice twists around an arbitrary range of layers are described by prepending the letter S to a face twist , followed by the number of the first layer , a - character , and the number of the last layer . <p> S2-3R performs a slice twists around the layers 2 through 3 in clockwise direction as seen from the right face . <p> To keep scripts short , slice range twists are only used , if there is no equivalent slice twist . For example , instead of S2-3F2 we write SF2 . <h> Cube rotations : CR , CR ' , CR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? ? +90 <p> CR <p> CU <p> CF <p> @ @ @ @ @ @ @ @ @ @ -90 <p> CR ' <p> CU ' <p> CF ' <p> CL ' <p> CD ' <p> CB ' <p> ? ? ? ? +180&amp;deg <p> CR2 <p> CU2 <p> CF2 <p> CL2 <p> CD2 <p> CB2 <p> Rotations of the whole cube ( cube rotations ) are described by prepending the letter C to a face twist . For example , CR rotates the whole cube in clockwise direction as seen from the right face . <h> Grouping <p> Sequences of moves can be grouped using brackets : ( R U F ) . <h> Repetition <p> Moves and groups can be repeated multiple times by appending the number of repetitions to the closing bracket : ( R U F ) 3. 
@@24629395 @4629395/ 41265 @qwx241265 <h> Textures <h> Extras <h> English Crossword Cube <p> In the inital state this cube displays English three-letter-words on all six faces . By reading them from left to right and from top to bottom a total of 36 words can be discovered . They are either singular nouns , verbs , adjectives , pronouns or adverbs . The cube is colored in blue , red and black . Identic colors are shown on adjacent faces . <p> The layout of the English Crossword Cube was created in 2010 by Stefan Berinde and Walter Randelshofer . <p> The tables below show the words that can be discovered in reading directions from left to right and from top to bottom : 
@@24629396 @4629396/ <h> Writing AVI videos in pure Java <p> The AVIOuputStream class is freely available as part of my CubeTwister source code . You can download a small demo which only contains the AVIOutputStream and all necessary sources here : AVIDemo.jar . Running the demo will create a Motion JPEG-encoded and a PNG-encoded AVI video . <p> I am not sure , if AVI supports PNG-encoded videos at all , because Microsoft Media Player 11 cant play them . The QuickTime player works fine with them though . <p> When I use the demo it creates the jpg avi and png avi ( obviously ) , but when I use Windows Media Player and Media Player from Mega Codec , the playback is playing 1 frame ( actually worse ) per secondeffectively it thinks the 3 second avi is 50 minutes long . Quicktime plays it in 3 seconds . <p> I have n't tried the class yet but I am sure that many Java developers out there really want this kind of functionality and it was pretty difficult to find = I develop Java games and I figured that this @ @ @ @ @ @ @ @ @ @ videos . Thanks for developing this ! <p> After generating an in-game video from Java ( I highly recommend generating AVI-PNG or QuickTime-PNG ) , you may want to run it through an MPEG-4 H.264 baseline encoder . The final video will be very small , and look very crisp . Best thing is , it will work seamlessly with Flash , QuickTime , iPod/iPhone and Windows MediaPlayer . <p> The game engine/tool is currently under development , but I use your AVIOutputStream for every ingame Youtube video I make , except when the actual sound from the game is required . I will give you a link when I release my next game which will happen within 6 months ( I hope = ) . <p> One huge benefit I get when I use your software is that I get very smooth videos which is sometimes not possible when I use external software such as Fraps , Taksi and CamStudio due to slowdowns . <p> I have recently added audio support to my QuickTimeWriter class . Since you re-compress your videos for YouTube anyway , it shouldnt make a @ @ @ @ @ @ @ @ @ @ intermediate format . <p> thanks for an excellent piece of code . It really helped me to add a nice video output feature to a visualisation module for a simulation model . And after running it through ffmpeg with H264 , we get beautiful and compact video files . Very nice ! <p> AVI RAW images are encoded as Microsoft DIB ( device independent bitmap ) . The pixels of a frame are written row by row from bottom to top and from the left to the right . 24-bit pixels are encoded as BGR . <p> This looks really interesting . Do you provide pre-compiled jar files ? I tried building your latest MonteMedia-0.3src-cc.zip stuff with netbeans and I 'm getting a pile of errors ( GPLLicense interface frequently ) that break the build , particularly : LONG ... srcdir LONG ... does not exist ! We could really use this tool , but I cant seem to get it working . -Alex <p> Thank you so much ! I just want you to know that , after trying many free and proprietary tools to try simply to capture video @ @ @ @ @ @ @ @ @ @ way or another , you little Java app works perfectly ! Awesome . 
@@24629397 @4629397/ <h> Leo L. Schwab <h> VideoScape 2.0 Demo <p> When VideoScape 2.0 was finally released , prolific author and AmigaZone moderator Harv Laser was asked to write a review of it for AMNews , a disk-based magazine . <p> Harv in turn contacted me and asked me to create an animation that could accompany his review . It had to look good . It had to show off VideoScape 2.0 's new features . And it had to be 100K or less . ' Ack ! ' <p> So with those constraints , I created this animation . I could n't have a lot of motion , as that would blow the file size . But I tried to show off the highlights of VideoScape 2.0 's new features , which included : <p> ? New polygon colors <p> ? Translucent polygons <p> ? Chrome+ polygons <p> ? Phong shading <p> ? HAM rendering <p> ? Z-buffering <p> When I finished the animation , I popped back to the CLI and nervously checked the size of the file ... 99 ' 990 bytes . Am I good or what ? : - ) 
@@24629399 @4629399/ <h> Notation <h> Superset ENG 7x7 <p> Superset ENG 7x7 is a notation for Rubik 's Cubes with 7 layers , such as the V-Cube 7 . The notation is based on the English language . It supports 90 and 180 twists of the layers of the cube . A whole cube can be rotated along its face axes . Permutation and orientation changes of individual cube parts can be specified using permutation cycles . <h> Face twists : R , R ' , R2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back 41269 @qwx241269 <p> R <p> U <p> F <p> L <p> D <p> B 41270 @qwx241270 <p> R ' <p> U ' <p> F ' <p> L ' <p> D ' <p> B ' 41268 @qwx241268 <p> R2 <p> U2 <p> F2 <p> L2 <p> D2 <p> B2 <p> Clockwise 90 twists of the six faces of the cube are described by the capital letters : R , U , F , L , D and B , ( right , up , front , left , down , back @ @ @ @ @ @ @ @ @ @ in clockwise direction as seen from the right face . <p> Counterclockwise twists and rotations are described by appending the inversion operator ' to a move : R ' , U ' , F ' , ... <p> In environments , where the ' character can not be used , the character - can be used as an alternative inversion operator . <p> 180 twists and rotations are described by appending the number 2 to a move : R2 , U2 , F2 , ... <h> Tier twists : TR , TR ' , TR2 , ... T3R , T4R , T5R , T6R <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back 41269 @qwx241269 <p> TR <p> TU <p> TF <p> TL <p> TD <p> TB 41270 @qwx241270 <p> TR ' <p> TU ' <p> TF ' <p> TL ' <p> TD ' <p> TB ' 41268 @qwx241268 <p> TR2 <p> TU2 <p> TF2 <p> TL2 <p> TD2 <p> TB2 41269 @qwx241269 <p> T3R <p> T3U <p> T3F <p> T3L <p> T3D <p> T3B 41270 @qwx241270 <p> T3R ' <p> T3U ' <p> T3F @ @ @ @ @ @ @ @ @ @ 41268 @qwx241268 <p> T3R2 <p> T3U2 <p> T3F2 <p> T3L2 <p> T3D2 <p> T3B2 41269 @qwx241269 <p> T4R <p> T4U <p> T4F <p> T4L <p> T4D <p> T4B 41270 @qwx241270 <p> T4R ' <p> T4U ' <p> T4F ' <p> T4L ' <p> T4D ' <p> T4B ' 41268 @qwx241268 <p> T4R2 <p> T4U2 <p> T4F2 <p> T4L2 <p> T4D2 <p> T4B2 41269 @qwx241269 <p> T5R <p> T5U <p> T5F <p> T5L <p> T5D <p> T5B 41270 @qwx241270 <p> T5R ' <p> T5U ' <p> T5F ' <p> T5L ' <p> T5D ' <p> T5B ' 41268 @qwx241268 <p> T5R2 <p> T5U2 <p> T5F2 <p> T5L2 <p> T5D2 <p> T5B2 41269 @qwx241269 <p> T6R <p> T6U <p> T6F <p> T6L <p> T6D <p> T6B 41270 @qwx241270 <p> T6R ' <p> T6U ' <p> T6F ' <p> T6L ' <p> T6D ' <p> T6B ' 41268 @qwx241268 <p> T6R2 <p> T6U2 <p> T6F2 <p> T6L2 <p> T6D2 <p> T6B2 <p> Twists which go multiple layers deep ( tier twists ) are described by prepending the letter T to a face twist : TR , TU ' , TF2 . <p> The @ @ @ @ @ @ @ @ @ @ number after the letter T. For example , T3R twists three layers deep in clockwise direction as seen from the right face . <p> If the dept is not explicitly specified , the value 2 is assumed : TL , TD ' , TB2 . <p> To keep scripts short , T1R is never used , because it is equivalent to R. T2R is never used , because it is equivalent to TR . <h> Numbered layer twists : NR , NR ' , NR2 , ... N3R <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back 41269 @qwx241269 <p> NR <p> NU <p> NF <p> NL <p> ND <p> NB 41270 @qwx241270 <p> NR ' <p> NU ' <p> NF ' <p> NL ' <p> ND ' <p> NB ' 41268 @qwx241268 <p> NR2 <p> NU2 <p> NF2 <p> NL2 <p> ND2 <p> NB2 41269 @qwx241269 <p> N3R <p> N3U <p> N3F <p> N3L <p> N3D <p> N3B 41270 @qwx241270 <p> N3R ' <p> N3U ' <p> N3F ' <p> N3L ' <p> N3D ' <p> N3B ' 41268 @qwx241268 <p> N3R2 <p> N3U2 @ @ @ @ @ @ @ @ @ @ of an individual layer of the cube ( twist of the n-th layer ) are described by prepending the letter N to a face twist . The number of the layer can be specified by inserting the number of the layer after the letter N , for example N4R , N3U ' , N4F2 . <p> Layers are numbered starting from the face described by the face twist towards the opposite face . The layer at the face of the cube has number 1 , the next layer has number 2 , and so on . <p> If the layer is not explicitly specified , the value 2 is assumed , for example NL , ND ' , NB2 . <p> To keep scripts short , N1R is never used , because it is equivalent to R. N2R is never used , because it is equivalent to NR . <h> Numbered range twists : N2-3R , N2-3R ' , N2-3R2 , ... <p> Twists of a range of layers are described by prepending the letter N to a face twist , followed by the number of the first layer , @ @ @ @ @ @ @ @ @ @ layer . <p> N2-4R twists the layers 2 through 4 in clockwise direction as seen from the right face . <p> To keep scripts short , ranges which start with 1 or end with the last layer of the cube are written as tier twists , instead of N1-3F2 we write T3F2 , instead of N5-7F we write T3B ' . Ranges of only one layer are written as N layer twists , instead of N2-2D ' we write N2D ' . <h> Verge twists : VR , VR ' , VR2 , ... V3R , V4R <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back 41269 @qwx241269 <p> VR <p> VU <p> VF <p> VL <p> VD <p> VB 41270 @qwx241270 <p> VR ' <p> VU ' <p> VF ' <p> VL ' <p> VD ' <p> VB ' 41268 @qwx241268 <p> VR2 <p> VU2 <p> VF2 <p> VL2 <p> VD2 <p> VB2 41269 @qwx241269 <p> V3R <p> V3U <p> V3F <p> V3L <p> V3D <p> V3B 41270 @qwx241270 <p> V3R ' <p> V3U ' <p> V3F ' <p> V3L ' <p> V3D ' @ @ @ @ @ @ @ @ @ @ V3F2 <p> V3L2 <p> V3D2 <p> V3B2 41269 @qwx241269 <p> V4R <p> V4U <p> V4F <p> V4L <p> V4D <p> V4B 41270 @qwx241270 <p> V4R ' <p> V4U ' <p> V4F ' <p> V4L ' <p> V4D ' <p> V4B ' 41268 @qwx241268 <p> V4R2 <p> V4U2 <p> V4F2 <p> V4L2 <p> V4D2 <p> V4B2 <p> Tier twists without the cube face ( verge twists ) can be described by prepending the letter V to a face twist : VR , VU ' , VF2 . <p> The depth of verge layers can be specified by inserting a number after the letter V. For example , V3R twists the layers 2 through 4 in clockwise direction as seen from the right face . <p> If the depth is not explicitly specified , the value 2 is assumed : VL , VD ' , VB2 . <p> To keep scripts short , V1R is never used , because it is equivalent to NR . V2R is never used , because it is equivalent to VR . <h> Mid-layer twists : MR , MR ' , MR2 , ... M2R , M3R @ @ @ @ @ @ @ @ @ @ <p> Left <p> Down <p> Back 41269 @qwx241269 <p> MR <p> MU <p> MF <p> ML <p> MD <p> MB 41270 @qwx241270 <p> MR ' <p> MU ' <p> MF ' <p> ML ' <p> MD ' <p> MB ' 41268 @qwx241268 <p> MR2 <p> MU2 <p> MF2 <p> ML2 <p> MD2 <p> MB2 41269 @qwx241269 <p> M2R <p> M2U <p> M2F <p> M2L <p> M2D <p> M2B 41270 @qwx241270 <p> M2R ' <p> M2U ' <p> M2F ' <p> M2L ' <p> M2D ' <p> M2B ' 41268 @qwx241268 <p> M2R2 <p> M2U2 <p> M2F2 <p> M2L2 <p> M2D2 <p> M2B2 41269 @qwx241269 <p> M3R <p> M3U <p> M3F <p> M3L <p> M3D <p> M3B 41270 @qwx241270 <p> M3R ' <p> M3U ' <p> M3F ' <p> M3L ' <p> M3D ' <p> M3B ' 41268 @qwx241268 <p> M3R2 <p> M3U2 <p> M3F2 <p> M3L2 <p> M3D2 <p> M3B2 41269 @qwx241269 <p> M4R <p> M4U <p> M4F <p> M4L <p> M4D <p> M4B 41270 @qwx241270 <p> M4R ' <p> M4U ' <p> M4F ' <p> M4L ' <p> M4D ' <p> M4B ' 41268 @qwx241268 <p> M4R2 <p> M4U2 @ @ @ @ @ @ @ @ @ @ of the layer in the middle ( mid-layer twists ) are described by prepending the letter M to a face twist : MR , MU ' , MF2 . <p> On cubes with an even amount of layers , the mid-layers are the ones closer to the face of the cube . <p> The number of layers twisted can be specified by inserting a number after the letter M. For example , M2R twists two layers in the middle in clockwise direction as seen from the right face . <p> If the depth is not explicitly specified , the value 1 is assumed , for example ML , MD ' , MB2 . <p> To keep scripts short , M1R is never used , because it is equivalent to MR . <h> Wide-layer twists : WR , WR ' , WR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back 41269 @qwx241269 <p> WR <p> WU <p> WF <p> WL <p> WD <p> WB 41270 @qwx241270 <p> WR ' <p> WU ' <p> WF ' <p> WL ' <p> WD ' <p> WB ' 41268 @ @ @ @ @ @ @ @ @ @ WD2 <p> WB2 <p> Twists of all layers except the outer faces ( wide-layer twists ) can be described by prepending the letter W to a face twist : WR , WU ' , WF2 . <p> WR is equal to M5R and twists five layers in the middle in clockwise direction as seen from the right face . <h> Slice twists : SR , SR ' , SR2 , ... S2R , S3R2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back 41269 @qwx241269 <p> SR <p> SU <p> SF <p> SL <p> SD <p> SB 41270 @qwx241270 <p> SR ' <p> SU ' <p> SF ' <p> SL ' <p> SD ' <p> SB ' 41268 @qwx241268 <p> SR2 <p> SU2 <p> SF2 <p> SL2 <p> SD2 <p> SB2 41269 @qwx241269 <p> S2R <p> S2U <p> S2F <p> S2L <p> S2D <p> S2B 41270 @qwx241270 <p> S2R ' <p> S2U ' <p> S2F ' <p> S2L ' <p> S2D ' <p> S2B ' 41268 @qwx241268 <p> S2R2 <p> S2U2 <p> S2F2 <p> S2L2 <p> S2D2 <p> S2B2 41269 @qwx241269 <p> S3R <p> S3U @ @ @ @ @ @ @ @ @ @ <p> S3R ' <p> S3U ' <p> S3F ' <p> S3L ' <p> S3D ' <p> S3B ' 41268 @qwx241268 <p> S3R2 <p> S3U2 <p> S3F2 <p> S3L2 <p> S3D2 <p> S3B2 <p> Twists of opposing faces ( slice twists ) are described by prepending the letter S to a face twist . For example , SR turns the right face and the opposing left face in clockwise direction as seen from the right face . <p> The depth of the slices can be specified by inserting a number after the letter S , for example S2R . <p> If the depth is not explicitly specified , the value 1 is assumed , for example SL , SD ' , SB2 . <p> To keep scripts short , S1R is never used , because it is equivalent to SR . <h> Slice range twists : S2-5R , S2-5R ' , S2-5R2 , ... <p> Slice twists around an arbitrary range of layers are described by prepending the letter S to a face twist , followed by the number of the first layer , a - character , and the number @ @ @ @ @ @ @ @ @ @ twists around the layers 2 through 4 in clockwise direction as seen from the right face . <p> To keep scripts short , slice range twists are only used , if there is no equivalent slice twist . For example , instead of S2-6F2 we write SF2 . <h> Cube rotations : CR , CR ' , CR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? ? ? ? ? +90 <p> CR <p> CU <p> CF <p> CL <p> CD <p> CB <p> ? ? ? ? ? ? -90 <p> CR ' <p> CU ' <p> CF ' <p> CL ' <p> CD ' <p> CB ' <p> ? ? ? ? ? ? +180&amp;deg <p> CR2 <p> CU2 <p> CF2 <p> CL2 <p> CD2 <p> CB2 <p> Rotations of the whole cube ( cube rotations ) are described by prepending the letter C to a face twist . For example , CR rotates the whole cube in clockwise direction as seen from the right face . <h> Grouping <p> Sequences of moves can be grouped using brackets : @ @ @ @ @ @ @ @ @ @ and groups can be repeated multiple times by appending the number of repetitions to the closing bracket : ( R U F ) 3. 
@@24629400 @4629400/ <p> Composite Composite figures can be composed of other figures . Component : Figure ; Composite : CompositeFigure . <p> Framework Two figures can be connected using a connection figure . The location of the start or end point of the connection is handled by a connector object at each connected figure . Contract : Figure , ConnectionFigure , Connector . <p> Decorator Decorated figures can be adorned with another figure . Component : DecoratedFigure ; Decorator : Figure . <p> Observer State changes of figures can be observed by other objects . Specifically CompositeFigure observes area invalidations of its child figures . And DrawingView observers area invalidations of its drawing object . Subject : Figure ; Observer : FigureListener ; Event : FigureEvent ; Concrete Observer : CompositeFigure , DrawingView . <p> isVisible() A Figure is only drawn by a CompositeFigure , if it is visible . <p> void <p> **29;3852;TOOLONG , Figure&gt; oldToNew , boolean disconnectIfNotInMap ) After cloning a collection of figures , the ConnectionFigures contained in this collection still connect to the original figures instead of to the clones . <h> TRANSFORMABLEPROPERTY <h> draw <p> @ @ @ @ @ @ @ @ @ @ . 41272 @qwx241272 <p> g - The Graphics2D to draw to . <h> getLayer <p> int getLayer() <p> Gets the layer number of the figure . The layer is used to determine the z-ordering of a figure inside of a drawing . Figures with a higher layer number are drawn after figures with a lower number . The z-order of figures within the same layer is determined by the sequence the figures were added to a drawing . Figures added later to a drawn after figures which have been added before . If a figure changes its layer , it must fire a **28;3883;TOOLONG event to its figure listeners . <h> isVisible <p> boolean isVisible() <p> A Figure is only drawn by a CompositeFigure , if it is visible . Layouter 's should ignore invisible figures too . <h> restoreTransformTo <p> void **35;3913;TOOLONG restoreData ) <p> Restores the transform of the figure to a previously stored state . <h> transform <p> void **39;3950;TOOLONG tx ) <p> Transforms the shape of the Figure . Transformations using double precision arithmethics are inherently lossy operations . Therefore it is recommended to use **25;3991;TOOLONG @ @ @ @ @ @ @ @ @ @ a basic operation which does not fire events . Use the following code sequence , if you need event firing : <h> getAttributes <p> Returns a view to all attributes of this figure . By convention , an unmodifiable map is returned . <h> getAttributesRestoreData <p> java.lang.Object **26;4018;TOOLONG <p> Gets data which can be used to restore the attributes of the figure after a set has been applied to it . <h> restoreAttributesTo <p> void **36;4046;TOOLONG restoreData ) <p> Restores the attributes of the figure to a previously stored state . <h> isSelectable <p> boolean isSelectable() <p> Returns true , if the user may select this figure . If this operation returns false , Tool 's should not select this figure on behalf of the user . <p> Please note , that even if this method returns false , the Figure may become part of a selection for other reasons . For example , if the Figure is part of a GroupFigure , then the Figure is indirectly part of the selection , when the user selects the GroupFigure. <h> isRemovable <p> boolean isRemovable() <p> Returns true , if the @ @ @ @ @ @ @ @ @ @ false , Tool 's should not remove this figure on behalf of the user . <p> Please note , that even if this method returns false , the Figure may be removed from the Drawing for other reasons . For example , if the Figure is used to display a warning message , the Figure can be removed from the Drawing , when the warning message is no longer relevant . <h> isTransformable <p> boolean isTransformable() <p> Returns true , if the user may transform this figure . If this operation returns false , Tool 's should not transform this figure on behalf of the user . <p> Please note , that even if this method returns false , the Figure may be transformed for other reasons . For example , if the Figure takes part in an animation . <h> createHandles <p> detailLevel - The detail level of the handles . Usually this is 0 for bounding box handles and 1 for point handles . The value -1 is used by the SelectAreaTracker and the HandleTracker to highlight figures , over which the mouse pointer is hovering . <h> @ @ @ @ @ @ @ @ @ @ connector is part of this figure , return the connector . If the provided connector is part of another figure , return a connector with the same semantics for this figure . Returns null , if no compatible connector is available . <h> findFigureInside <p> In case of a CompositeFigure , this method descends into its children and into its children 's children until the innermost figure is found . <p> This functionality is implemented using the Chain of Responsibility design pattern . A figure which is not composed of other figures returns itself if the point is contained by the figure . Composed figures pass the method call down to their children . 41272 @qwx241272 <p> p - A location on the drawing . <p> Returns : <p> Returns the innermost figure at the location , or null if the location is not contained in a figure . <h> remap <p> After cloning a collection of figures , the ConnectionFigures contained in this collection still connect to the original figures instead of to the clones . Using This operation and providing a map , which maps from the original @ @ @ @ @ @ @ @ @ @ be remapped to the new figures . 
@@24629401 @4629401/ 41265 @qwx241265 <h> Textures <h> Extras <h> Latin Calendar Cube <p> This cube is a perpetual calendar . By twisting and rotating it , you can set it to today 's date . <p> The weekday is located at the upper right . It is split into two parts . The day in Latin numbers from I to XXXI is located in the middle row . The month at the bottom is split into two or three parts . <p> The Latin version was invented by Alfonso PTrez Arnal and Carlos Angosto Hernndez and was introduced in the Spanish forum El Cubo de Rubik de la A a la Z. <h> Latin weekdays <p> Latin <p> Meaning <p> English <p> DIES LVNAE <p> Moon 's day <p> Monday <p> DIES MARTIS <p> Day of Mars ( the god of war ) <p> Tuesday <p> DIES MERCVRII <p> Day of Mercury ( the god of trade , thieves , and travel ) <p> Wednesday <p> DIES IOVIS <p> Day of Jupiter ( the king of gods and the god of sky and thunder ) <p> Thursday <p> DIES VENERIS <p> @ @ @ @ @ @ @ @ @ @ and sex ) <p> Friday <p> DIES SATVRNII <p> Day of Saturn ( the god of time , justice , and strenght ) <p> Saturday <p> DIES SOLIS <p> Sun 's day <p> Sunday <h> Latin months <p> Latin <p> Meaning <p> English <p> IANVARIVS <p> Named after Janus , the god of doors and gates <p> January <p> FEBRVARIVS <p> Named after Februalia , a time period when sacrifices were made to atone for sins <p> February <p> MARTIVS <p> Named after Mars , the god of war <p> March <p> APRILIS <p> From ' aperire ' , Latin for ' to open ' ( buds ) <p> April <p> MAIVS <p> Named after Maia , the goddess of growth of plants <p> May <p> IVNIVS <p> From ' junius ' , Latin for the goddess Juno <p> June <p> QVINTILIS or IVLIVS <p> From ' quintilis ' , Latin for ' fifth ' . Named after Julius Caesar in 44 BC <p> July <p> SEXTILIS or AVGVSTVS <p> From ' sextilis ' , Latin for ' sixth ' . Named after Augustus Caesar in 8 BC <p> August @ @ @ @ @ @ @ @ @ @ ' seven ' <p> September <p> OCTOBRIS <p> From ' octo ' , Latin for ' eight ' <p> October <p> NOVEMBRIS <p> From ' novem ' , Latin for ' nine ' <p> November <p> DECEMBRIS <p> From ' decem ' , Latin for ' ten ' <p> December <p> The original Roman calendar is believed to have been a lunar calendar , which may have been based on one of the Greek lunar calendars . As the time between new moons averages 29.5 days , its months were constructed to be either hollow ( 29 days ) or full ( 30 days ) . Full months were considered powerful and therefore auspicious ; hollow months were unlucky . <h> Calendar of Romulus ( 753 BC ) <p> Roman writers claimed that their calendar was invented by Romulus , the founder of Rome around 753 BC . His version contained ten months with the vernal equinox in the first month : <p> The calendar year lasted for 304 days . An additional number of winter days , reckoned between the end of December and the beginning of the following @ @ @ @ @ @ @ @ @ @ Calendar of Numa ( 713 BC ) <p> Numa Pompilius , the second of the seven traditional kings of Rome , reformed the calendar of Romulus by prefixing January and February around 713 BC to the original ten months ; thus the names of ' Quintilis ' , ' Sextilis ' , ' Septembris ' , ' Octobris ' , ' Novembris ' and ' Decembris ' ( implying fifth through tenth ) no longer agreed with their position in his calendar . <p> Although Numa wanted to have a lunar year of 354 days , Romans considered odd numbers to be lucky , so Numa added 51 days to the 304 days in the calendar of Romulus and took one day from each of the six 30-day months giving a total of 57 days to share between January and February . January was given 29 days leaving February with the unlucky number of 28 days , suitable for the month of purification . Of the eleven months with an odd number of days , four had 31 days each and seven had 29 days each : <p> February was @ @ @ @ @ @ @ @ @ @ of days . The first part ended with the Terminalia on the 23rd , which was considered the end of the religious year ; the five remaining days formed the second part . In order to keep the calendar year roughly aligned with the solar year , a leap month ( the ' Mensis Intercalaris ' , sometimes also known as ' Mercedonius ' or ' Mercedinus ' ) , was added from time to time between the two parts of February . This caused the second part of February to be incorporated in the intercalary month as its last five days ; there was thus no change either in their dates or the festivals observed on them . The resulting leap year was either 377 or 378 days long , depending on whether Intercalaris began on the day after the Terminalia or the second day after the Terminalia . Intercalaris had 27 days , its nones were on the fifth and its ides on the thirteenth as usual ; the next following day was a.d . XV Kal . Mart . <p> The decision to insert the intercalary month @ @ @ @ @ @ @ @ @ @ On average , this happened roughly in alternate years . The system of aligning the year through intercalary months broke down at least twice : the first time was during and after the Second Punic War . It led to the reform of the Lex Acilia in 191 BC , the details of which are unclear , but it appears to have successfully regulated intercalation for over a century . The second breakdown was in the middle of the 1st century BC and may have been related to the increasingly chaotic and adversarial nature of Roman politics at the time . The position of pontifex maximus was not a full-time job ; it was held by a member of the Roman elite , who would almost invariably be involved in the machinations of Roman politics . Because a Roman calendar year defined the term of office of elected Roman magistrates , a pontifex maximus would have reason to lengthen a year in which he or his allies were in power , or shorten a year in which his political opponents held office . <h> Julian Calendar ( 45 BC ) @ @ @ @ @ @ @ @ @ @ the calendar was overhauled , with the result being the ' Julian Calendar ' . The calendar reforms were completed during the reign of his successor Augustus . ' Quintilis ' was renamed ' Iulius ' ( July ) in honour of Julius Caesar in 44 BC and ' Sextilis ' was renamed ' Augustus ' ( August ) in honour of Augustus in 8 BC . <p> The Julian Calendar was introduced by Julius Caesar in 46 BC . It took effect the following year , 45 BC , and continued to be used as the civil calendar in some countries into the 20th century . The calendar has a regular year of 365 days divided into 12 months . A leap day is added to February every four years . The Julian year is , therefore , on average 365.25 days long : <p> The first step of the calendar reform was to realign the start of the calendar year ( 1 January ) to the tropical year by making 46 BC 445 days long , compensating for the intercalations which had been missed during Caesar 's pontificate @ @ @ @ @ @ @ @ @ @ 378 days by the insertion of a regular intercalary month in February . When Caesar decreed the reform , probably shortly after his return from the African campaign in late Quintilis ( July ) , he added 67 more days by inserting two extraordinary intercalary months between November and December . <p> These months are called ' Intercalaris Prior ' and ' Intercalaris Posterior ' in letters of Cicero written at the time ; there is no basis for the statement sometimes seen that they were called ' Undecimber ' and ' Duodecimber ' . Their individual lengths are unknown , as is the position of the Nones and Ides within them . Because 46 BC was the last of a series of irregular years , this extra-long year was , and is , referred to as the ' last year of confusion ' . The new calendar began operation after the realignment had been completed , in 45 BC. 
@@24629402 @4629402/ <h> AVIOutputStream <p> Creates a new AVI output stream with the specified video format and framerate. 41272 @qwx241272 <p> out - the underlying output stream <p> format - Selects an encoder for the video format . <p> Throws : <p> **34;4084;TOOLONG - if videoFormat is null or if framerate is &lt;= 0 <p> java.io.IOException <p> Method Detail <h> setTimeScale <p> public void setTimeScale ( int newValue ) <p> Used with frameRate to specify the time scale that this stream will use . Dividing frameRate by timeScale gives the number of samples per second . For video streams , this is the frame rate . For audio streams , this rate corresponds to the time needed to play nBlockAlign bytes of audio , which for PCM audio is the just the sample rate . <p> The default value is 1 . 41272 @qwx241272 <p> newValue - <h> getTimeScale <p> public int getTimeScale() <p> Returns the time scale of this media . <p> Returns : <p> time scale <h> setFrameRate <p> public void setFrameRate ( int newValue ) <p> Sets the rate of video frames in time scale units . <p> @ @ @ @ @ @ @ @ @ @ value 1 of timeScale this results in 30 frames pers second . 41272 @qwx241272 <p> newValue - <h> getFrameRate <p> public int getFrameRate() <p> Returns the frame rate of this media . <p> Returns : <p> frame rate <h> setPalette <p> public void **41;4120;TOOLONG palette ) <p> Sets the global color palette . <h> **26;4163;TOOLONG <p> public void **32;4191;TOOLONG newValue ) <p> Sets the compression quality of the video track . A value of 0 stands for " high compression is important " a value of 1 for " high image quality is important " . <p> Changing this value affects frames which are subsequently written to the AVIOutputStream . Frames which have already been written are not changed . <p> This value has only effect on videos encoded with JPG format . <p> The default value is 0.9. 41272 @qwx241272 <p> newValue - <h> **26;4225;TOOLONG <p> public float **28;4253;TOOLONG <p> Returns the video compression quality . <p> Returns : <p> video compression quality <h> setVideoDimension <p> public void setVideoDimension ( int width , int height ) <p> Sets the dimension of the video track . <p> You need to @ @ @ @ @ @ @ @ @ @ from files or input streams . <p> If you add frames from buffered images , then AVIOutputStream can determine the video dimension from the image width and height . 
@@24629404 @4629404/ <h> UIManager properties : <p> Set this to true , to get the same preferred height for editable and non-editable combo boxes . This may result in better layouts with some layout managers . The default value is false . <p> ComboBox . maximumRowCount <p> Integer <p> This is initialized to 100 by Quaqua . Set this to a smaller value , if this breaks your application . <h> Client property : JComponent.sizeVariant <p> Quaqua supports the regular and small size variant . <p> You can change the size of a combo box by setting the client property JComponent.sizeVariant , or by setting an appropriate font . Combo boxes are displayed with regular size for the font Lucida Grande 13 and with small size for the font Lucida Grande 11. 
@@24629405 @4629405/ <h> xpoints <p> public double xpoints <p> The array of X coordinates . The number of elements in this array might be more than the number of X coordinates in this Polygon . The extra elements allow new points to be added to this Polygon without re-creating this array . The value of npoints is equal to the number of valid points in this Polygon. <h> ypoints <p> public double ypoints <p> The array of Y coordinates . The number of elements in this array might be more than the number of Y coordinates in this Polygon . The extra elements allow new points to be added to this Polygon without re-creating this array . The value of npoints is equal to the number of valid points in this Polygon. <h> invalidate <p> Invalidates or flushes any internally-cached data that depends on the vertex coordinates of this Polygon . This method should be called after any direct manipulation of the coordinates in the xpoints or ypoints arrays to avoid inconsistent results from methods such as getBounds or contains that might cache data from earlier computations relating to the vertex @ @ @ @ @ @ @ @ @ @ iterates along the boundary of this Polygon and provides access to the geometry of the outline of this Polygon . An optional AffineTransform can be specified so that the coordinates returned in the iteration are transformed accordingly . 
@@24629406 @4629406/ <p> The colors are ordered by wavelength from lowest ( red ) to highest ( purple ) . <p> The rows are ordered by brightness from brightest to darkest ( bright sky above , dark earth below ) . <p> Gray is singled out in a separate column . <p> I think this arrangement is very forthcoming for the human visual system , allowing to identify the desired colors easily . <p> And this was the main point of Jeremys article the interface puts the user in control . The overall design is concise and simple . Everybody can use this chooser right away . <p> I had a similar color chooser in JHotDraw 7.4 , but I used a different arrangement . I had placed the red column in the middle and the darkest row at the top . I have changed this now according to Jeremys layout : <p> There are exactly 12 columns . This allows to represent the additive primary color hues , their complements and their mixtures in an equal spacing of 30 degrees on the color wheel . <p> There are 10 rows @ @ @ @ @ @ @ @ @ @ % steps. - The first 5 of the color rows provide a saturation scale in 20 % steps. - The last 5 of the color rows provide a brightness scale in 20 % steps . ( The row in the middle is shared with the saturation scale ) . <p> There is spacing between the color swatches . I hope that this reduces the contrast effect . But I am not sure whether this really is the case it seems that much more spacing would be needed . <p> A tooltip shows the component values of the color swatch under the mouse pointer . <p> At the bottom , there is a button which allows to open a color chooser . I have n't designed it yet , so the standard Java color chooser pops up here . <p> There are some non-visual things in this design as well : <p> A color can be selected using a single mouse press-drag-release interaction . Press the mouse over the color well , drag the cursor to the desired color swatch and then release the mouse button . <p> The color chooser can @ @ @ @ @ @ @ @ @ @ . <p> Java Color objects are created using the constructor which takes a ColorSpace argument . This prevents loss of information when a ColorSpace does not have a bijective mapping with sRGB . For example when different CMYK colors map to the same sRGB color . <p> I have also added a means to enter the color textually . The entry field currently supports sRGB , HSB and Gray color spaces . I will add CMYK in a future revision . Again , the system remembers which color space was used and presents the color components without rounding errors . ( Unfortunately , the SVG file format only supports sRGB . Thus after saving and loading a file we always get back to sRGB sigh ) . <p> Unfortunately , there are lots of things missing too . <p> The current color is not marked . <p> I want to pick colors from the drawing . I want to press the mouse button over the color well , drag the cursor over a desired color on the drawing , and then release the mouse button . <p> Support for gradients @ @ @ @ @ @ @ @ @ @ supported . ( This was my main point in my comment on Jeremys article ) . 
@@24629407 @4629407/ <p> **44;4283;TOOLONG cmykRaster , **25;4329;TOOLONG cmykProfile ) Creates a buffered image from a raster in the CMYK color space , converting the colors to RGB using the provided CMYK ICCProfile . <p> static **28;4356;TOOLONG <p> LONG ... ycckRaster , **25;4386;TOOLONG cmykProfile ) Creates a buffered image from a raster in the inverted YCCK color space , converting the colors to RGB using the provided CMYK ICCProfile . <p> static **28;4413;TOOLONG <p> **44;4443;TOOLONG ycckRaster , **25;4489;TOOLONG cmykProfile ) Creates a buffered image from a raster in the YCCK color space , converting the colors to RGB using the provided CMYK ICCProfile . <p> static **28;4516;TOOLONG <p> read ( java.io.InputStream in ) Reads a JPEG image from the provided InputStream and convert it into a color space which can be handled by Java2D ( that is RGB or Gray in J2SE 5 ) . <h> read <p> Reads a JPEG image from the provided InputStream and convert it into a color space which can be handled by Java2D ( that is RGB or Gray in J2SE 5 ) . The image data in the file can be in the YUV , @ @ @ @ @ @ @ @ @ @ <p> in - An InputStream in the JPEG File Interchange Format ( JFIF ) . <p> Returns : <p> a BufferedImage containing the decoded image converted into the RGB color space . <h> createRGBImageFromCMYK <p> Creates a buffered image from a raster in the CMYK color space , converting the colors to RGB using the provided CMYK ICCProfile . As seen from a comment made by ' phelps ' at LONG ... 41272 @qwx241272 <p> cmykRaster - A raster with ( at least ) 4 bands of samples . <p> cmykProfile - An ICCProfile for conversion from the CMYK color space to the RGB color space . If this parameter is null , a default profile is used . 
@@24629408 @4629408/ <h> Pixel-based Layout Managers <p> ComponentUI 's implemented by the Quaqua Look and Feel ( Quaqua ) have a translucent margin with a size of 3 pixels . The purpose of the margin , is to visually even out the cast shadows and focus rings of the components . <p> On the picture below , all components have been implemented by Quaqua.All components align to each other , without requiring additional work by the designer of the layout . <p> If you are working with a bixel-based layout manager , you have to subtract the 3 pixel margin from the distance between the components . All values shown in the picture below must have the value 3 or 6 subtracted . 3 must be subtracted from the component bounds to the frame bounds , 6 must be subtracted between two components . <p> To create distances smaller than 6 pixels between two components it is recommended to have these components overlap . <p> In case you ca n't do the overlapping , you can achieve a similar result , by manually overriding the margin for a single component . @ @ @ @ @ @ @ @ @ @ at the bottom of the component to 0 and let 's all other margins use 3 . <p> **30;4546;TOOLONG <p> " **29;4578;TOOLONG " , new Insets(3,3,0,3) <p> ) ; <p> Overlapping the components is the preferred way for achieving a small spacing between components . In case the margin is generally too wide , and you ca n't have your components overlap , you can change the default value for the visual margin , as shown in the code snippet below . 
@@24629409 @4629409/ <p> waveFormatTag - The format of the audio stream given in MMREG.H , for example 0x0001 for WAVEFORMATPCM . <p> scale - The numerator of the sample rate . <p> rate - The denominator of the sample rate . <p> numberOfChannels - The number of channels : 1 for mono , 2 for stereo . <p> sampleSizeInBits - The number of bits in a sample : 8 or 16 . <p> isCompressed - Whether the sound is compressed . <p> frameDuration - The frame duration , expressed in the media 's timescale , where the timescale is equal to the sample rate . For uncompressed formats , this field is always 1 . <p> frameSize - For uncompressed audio , the number of bytes in a sample for a single channel ( sampleSize divided by 8 ) . For compressed audio , the number of bytes in a frame . <p> Returns : <p> Returns the track index . <p> Throws : <p> **34;4609;TOOLONG - if the format is not 4 characters long , if the time scale is not between 1 and 232 , if the integer portion @ @ @ @ @ @ @ @ @ @ if numberOfChannels is not 1 or 2. <h> writePalette <p> If a track contains palette changes , then all key frames must be immediately preceeded by a palette change chunk which also is a key frame . If a key frame is not preceeded by a key frame palette change chunk , it will be downgraded to a delta frame . <p> Throws : <p> **34;4645;TOOLONG - if the track is not a video track . <h> writeSample <p> This method does not inspect the contents of the samples . The contents has to match the format and dimensions of the media in this track . <p> If a track contains palette changes , then all key frames must be immediately preceeded by a palette change chunk . If a key frame is not preceeded by a palette change chunk , it will be downgraded to a delta frame . 
@@24629410 @4629410/ <h> Mi MemoQube <p> This cube can be used to learn Mandarin Chinese words built of two characters . Mi or ? means ' rice ' in Chinese . The scheme to connect the characters corresponds with the structure of the Mi character . <p> There are four tones in Mandarin Chinese plus a fifth neutral tone . The same chinese character may be pronounced with different tones but with different meanings in each case . Thus , it is very important to know in advance the correct pronunciation tone . A very convenient means of knowing a character tone consists in coding the character colour . Here , the selected colour code is as follows : Tone 1 : Red , Tone 2 : Green , Tone 3 : Blue , Tone 4 : Black . <p> While the majour group of the Chinese vocabulary are words composed of two characters , combinations with one , three or four characters are less common . <p> When in the initial state the stickers of a face are numbered row by row from C1 to C9 , 8 words can @ @ @ @ @ @ @ @ @ @ , C4-C5 , C5-C6 , C5-C7 , C5-C8 , C5-C9 ) or 48 words per cube . Rotating the faces allows you to build many more words . A database was used to find the most common characters for the centers , corners and edges . <p> The ? face ( up ) <p> ? ? zu=chTng ( to make into , to convert into ) <p> ? ? laochTng ( a steady or experienced person ) <p> ? ? hTchTng ( to combine , to compose ) <p> ? ? wnchTng ( complete ) <p> ? chTng ( become , result ) <p> ? ? chTngzhang ( grow , increase ) <p> ? ? chTngji ( achievement ) <p> ? ? chTngjia ( founding a family ) <p> ? ? chTngguo ( result ) <p> The ? face ( right ) <p> ? ? Guangdong ( Guangdong ) <p> ? ? J8ndong ( Middle East ) <p> ? ? Yuandong ( Far East ) <p> ? ? fngdong ( landlord ) <p> ? dong ( east , orient ) <p> ? ? dongbei ( north-east ) <p> ? ? @ @ @ @ @ @ @ @ @ @ ) * <p> ? ? Dongjing ( Tokyo ) <p> ? ? Dongfang ( orient ) <p> * This word also means : <p> ? ? dongxi ( a thing , an object ) . <p> Note that these two words are not pronounced the same way . In the first case , the tone of ? is in the 1st tone ( xi ) coded in red color on the cube , whereas in the latter case the tone of ? is the 5th or neutral tone ( xi ) . 
@@24629412 @4629412/ <h> Zodiac Cube <p> The Zodiac Cube is divided into twelve areas of distinct colors . Each edge has a uniform color , while the corners are split into three and the centers into four colors . Each edge shows one of the twelve zodiac signs . In the initial state the signs are arranged in a way , that the cardinal signs Aries , Cancer , Libra and Capricorn are located around the face axis r-l , the fixed signs Taurus , Leo , Scorpio and Aquarius around the face axis u-d and the mutable signs Gemini , Virgo , Sagittarius and Pisces around the face axis f-b . <p> The layout of the Zodiac Cube was created in 2017 by Fabien Fellay and Walter Randelshofer . It is based on the Twelve Color Cube and enhanced with zodiac signs . The Twelve Color Cube was originally published by Douglas R. Hofstadter in the Scientific American issue of March 1981 . <h> Zodiac Signs <p> Sign <p> Element <p> Gender <p> Cardinal <p> Fixed <p> Mutable <p> ? Aries <p> Fire <p> Masculine <p> ? <p> ? Taurus @ @ @ @ @ @ @ @ @ @ Air <p> Masculine <p> ? <p> ? Cancer <p> Water <p> Feminine <p> ? <p> ? Leo <p> Fire <p> Masculine <p> ? <p> ? Virgo <p> Earth <p> Feminine <p> ? <p> ? Libra <p> Air <p> Masculine <p> ? <p> ? Scorpio <p> Water <p> Feminine <p> ? <p> ? Sagittarius <p> Fire <p> Masculine <p> ? <p> ? Capricorn <p> Earth <p> Feminine <p> ? <p> ? Aquarius <p> Air <p> Masculine <p> ? <p> ? Pisces <p> Water <p> Feminine <p> ? <h> The Four Elements <p> According to the ancient wisdom of alchemy , the four elements Fire , Water , Air and Earth form the basis of all life : <p> Fire , representing action and creativity , fuels the signs of Aries , Leo , and Sagittarius . <p> Air , corresponding to intellect , is the dominating force for Libra , Aquarius , and Gemini . <p> Earth , which stands for substance and practicality , is the hallmark of Capricorn , Taurus , and Virgo . <h> Feminine and Masculine Signs <p> The four elements can be grouped into two folders @ @ @ @ @ @ @ @ @ @ Fire and Air ) , which mirrors the two major human archetypes , feminine ( nurturing and practical ) and masculine ( active and communicative ) . <h> The Three Modalities <p> Each of the four elements can be expressed in three different styles . These varied modes of expression are called the three modalities . Astrology follows the four seasons , which correspond to the four elements , and each of these three-month-long seasons is comprised of a beginning , middle , and end . In astrology this means the groups of cardinal ( creation ) , fixed ( preservation ) and mutable ( adjustment ) signs , each being a group of four signs : <h> Cardinal Signs : Aries , Cancer , Libra , Capricorn <p> These signs start every season ? Aries kicks off spring , Cancer starts summer , Libra begins fall and Capricorn is the first winter sign . Thus , they are the leaders and idea people+ of the zodiac . These signs prize originality and like to be first in everything they do . They 're the trendsetters and trendspotters , the @ @ @ @ @ @ @ @ @ @ . Count on them to initiate a winning idea or plan . <p> Aries tends to express it 's cardinality through the world of firsthand experience and pioneering activity . <p> Cancer seems to be motivated by activities that satisfy their moods and emotional needs . <p> Libra tends to be motivated by the need for inspiring communication between both individuals and groups . <p> Capricorn tends to express itself through achieving material rewards and be motivated by results . <h> Fixed Signs : Taurus , Leo , Scorpio , Aquarius <p> These signs fall in the middle of every season . They 're the stabilizers ? the ones who set up a solid goal or foundation , then start building . Fixed signs can take the enthusiastic ideas that cardinal signs spark , and craft them into something real . They pick up the ball when the cardinal sign passes it , and run the distance to the goal . Fixed signs are the trustworthy types who like to-do+ lists and fancy titles . If a cardinal signs says , Let 's go on vacation ! + the fixed @ @ @ @ @ @ @ @ @ @ and hotel , and send everyone a list of what to pack . <p> Taurus seems to have a need to hold on to it 's resources and material possessions . <p> Leo tends towards having a very strong style of self-expression and fixed image of themselves . <p> Scorpio usually has very strong , fixed feelings about people and ideas . <p> Aquarius can be unusually fixed in their opinions about anyone or anything . <h> Mutable Signs : Gemini , Virgo , Sagittarius , Pisces <p> These signs end every season ? and have learned the hard lessons taught by spring , summer , fall and winter . They know that all good things come to an end , and their role is to prepare everyone for the changing of seasons . Mutable signs are the adapters of the zodiac , a little bit older and wiser . More flexible and comfortable with change than other signs , they can chameleon+ themselves to fit into a variety of situations . Mutables are also the editors of the zodiac ? the ones who complete the package with a winning @ @ @ @ @ @ @ @ @ @ sign , built by a fixed sign , then perfected with the critical eye of a mutable sign . <p> Gemini tends to display it 's versatility and adaptability through a constant change of mind and ideas . <p> Virgo may spend it 's mutable energy on finding the ' right ' occupation or service that allows the use of it 's many talents . <p> Sagittarius tends to seek adventures in life that will satisfy it 's philosophical or religious questionings . <p> Pisces seems to constantly change in trying to adapt to it 's own changing feelings and the moods of others . 
@@24629413 @4629413/ <h> Codigo Soft <h> Sam Juggler <p> Ray-traced demo of ' SAM the robot ' , mascot of the ' SAM CoupT ' computer , juggling some ball-bearings . SAM , devised by Mel Croucher and put in pen by Robin Evans appeared in the user manual and on most of the advertising literature for the machine , and later made an appearance as the main character in the game ' SAM Strikes Out ! ' . <p> The ' SAM CoupT ' is the first significantly advanced 8 bit computer based on the popular ' Sinclair ZX Spectrum ' 48K . This British home computer , released in late 1989 , has all main hardware and system expansions typical for 16 bit machines . Based around a Z80B CPU and clocked at 6 MHz , the CoupT came too late to hit markets ? in the times of ' Atari ST ' and ' Commodore Amiga ' it was mostly compared to these 16 bit machines . However it is a pure 8 bit computer only and still seems to be the most complex system compatible with the @ @ @ @ @ @ @ @ @ @ graphics modes with up to 16 colors ( 256 x 192 pixles in modes 1 , 2 and 4 and 512 x 192 pixles in mode 3 ) . All modes are paletted , with a 16-entry colour look-up table selecting from a palette of 128 colours . Palette entries consist of 2 bits for each of the red , green and blue components as well as an extra bit which slightly increases the intensity of all three components . The computer also includes a line triggered interrupt counter , allowing video effects to be synchronised to specific display positions with little effort . 
@@24629414 @4629414/ <h> Rubiks Cube in WebGL <p> by werner on June 25th , 2011 <p> WebGL is a new 3D graphics context for the &lt;canvas&gt; HTML element . It allows to create high-performance 3D rendering in a browser without the need of plug-ins . The WebGL graphics context is an OpenGL ES API for JavaScript . <p> I think , the WebGL API should be very familiar for everyone who has already programmed with OpenGL in C++ and GLSL . Creating a 3D rendering with WebGL typically involves the following steps : <p> Add a &lt;canvas&gt; element to an HTML page . <p> Access the element from JavaScript , and get the WebGL context . <p> Load a vertex shader and a fragment shader into the context . <p> Load geometry , colors and textures into the context . <p> Specify a camera matrix and transformation matrices . <p> Draw the geometry through the context . <p> I have ported one of my virtual Rubiks Cube applets from Java to WebGL . To ease my work , I used some code from the WebGL demo repository . Below is a screenshot. 
@@24629415 @4629415/ <h> Welcome <h> Get CubeTwister <p> CubeTwister is your companion to the Rubik 's Cube . It provides a database for your cube collection and your maneuver lexicon . You can define scripts using your own notation , and you can translate scripts from one notation into another . CubeTwister also features a sophisticated solver . <h> Pretty Patterns <p> Browse this huge collection of more than 4,300 Pretty Patterns by Walter Randelshofer . The collection includes patterns for the Pocket Cube , Rubik 's Cube , Rubik 's Revenge , Professor 's Cube , V-Cube 6 , V-Cube 7 and even the Pyraminx and Master Pyraminx . <h> NxNxN Cube Solvers <p> Check out the fast Super Cube Solver by AndrT Boulouard . This powerful on-line app solves cubes of any size from a scramble algorithm in SSE or WCA notation . In addition an included ' Orbit Solver ' allows to find algorithms within a chosen orbit . The cycles can be entered in form of permutations . The provided solutions are suboptimal and sometimes even optimal . <h> Digital Fun <p> Animations . These pages present @ @ @ @ @ @ @ @ @ @ from the late eighties and early nineties . See also images animated with the fantastic colour cycling technique . The majority of the animations have been created on Commodore Amiga and Atari ST computers . 
@@24629416 @4629416/ 41265 @qwx241265 <h> Textures <h> Extras <h> Braille Cube <p> This cube can display Braille characters in a 2 x 3 array of dots on a selected face . Left to the Braille character , the corresponding letter or numeral can be displayed . The array of 2 x 3 dots allows to build a total of 64 characters including the space character . <p> An enhanced version , called ' Computer Braille ' , with an array of 2 x 4 dots is supported as well . Along with the additional 2 dots , located at the bottom left corner , a total of 256 characters are possible . <p> The layout of the Braille Cube was created in 2008 by Walter Randelshofer . <h> Braille <p> Braille is named after its creator , Frenchman Louis Braille , who went blind following a childhood accident . At the age of 15 , Braille developed his code for the French alphabet in 1824 as an improvement on night writing . <p> Braille characters are small rectangular blocks called ' cells ' that contain tiny palpable bumps called ' raised @ @ @ @ @ @ @ @ @ @ distinguish one character from another . Since the various braille alphabets originated as transcription codes of printed writing systems , the mappings ( sets of character designations ) vary from language to language . <p> A or 1 <p> B or 2 <p> C or 3 <p> D or 4 <p> E or 5 <p> F or 6 <p> G or 7 <p> H or 8 <p> I or <p> ? <p> ? <p> ' <p> - <p> ? <p> ? <p> Braille is derived from the Latin alphabet , albeit indirectly . In Braille 's original system , the points were assigned according to the position of the letter within the alphabetic order of the French alphabet , with diacritic letters and ' W ' sorted at the end . <p> 1st decade : The first ten letters of the alphabet , ' A ' to ' J ' , use the upper four dot positions , 1 , 2 , 4 , 5 : ? ? ? ? ? ? ? ? ? ? . These stand for the numerals ' 1 ' to ' 0 ' in a system parallel to Hebrew gematria and Greek isopsephy . ( Though the dots are assigned in no obvious order , the first three letters and lowest numerals , ' A ' , ' B ' , ' C ' or ' 1 ' , ' 2 ' @ @ @ @ @ @ @ @ @ @ the vowels , ' A ' , ' E ' , ' I ' ? ? ? , have the fewest dots , whereas the even numerals ' 4 ' , ' 6 ' , ' 8 ' , ' 0 ' are corners , ? ? ? ? . ) <p> 2nd decade : The next ten letters , ' K ' to ' T ' , are identical to ' A ' to ' J ' , respectively , apart from the addition of a dot at position 3 : ? ? ? ? ? ? ? ? ? ? . <p> 3rd decade : The next ten letters are the same again , but with dots at both 3 and 6 . Here ' W ' was left out as not being part of the basic French alphabet . <p> 4th decade : The next ten , ending in ' W ' , are the same again , except that for this series position 6 is used without position 3 . <p> 5th decade : The ' A ' to ' J ' series lowered in dot @ @ @ @ @ @ @ @ @ @ ? ? ? ? . Note that punctuation varies from language to language . For example , French Braille uses ? for its question mark and swaps the quotation marks and parentheses ( to ? and ? ? ) ; it uses the period ( ? ) for the decimal point , as in print , and the decimal point ( ? ) to mark capitalization . <p> Bottom row : ' A ' and ' C ' , which only use the top row , were lowered two spaces for the apostrophe and hyphen : ? ? . <p> Zero characters : The remaining 12 possible characters , including the space , serve for the most part non-letter functions : ? ? ? ? ? ? ? ? ? ? ? . Braille has several formatting marks , these are for example in English Braille the ' Number Sign ' ( ? ) , the ' Letter Sign ' ( ? ) , the ' Capitalization Sign ' ( ? ) , the ' Emphasis Sign ' ( ? ) or the ' Symbol Prefix ' ( ? ) . 
@@24629417 @4629417/ 41265 @qwx241265 <h> Textures <h> Extras <h> Clock &amp; Calendar Cube <p> This cube can display the time and date of the day on a selected face by rotating and twisting some parts of the cube . In addition , it can also be used to display alarm clock or temperature indicator settings . The displayed time of the day and temperature range from ' 00:00 ' to ' 23:30 ' in : 30 steps and from ' 00 C ' to ' 29 C ' in 1 C steps , respectively . <p> The layout of the Clock &amp; Calendar Cube was created in 2008 by AndrT Boulouard and Walter Randelshofer . <h> Time or temperature <p> Time of the day range from ' 00:00 ' up to ' 23:30 ' in : 30 steps , or Temperature range from ' 00 C ' up to ' 29 C ' in 1 C steps on the top row . <h> Weekdays <p> Weekdays are displayed on the middle row as abbreviated 3-letter English weekdays : ' MON ' , ' TUE ' , ' WED ' , ' @ @ @ @ @ @ @ @ @ @ and ' SUN ' . <h> Time or day of the month &amp; month <p> Alarm clock time range from ' 00:00 ' up to ' 23:30 ' in : 30 steps , or Day of the month and month range from ' 01 , JAN ' to ' 31 , DEC ' on the bottom row . <p> Hours displayed on the top and bottom row can also be used as a reminder for two successive meetings , in a way similar to a desk diary utilization . 
@@24629418 @4629418/ <h> Hot Links <h> Cool sites about Rubik 's Cube <h> Solution Pages <p> Kantenkreuz.de by Jnrgen Fischbach is a well designed solution page for the Rubik 's Cube . <p> El ocho tumbado by Javier Santos provides a solution guide to the Rubik 's Cube in Spanish . <p> Rubik 's Zauberwnrfel by Markus Pirzer . The first complete interactive solution for the 5x5x5 Professor Cube . <h> Speed Solving <p> Speedcubing.com is a first class news feed for cube related topics . The site also holds a list of ( un ) official cube records , of which some are really crazy . <p> Dan 's Cube Station by Dan Harris is dedicated to speed cubing . The site hosts the famous weekly Fewest Move Challenge as well as a gallery of speed cubers and lots more . <p> Gilles and his Cubes by Gilles Roux provides very creative and funny videos showing all the other things one can do with a cube besides scrambling and solving it . <p> Planet Puzzle by Katsuyuki Konishi is a beautiful and very comprehensive site about Rubik 's Cube . @ @ @ @ @ @ @ @ @ @ solvers for Rubik 's Cube . The solver used in my own CubeTwister program is derived from an earlier version of his program . <h> Twisty Puzzles <p> Jaap 's Puzzle Page features an awesome overview of cube like puzzles . Lots of them can be played online using a JavaScript enabled browser . The site also contains an excellent documentation about the mathematical aspects of the cube . <h> Radio Stations <h> Computer Graphics <p> The Amiga Graphics Archive by Daniel Knrsten is a beautiful site dedicated to pixle graphics created with the Commodore Amiga . The fine collection of computer graphics can also be viewed in modes which simulate the display of old CRT monitors . 
@@24629420 @4629420/ <p> **37;4681;TOOLONG name , java.lang.Object value ) Initializes a default value for a named attribute The difference between this method and setDefaultAttribute is that if the attribute is already set then it will not be changed . The purpose is to allow more than one source requiring the attribute to initialize it , but only the first initialization will be used . <h> initDefaultAttribute <p> Initializes a default value for a named attribute The difference between this method and setDefaultAttribute is that if the attribute is already set then it will not be changed . The purpose is to allow more than one source requiring the attribute to initialize it , but only the first initialization will be used . 
@@24629421 @4629421/ <h> Extras <h> Links <h> Super Cube ' Bandelow ' <p> A Super Cube is a design variation of the Rubik 's Cube which visualizes the orientation of side parts . Because of this , a Super Cube has 2048 times more positions than a regular cube ( 46/2 = 2048 ) . <p> You can create a Super Cube easily by yourself . All you need is a felt marker . The design shown on the left uses felt marker strokes to show the orientation of the side parts . Each stroke connects the sticker of a side part with the sticker of one adjacent edge part . 
@@24629423 @4629423/ 41265 @qwx241265 <h> Textures <h> Extras <h> Circuit Cube <p> The design of the Circuit Cube reminds of a printed circuit board . Each sticker consists of two non-intersecting signal traces . The centers feature two labled vias ( through-hole paths ) to connect some hidden electronic components inside the cube . There is also a power supply that provides electricity . <p> In the initial state the cube displays a single conductive pathway connecting all components in alphabetical order from ' A ' to ' L ' . The power supply is placed next to via ' A ' on the same face . <p> No matter how scrambled this cube is , one or more closed tracks always exist . The amount of circuits , their forms , lengths , number and order of connected components can vary greatly . <p> WARNING : Ground yourself to avoid electrostatic discharge before you touch this cube ! <p> Tip : A non trivial game for kids would be to give them a scrambled cube and ask them to identify all groups of letters sharing the same circuit . 
@@24629424 @4629424/ <h> **26;4720;TOOLONG Class RIFFParser <p> RIFF File Format A RIFF file consists of a RIFF header followed by zero or more lists and chunks . <p> The RIFF header has the following form : <p> ' RIFF ' fileSize fileType ( data ) <p> where ' RIFF ' is the literal FOURCC code ' RIFF ' , fileSize is a 4-byte value giving the size of the data in the file , and fileType is a FOURCC that identifies the specific file type . The value of fileSize includes the size of the fileType FOURCC plus the size of the data that follows , but does not include the size of the ' RIFF ' FOURCC or the size of fileSize . The file data consists of chunks and lists , in any order . <p> FOURCCs A FOURCC ( four-character code ) is a 32-bit unsigned integer created by concatenating four ASCII characters . For example , the FOURCC ' abcd ' is represented on a Little-Endian system as 0x64636261 . FOURCCs can contain space characters , so ' abc ' is a valid FOURCC . The RIFF @ @ @ @ @ @ @ @ @ @ data chunks , index entries , and other information . <p> A chunk has the following form : <p> ckID ckSize ckData <p> where ckID is a FOURCC that identifies the data contained in the chunk , ckData is a 4-byte value giving the size of the data in ckData , and ckData is zero or more bytes of data . The data is always padded to nearest WORD boundary . ckSize gives the size of the valid data in the chunk ; it does not include the padding , the size of ckID , or the size of ckSize . <p> A list has the following form : <p> ' LIST ' listSize listType listData <p> where ' LIST ' is the literal FOURCC code ' LIST ' , listSize is a 4-byte value giving the size of the list , listType is a FOURCC code , and listData consists of chunks or lists , in any order . The value of listSize includes the size of listType plus the size of listData ; it does not include the ' LIST ' FOURCC or the size of listSize . @ @ @ @ @ @ @ @ @ @ <p> To traverse the file structure you must first set up a RIFFVisitor object that does something useful at each call to the visit method . Then create an instance of a RIFFParser and invoke the #interpret method . <p> Since RIFF files are not completely self describing ( there is no information that helps differentiate between data chunks , property chunks and collection chunks ) a reader must set up the interpreter with some contextual information before starting the interpreter . <p> Once at least one chunk has been declared , the interpreter will only call the visitor for occurences of the declared group chunks and data chunks . The property chunks and the collection chunks can be obtained from the current group chunk by calling #getProperty or #getCollection . Note : All information the visitor can obtain during interpretation is only valid during the actual #visit ... call . Do n't  try to get information about properties or collections for chunks that the visitor is not visiting right now . 
@@24629428 @4629428/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> PDF document by AndrT Boulouard with algorithms for displaying the time of the day on the cube on one face . <h> Analog Clock Cube <p> The time of the day can be displayed on a selected face by rotating and twisting some parts of the cube . Time is displayed in hours , minutes and seconds . In the initial state , the cube shows 12:00 , where hour and minute hands are all lined up with number ' 12 ' . In addition , seconds can be indicated by red dial tick marks . <p> The cube features a set of white hour and minute hands in the Analog Clock mode and an additional set of red hands in Chronometer and Compass modes . Red dial tick marks show seconds of time on the analog clock dial whereas white dial tick marks can be used to show elapsed minutes of time on the chronometer dial . <p> The layout of the Analog Clock Cube was created in 2009 by AndrT Boulouard and Walter Randelshofer . <h> Analog Clock @ @ @ @ @ @ @ @ @ @ minutes steps ( and in 5-second steps when the red dial tick marks are used ) <h> Chronometer Mode <p> Range from 0:00:00 up to 00:12:00 in 5 second steps <p> The red minute hand is used to display seconds of time whereas white dial tick marks can be used to show elapsed minutes of time . <h> Compass Mode <p> Range from 0 up to 360 in 30 degree steps <p> The red second hand and the opposite white minute hand are used to display angles relative to the Earth 's magnetic poles . The red hand shows the direction of the magnetic North . In Compass mode , digits ' 12 ' , ' 3 ' , ' 6 ' and ' 9 ' stand for ' North ' , ' East ' , ' South ' and ' West ' , respectively . 
@@24629430 @4629430/ <h> DiamondFigure <h> drawFill <p> This method is called by method draw() to draw the fill area of the figure . AbstractAttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> drawStroke <p> This method is called by method draw() to draw the text of the figure . AbstractAttributedFigure configures the Graphics2D object with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . <h> findCompatibleConnector <p> Gets a compatible connector . If the provided connector is part of this figure , return the connector . If the provided connector is part of another figure , return a connector with the same semantics for this figure . Returns null , if no compatible connector is available . 
@@24629431 @4629431/ <p> This class implements an image output stream in which the data is written into a byte array . The buffer automatically grows as data is written to it . The data can be retrieved using toByteArray() , toImageOutputStream() and toOutputStream() . <p> Closing a **26;4748;TOOLONG has no effect . The methods in this class can be called after the stream has been closed without generating an IOException. <h> buf <p> protected byte buf <p> An array of bytes that was provided by the creator of the stream . Elements buf0 through bufcount-1 are the only bytes that can ever be read from the stream ; element bufstreamPos is the next byte to be read . <h> count <p> protected int count <p> The index one greater than the last valid character in the input stream buffer . This value should always be nonnegative and not larger than the length of buf . It is one greater than the position of the last byte within buf that can ever be read from the input stream buffer . <h> **26;4776;TOOLONG <h> **26;4804;TOOLONG <h> **26;4832;TOOLONG <p> public **45;4860;TOOLONG byteOrder ) <p> @ @ @ @ @ @ @ @ @ @ <p> Reads the next byte of data from this input stream . The value byte is returned as an int in the range 0 to 255 . If no byte is available because the end of the stream has been reached , the value -1 is returned . <p> This read method can not block . <p> Specified by : <p> read in interface **37;4907;TOOLONG <p> Specified by : <p> read in class **41;4946;TOOLONG <p> Returns : <p> the next byte of data , or -1 if the end of the stream has been reached . <p> Throws : <p> java.io.IOException <h> read <p> Reads up to len bytes of data into an array of bytes from this input stream . If streamPos equals count , then -1 is returned to indicate end of file . Otherwise , the number k of bytes read is equal to the smaller of len and count-streamPos . If k is positive , then bytes bufstreamPos through bufstreamPos+k-1 are copied into boff through boff+k-1 in the manner performed by System.arraycopy . The value k is added into streamPos and k is returned . <p> @ @ @ @ @ @ @ @ @ @ : <p> read in interface **37;4989;TOOLONG <p> Specified by : <p> read in class **41;5028;TOOLONG 41272 @qwx241272 <p> b - the buffer into which the data is read . <p> off - the start offset in the destination array b <p> len - the maximum number of bytes read . <p> Returns : <p> the total number of bytes read into the buffer , or -1 if there is no more data because the end of the stream has been reached . <p> Throws : <p> **30;5071;TOOLONG - If b is null . <p> **35;5103;TOOLONG - If off is negative , len is negative , or len is greater than b.length - off <p> java.io.IOException <h> skip <p> public long skip ( long n ) <p> Skips n bytes of input from this input stream . Fewer bytes might be skipped if the end of the input stream is reached . The actual number k of bytes to be skipped is equal to the smaller of n and count-streamPos . The value k is added into streamPos and k is returned . 41272 @qwx241272 <p> n - the number of @ @ @ @ @ @ @ @ @ @ actual number of bytes skipped . <h> available <p> public int available() <p> Returns the number of remaining bytes that can be read ( or skipped over ) from this input stream . <p> The value returned is count - streamPos , which is the number of bytes remaining to be read from the input buffer . <p> Returns : <p> the number of remaining bytes that can be read ( or skipped over ) from this input stream without blocking . <h> close <p> public void close() <p> Closing a ByteArrayInputStream has no effect . The methods in this class can be called after the stream has been closed without generating an IOException. <h> toImageOutputStream <p> Writes the contents of the byte array into the specified image output stream . 41272 @qwx241272 <p> out - <p> Throws : <p> java.io.IOException <h> toByteArray <p> public byte toByteArray() <p> Creates a newly allocated byte array . Its size is the current size of this output stream and the valid contents of the buffer have been copied into it . <p> Returns : <p> the current contents of this output stream , @ @ @ @ @ @ @ @ @ @ **28;5140;TOOLONG <h> getBuffer <p> public byte getBuffer() <p> Returns the internally used byte buffer . <h> length <p> public long length() <p> Specified by : <p> length in interface **37;5170;TOOLONG <p> Overrides : <p> length in class **41;5209;TOOLONG <h> clear <p> public void clear() <p> Resets the count field of this byte array output stream to zero , so that all currently accumulated output in the output stream is discarded . The output stream can be used again , reusing the already allocated buffer space . 
@@24629432 @4629432/ <p> ffmpeg is written using C90 and some C99 additions and some inlined assembly code . Unfortunately " from my first glance at the code " not all of the assembly code seems to be also provided as C code , but I am not sure , how much of the H.264 decoder code is affected by this ( if at all ) . <p> The Fraunhofer implementation seems to be pure C code . <p> That 's not too bad . Yet , its still too much work for a weekend project . : / <p> Have you started working on this at all ? I am looking at exactly the same problem at the moment and am thinking about whether or not it would be worth wile doing . Do you know if there are any significant differences between the Fraunhofer reference implementation and x264 in ffmpeg ? <p> I have n't taken action , I was just lamenting about the fact that no one else did . = <p> I did n't  do much more than having a first glance at both implementations . For Java , I @ @ @ @ @ @ @ @ @ @ I want to integrate with JMF and FMJ , I cant use the original design of neither library anyway . <p> Hi I too could do with a pure java H.264 decoder There seems to be plenty of discussion about whether its possible to write one , given the performance requirements and more importantly the almost mandatory close integration with the video hardware 
@@24629433 @4629433/ 41265 @qwx241265 <h> Textures <h> Extras <h> RGB Tone Cube <p> The stickers on the cube show the RGB color model as mapped onto a cube . Red colors are displayed on the first horizontal x-axis with coded values increasing from left to right . Blue colors are displayed on the second horizontal y-axis with coded values increasing from back to front . Green colors are displayed on the vertical z-axis with coded values increasing from bottom to top . The black color origin is located on the backside of the cube , at the intersection of faces B ( Back ) , D ( Down ) and L ( Left ) . <p> The RGB color model is an additive color model in which red , green , and blue light are added together in various ways to reproduce a broad array of colors . The name of the model comes from the initials of the three additive primary colors eg. red , green , and blue . The RGB color model is the most common way to encode colors in computing area , and several different binary @ @ @ @ @ @ @ @ @ @ ( r , g , b ) represents the three-dimensional coordinate of any color point on a given sticker . These values can be represented either in decimal or hexadecimal notation . <p> The layout of the RGB Tone Cube was created in 2008 by AndrT Boulouard and Walter Randelshofer. 
@@24629434 @4629434/ 41265 @qwx241265 <h> Textures <h> Extras <h> Nine Men 's Morris Cube <p> ' Nine Men 's Morris ' is an abstract strategy board game for two players . The origin of the game was found in the ancient Egypt . <p> The game is also known as ' Nine Man Morris ' , ' Mill ' , ' Mills ' , ' Merels ' , ' Merelles ' , and ' Merrills ' in English . <p> The layout of the Nine Men 's Morris Cube was created in 2010 by Walter Randelshofer . <h> Rules of play <p> Each player has nine pieces , or ' men ' , which move among the board 's twenty-four intersections . The object of the game is to leave the opposing player with fewer than three pieces or , as in checkers , no legal moves . <p> The game is divided into two phases : the placing and the moving of the pieces . <h> Placing the pieces <p> The game begins with an empty board . Players take turns placing their pieces on empty intersections . If a @ @ @ @ @ @ @ @ @ @ along one of the board 's lines , he has a ' mill ' and may remove one of his opponent 's pieces from the board ; removed pieces may not be placed again . Players must remove any other pieces first before removing a piece from a formed mill . Once all eighteen pieces have been placed , players take turns moving . <h> Moving the pieces <p> To move , a player slides one of his pieces along a board line to an empty adjacent intersection . If he can not do so , he has lost the game . <p> As in the placement stage , a player who aligns three of his pieces on a board line has a mill and may remove one of his opponent 's pieces , avoiding the removal of pieces in mills if at all possible . <p> Any player reduced to two pieces is unable to remove any more opposing pieces and thus loses the game . <h> Flying <p> In one common variation , once a player is reduced to three pieces , his pieces may ' fly ' @ @ @ @ @ @ @ @ @ @ empty intersections , not only adjacent ones . Some sources of the rules say this is the way the game is played , some treat it as a variation , and some do n't mention it at all . A ' 19th Century Games Manual ' calls this the truly rustic mode of playing the game+. 
@@24629436 @4629436/ <h> Notation <h> Superset ENG 4x4 Pyraminx <p> Superset ENG 4x4 is a notation for Pyramids with 4 layers . The notation is based on the English language . It supports 120 twists of the layers of the pyramid . A whole pyramid can be rotated along its corner axes . Permutation and orientation changes of individual cube parts can be specified using permutation cycles . <h> Corner twists : R , R ' <p> Move <p> Right <p> Up <p> Left <p> Back <p> ? ? ? ? +120 <p> R <p> U <p> L <p> B <p> ? ? ? ? -120 <p> R ' <p> U ' <p> L ' <p> B ' <p> Clockwise 120 twists of the four corners ( tips ) of the pyramid are described by the capital letters : R , U , L and B , ( right , up , left , back ) . For example , R rotates the right corner in clockwise direction as seen from the right corner . <p> Counterclockwise twists and rotations are described by appending the inversion operator ' to a move @ @ @ @ @ @ @ @ @ @ ... <p> In environments , where the ' character can not be used , the character - can be used as an alternative inversion operator . <p> 240 twists and rotations are described by appending the number 2 to a move : R2 , U2 , L2 , ... <h> Tier twists : TR , TR ' , ... T3R <p> Move <p> Right <p> Up <p> Left <p> Back <p> ? ? ? ? +120 <p> TR <p> TU <p> TL <p> TB <p> ? ? ? ? -120 <p> TR ' <p> TU ' <p> TL ' <p> TB ' <p> ? ? ? ? +120 <p> T3R <p> T3U <p> T3L <p> T3B <p> ? ? ? ? -120 <p> T3R ' <p> T3U ' <p> T3L ' <p> T3B ' <p> Twists which go multiple layers deep ( tier twists ) are described by prepending the letter T to a corner twist : TR , TU ' . <p> The depth of the tier can be specified by inserting a number after the letter T. For example , T3R twists three layers deep in clockwise direction @ @ @ @ @ @ @ @ @ @ dept is not explicitly specified , the value 2 is assumed : TL , TB ' . <p> To keep scripts short , T1R is never used , because it is equivalent to R. T2R is never used , because it is equivalent to TR . <h> Numbered layer twists : NR , NR ' , ... N3R <p> Move <p> Right <p> Up <p> Left <p> Back <p> ? ? ? ? +120 <p> NR <p> NU <p> NL <p> NB <p> ? ? ? ? +120 <p> N3R <p> N3U <p> N3L <p> N3B <p> Twists of an individual layer of the pyramid ( twist of the n-th layer ) are described by prepending the letter N to a corner twist . The number of the layer can be specified by inserting the number of the layer after the letter N , for example N3R , N3U ' . <p> Layers are numbered starting from the corner described by the corner twist towards the opposite layer . The layer at the corner of the pyramid has number 1 , the next layer has number 2 , and so @ @ @ @ @ @ @ @ @ @ , the value 2 is assumed , for example NL , NU ' . <p> To keep scripts short , N1R is never used , because it is equivalent to R. N2R is never used , because it is equivalent to NR . <h> Wide-layer twists : WR , WR ' <p> Move <p> Right <p> Up <p> Left <p> Back <p> ? ? ? ? +120 <p> WR <p> WU <p> WL <p> WB <p> Twists of all layers except the outer layers ( wide-layer twists ) can be described by prepending the letter W to a corner twist : WR , WU ' . <h> Pyramid rotations : CR , CR ' <p> Move <p> Right <p> Up <p> Left <p> Back <p> ? ? ? ? +120 <p> CR <p> CU <p> CL <p> CB <p> ? ? ? ? -120 <p> CR ' <p> CU ' <p> CL ' <p> CB ' <p> Rotations of the whole pyramid ( pyramid rotations ) are described by prepending the letter C to a corner twist . For example , CR rotates the whole pyramid in clockwise direction as @ @ @ @ @ @ @ @ @ @ of moves can be grouped using brackets : ( TR TU TL ) . <h> Repetition <p> Moves and groups can be repeated multiple times by appending the number of repetitions to the closing bracket : ( TR TU TL ) 3. 
@@24629438 @4629438/ <h> findCompatibleConnector <p> Gets a compatible connector . If the provided connector is part of this figure , return the connector . If the provided connector is part of another figure , return a connector with the same semantics for this figure . Return null , if no compatible connector is available . <h> drawFill <p> This method is called by method draw() to draw the fill area of the figure . AbstractAttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> drawStroke <p> This method is called by method draw() to draw the text of the figure . AbstractAttributedFigure configures the Graphics2D object with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . 
@@24629439 @4629439/ <p> This class provides a way to fill a shape with a circular radial color gradient pattern . The user may specify 2 or more gradient colors , and this paint will provide an interpolation between each color . <p> The user must provide an array of floats specifying how to distribute the colors along the gradient . These values should range from 0.0 to 1.0 and act like keyframes along the gradient ( they mark where the gradient should be exactly a particular color ) . <p> This paint will map the first color of the gradient to a focus point within the circle , and the last color to the perimeter of the circle , interpolating smoothly for any inbetween colors specified by the user . Any line drawn from the focus point to the circumference will span the all the gradient colors . By default the focus is set to be the center of the circle . <p> Specifying a focus point outside of the circle 's radius will result in the focus being set to the intersection point of the focus-center line and the perimenter @ @ @ @ @ @ @ @ @ @ the user to control the painting behavior outside of the bounds of the circle 's radius . See LinearGradientPaint for more details . <p> In the event that the user does not set the first keyframe value equal to 0 and the last keyframe value equal to 1 , keyframes will be created at these positions and the first and last colors will be replicated there . So , if a user specifies the following arrays to construct a gradient : Color.blue , Color.red , .3 , .7 this will be converted to a gradient with the following keyframes : Color.blue , Color.blue , Color.red , Color.red , 0 , .3 , .7 , 1 <p> This image demonstrates a radial gradient with NOCYCLE and default focus . <p> This image demonstrates a radial gradient with NOCYCLE and non-centered focus . <p> This image demonstrates a radial gradient with REFLECT and non-centered focus . <p> **39;5252;TOOLONG cm , java.awt.Rectangle deviceBounds , **25;5293;TOOLONG userBounds , **29;5320;TOOLONG transform , java.awt.RenderingHints hints ) Creates and returns a PaintContext used to generate the color pattern , for use by the internal rendering engine . @ @ @ @ @ @ @ @ @ @ point of the radial gradient . 
@@24629440 @4629440/ <h> Lesser General Public is not allowed . <p> This version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License , supplemented by the additional permissions listed below . <h> 0 . Additional Definitions . <p> As used herein , " this License " refers to version 3 of the GNU Lesser General Public License , and the " GNU GPL " refers to version 3 of the GNU General Public License . " The Library " refers to a covered work governed by this License , other than an Application or a Combined Work as defined below . <p> An " Application " is any work that makes use of an interface provided by the Library , but which is not otherwise based on the Library . Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by the Library . <p> A " @ @ @ @ @ @ @ @ @ @ linking an Application with the Library . The particular version of the Library with which the Combined Work was made is also called the " Linked Version " . <p> The " Minimal Corresponding Source " for a Combined Work means the Corresponding Source for the Combined Work , excluding any source code for portions of the Combined Work that , considered in isolation , are based on the Application , and not on the Linked Version . <p> The " Corresponding Application Code " for a Combined Work means the object code and/or source code for the Application , including any data and utility programs needed for reproducing the Combined Work from the Application , but excluding the System Libraries of the Combined Work . <h> 1 . Exception to Section 3 of the GNU GPL . <p> You may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL. <h> 2 . Conveying Modified Versions . <p> If you modify a copy of the Library , and , in your modifications , a facility refers to @ @ @ @ @ @ @ @ @ @ that uses the facility ( other than as an argument passed when the facility is invoked ) , then you may convey a copy of the modified version : <p> a ) under this License , provided that you make a good faith effort to ensure that , in the event an Application does not supply the function or data , the facility still operates , and performs whatever part of its purpose remains meaningful , or <p> b ) under the GNU GPL , with none of the additional permissions of this License applicable to that copy . <h> 3 . Object Code Incorporating Material from Library Header Files . <p> The object code form of an Application may incorporate material from a header file that is part of the Library . You may convey such object code under terms of your choice , provided that , if the incorporated material is not limited to numerical parameters , data structure layouts and accessors , or small macros , inline functions and templates ( ten or fewer lines in length ) , you do both of the following : <p> @ @ @ @ @ @ @ @ @ @ object code that the Library is used in it and that the Library and its use are covered by this License . <p> b ) Accompany the object code with a copy of the GNU GPL and this license document . <h> 4 . Combined Works . <p> You may convey a Combined Work under terms of your choice that , taken together , effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications , if you also do each of the following : <p> a ) Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library and its use are covered by this License . <p> b ) Accompany the Combined Work with a copy of the GNU GPL and this license document . <p> c ) For a Combined Work that displays copyright notices during execution , include the copyright notice for the Library among these notices , as well as a reference directing the user to the copies of the GNU GPL and @ @ @ @ @ @ @ @ @ @ the following : <p> 0 ) Convey the Minimal Corresponding Source under the terms of this License , and the Corresponding Application Code in a form suitable for , and under terms that permit , the user to recombine or relink the Application with a modified version of the Linked Version to produce a modified Combined Work , in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source . <p> 1 ) Use a suitable shared library mechanism for linking with the Library . A suitable mechanism is one that ( a ) uses at run time a copy of the Library already present on the user 's computer system , and ( b ) will operate properly with a modified version of the Library that is interface-compatible with the Linked Version . <p> e ) Provide Installation Information , but only if you would otherwise be required to provide such information under section 6 of the GNU GPL , and only to the extent that such information is necessary to install and execute a modified version of the Combined Work produced by recombining or @ @ @ @ @ @ @ @ @ @ Version . ( If you use option 4d0 , the Installation Information must accompany the Minimal Corresponding Source and Corresponding Application Code . If you use option 4d1 , you must provide the Installation Information in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source. ) <h> 5 . Combined Libraries . <p> You may place library facilities that are a work based on the Library side by side in a single library together with other library facilities that are not Applications and are not covered by this License , and convey such a combined library under terms of your choice , if you do both of the same work . <h> 6 . Revised Versions @ @ @ @ @ @ @ @ @ @ Free Software Foundation may publish revised and/or and conditions either of that published version or of any later version published by the Free Software Foundation . If the Library as you received it does not specify a version number of the GNU Lesser General Public License , you may choose any version of the GNU Lesser General Public License ever published by the Free Software Foundation . <p> If the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General Public License shall apply , that proxy 's public statement of acceptance of any @ @ @ @ @ @ @ @ @ @ for the Library . 
@@24629441 @4629441/ <h> DefaultDrawing <h> basicAdd <p> Adds a child to the figure at the specified index without firing events . <p> This method can be used to reinsert a child figure which has been temporarily removed from this CompositeFigure ( for example to reorder the sequence of the children ) and to efficiently build a drawing from an InputFormat. <h> findFigureInside <p> In case of a CompositeFigure , this method descends into its children and into its children 's children until the innermost figure is found . <p> This functionality is implemented using the Chain of Responsibility design pattern . A figure which is not composed of other figures returns itself if the point is contained by the figure . Composed figures pass the method call down to their children . <h> drawFill <p> This method is called by method draw() to draw the fill area of the figure . AttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> drawStroke <p> This method is called by method draw() to draw the @ @ @ @ @ @ @ @ @ @ with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . 
@@24629442 @4629442/ <p> A tool defines a mode of the drawing view . All input events targeted to the drawing view are forwarded to its current tool . <p> Tools inform their editor when they are done with an interaction by calling the editor 's toolDone() method . The Tools are created once and reused . They are **25;5351;TOOLONG with activate()/deactivate() . <p> Design Patterns <p> State Tool plays the role of the State . In encapsulates all state specific behavior . DrawingView plays the role of the StateContext . A tool can be in the following states : LONG ... **34;5378;TOOLONG where each square bracket indicates a state nesting level and arrows possible state transitions . Unusable tools are always inactive as well and disabled tools are always unusable as well . State changes are propagated to registered ToolListeners. <h> activate <p> void activate() <p> Activates the tool for the given view . This method is called whenever the user switches to this tool . Use this method to reinitialize a tool . Note , a valid view must be present in order for the tool to accept activation <h> @ @ @ @ @ @ @ @ @ @ method is called whenever the user switches to another tool . Use this method to do some clean-up when the tool is switched . Subclassers should always call super.deactivate. <h> mouseDown <p> void **35;5414;TOOLONG e , int x , int y ) <p> Handles mouse down events in the drawing view . <h> mouseDrag <p> void **35;5451;TOOLONG e , int x , int y ) <p> Handles mouse drag events in the drawing view . <h> mouseUp <p> void **33;5488;TOOLONG e , int x , int y ) <p> Handles mouse up in the drawing view . <h> mouseMove <p> void **35;5523;TOOLONG evt , int x , int y ) <p> Handles mouse moves ( if the mouse button is up ) . <h> keyDown <p> void **31;5560;TOOLONG evt , int key ) <p> Handles key down events in the drawing view . <h> isEnabled <p> boolean isEnabled() <p> A tool must be enabled in order to use it and to activate/deactivate it . Typically , the program enables or disables a tool . 
@@24629443 @4629443/ <h> AnyWikiDraw for MediaWiki <h> Usage <p> To include a drawing in a MediaWiki page , write the following tag in the page : <p> **31;5593;TOOLONG <p> The tag needs to be put into double curly braces . <p> The name of the tag is #drawing : <p> The parameter drawing.svg specifies the name of the drawing file . <p> The drawing file can have one of the following extensions . svg , . png , . jpg . <p> If you specify an drawing file that does not yet exist in your Wiki , the drawing is created the first time you save a drawing . <p> The parameter width specifies the width of the drawing . <p> The parameter height specifies the height of the drawing . <h> Security considerations <p> This is an experimental extension . Data loss may occur.Install it only on a Wiki system that does not contain critical data . <p> You need to grant access to session cookies to JavaScript and Java.You may not want to do this if your wiki embeds JavaScript code from untrusted sources . F or example if @ @ @ @ @ @ @ @ @ @ system . <p> You need to allow file upload to your users.You may not want to do this if your wiki allows user account creation by people not known to you . <h> Installation instructions <p> Enable Cookie access by JavaScript and Java Applets in the LocalSettings.php script : <p> $wgCookieHttpOnly = false ; <p> Enable file uploading in LocalSettings.php script : <p> $wgEnableUploads = true ; <p> If you want to use AnyWikiDraw as SVG editor , make sure that you have properly installed and enabled SVG support on your MediaWiki server . For example , if you have installed ImageMagick on your server , you can activate SVG support using the following lines in the LocalSettings.php script : $wgUseImageMagick = true ; LONG ... $wgSVGConverterPath= ' /opt/local/bin ' ; $wgFileExtensions = ' svg ' ; <p> Place the AnyWikiDraw folder into the extensions folder of your MediaWiki server . Please note , that different versions of this extension exist for different versions of MediaWiki . <p> To activate this extension add the following lines to your LocalSettings.php script : LONG ... 
@@24629444 @4629444/ <h> Package net.n3.nanoxml Description <p> NanoXML is included here , to provide a fast and easy to XML parser which can be used by security restricted Java Applets . <p> With this patched version , NanoXML has been made to be compilable with J2SE5 and to take advantage of the Java2 Collections API . <p> NanoXML has been changed to not open a network connection to retrieve the DTD of a document . This reduces the time needed to read an XML document and it allows to open XML documents when a computer is offline , or when a Java applet runs in a restricted environment that does n't allow connections to the computer hosting the DTD. 
@@24629445 @4629445/ <h> clone <h> updateStartLocation <p> public void LONG ... p ) <p> This is called , when the start location of the connection has been moved by the user . The user has this probably done , to adjust the layout . The connector may use this as a hint to improve the results for the next call to findEnd. <h> updateEndLocation <p> public void LONG ... p ) <p> This is called , when the end location of the connection has been moved by the user . The user has this probably done , to adjust the layout . The connector may use this as a hint to improve the results for the next call to findStart. <h> getAnchor <p> Gets the anchor of the connector . This is a point at the center or at the bounds of the figure , where the start or the end point will most likely be attached . The purpose of this method is to give the user a hint , where the connector will most likely be attached to the owner of the connector . <h> getBounds <p> Gets the @ @ @ @ @ @ @ @ @ @ of the Figure which owns the Connector . The bounds can differ from the Figure bounds , if the Connector connects to a specific region of the Figure . 
@@24629447 @4629447/ <h> org.jhotdraw.util Class StorageFormatManager <p> java.lang.Object **38;5626;TOOLONG <p> public class StorageFormatManager <p> extends java.lang.Object <p> The StorageFormatManager is a contains StorageFormats . It is not a Singleton because it could be necessary to deal with different format managers , e.g. one for importing Drawings , one for exporting Drawings . If one StorageFormat matches the file extension of the Drawing file , then this StorageFormat can be used to store or restore the Drawing . <p> LONG ... findFileFilter ) Find a StorageFormat that can be used according to a FileFilter to store a Drawing in a file or restore it from a file respectively . <h> setDefaultStorageFormat <p> Set a StorageFormat as the default storage format which is selected in a javax.swing.JFileChooser . The default storage format must be already added with addStorageFormat . Setting the default storage format to null does not automatically remove the StorageFormat from the list of supported StorageFormats. 41272 @qwx241272 <p> newDefaultStorageFormat - StorageFormat that should be selected in a JFileChooser 
@@24629449 @4629449/ <h> org.jhotdraw.draw Interface DrawingEditor <p> Usage of drawing editor in conjunction with the JHotDraw application framework : <p> For Applications which provide a single document interface ( SDI ) there is typically one drawing editor instance per View . So that each view can have its own toolbars and drawing palettes . <p> For applications with a Windows-style multiple document interface ( MDI ) there is typically one drawing editor instance per parent window . All views within a parent window share the toolbars and drawing palettes provided be the parent window . <p> For applications with a Mac OS X-style application document interface ( OSX ) there is typically a single drawing editor instance for the application . All views within the application share a single set of toolbars and drawing palettes. <h> setActiveView <h> setTool <p> Calls deactivate on the previously active tool of this drawing editor . Calls activate on the provided tool . Forwards all mouse , mouse moation and keyboard events that occur on the DrawingView to the provided tool . 
@@24629450 @4629450/ <h> Interface DrawingView <p> A drawing view can hold only one drawing at a time , but a drawing can be in multiple drawing views at the same time . <p> DrawingView can paint the drawing with a scale factor . It supports conversion between view coordinates and drawing coordinates . <p> DrawingView maintains a selection of the Figures contained in the drawing . When a figure is selected , the drawing view request Handles from the figure and draws them on top of the drawing . <p> To support editing , a drawing view needs to be added to a DrawingEditor . The current Tool of the drawing editor receives mouse and key events from all drawing views of the drawing editor . When added to an editor , the drawing view paints the current Tool on top of the drawing . The selected figures and handles can be the targets of the current tool of the drawing editor . <p> Editing operations can be constrained , for example by a grid . The constraints are defined by a Constrainer object . Handles and tools should take the @ @ @ @ @ @ @ @ @ @ figure . <p> The painting process of DrawingView view involves the following steps : <p> Chain of responsibility Mouse and keyboard events of the user occur on the drawing view , and are preprocessed by the DragTracker of a SelectionTool . In turn **43;5666;TOOLONG invokes " track " methods on a Handle which in turn changes an aspect of a figure . Client : SelectionTool ; Handler : DragTracker , Handle . <p> Observer State changes of figures can be observed by other objects . Specifically CompositeFigure observes area invalidations and remove requests of its child figures . DrawingView also observes area invalidations of its drawing object . Subject : Figure ; Observer : FigureListener ; Event : FigureEvent ; Concrete Observer : CompositeFigure , DrawingView . <p> Observer State changes of handles can be observed by other objects . Specifically DrawingView observes area invalidations and remove requests of handles . Subject : Handle ; Observer : HandleListener ; Event : HandleEvent ; Concrete Observer : DrawingView . <p> Strategy Editing can be constrained by a constrainer which is associated to a drawing view . Context : DrawingView ; Strategy : Constrainer. 
@@24629451 @4629451/ <p> " In case of object-oriented programs , relating features to their implementations is , however , a difficult task , as object- oriented programming languages provide no means for expressing features explicitly . In object-oriented programs , features are implemented implicitly as inter-class collaborations crosscutting not only multiple classes but also multiple architectural units , e.g. layers in layered architectures . This physical tangling and scattering of features over several source code units makes their implementations difficult to identify and understand . " <p> They used the SVG sample application of JHotDraw 7.5 as an example . The SVG sample does not include a documentation of its features , and thus makes such an analysis unnecessarily hard . From now on , I am going to extend the package comments and class comments in JHotDraw with a " Features " section , similar to the " Design Patterns " section which is already present . The " Features " section will name a feature , state the part of the feature that the package or class implements , and list participating packages and classes . 
@@24629452 @4629452/ <p> OSXAdapter uses a Proxy object to dynamically implement the **34;5711;TOOLONG interface and register it with the **26;5747;TOOLONG object . This allows the complete project to be both built and run on any platform without any stubs or placeholders . Useful for developers looking to implement Mac OS X features while supporting multiple platforms with minimal impact . <h> Method Detail <h> **25;5775;TOOLONG <p> The action listener will be called when the application receives an Open Application event from the Finder or another application . Usually this will come from the Finder when a user double-clicks your application icon . If there is any special code that you want to run when you user launches your application from the Finder or by sending an Open Application event from another application , include that code as part of this handler . The Open Application event is sent after AWT has been loaded . <h> **27;5802;TOOLONG <p> Called when the application receives a Reopen Application event from the Finder or another application . Usually this will come when a user clicks on your application icon in the Dock . If there @ @ @ @ @ @ @ @ @ @ user clicks on your application icon in the Dock or when a Reopen Application event is sent from another application , include that code as part of this handler . <h> setOpenFileHandler <p> Pass this method an ActionListener equipped to handle document events from the Finder . Documents are registered with the Finder via the CFBundleDocumentTypes dictionary in the application bundle 's Info.plist . <p> The filename is passed as the actionCommand. <h> setPrintFileHandler <p> Pass this method an ActionListener equipped to handle document events from the Finder . Documents are registered with the Finder via the CFBundleDocumentTypes dictionary in the application bundle 's Info.plist. 
@@24629454 @4629454/ <h> Quble <p> Quble <p> A Twisting , Turning , Fun WORD GAME ! <p> Game Book <p> RULES FOR PLAY <p> It 's the fun-filled , easy-to-play , take-it-anywhere word search game for the whole family ! Play with 1 , 2 or more players or teams . QUBLE has 9 different letters on each of the 6 different faces ( a face = a side of the QUBLE cube ) which can be mixed-up quickly with just a few twists and turns . Billions of combinations are possible . See inside for multiple game variations . Then play QUBLE , the amazingly addictive word puzzle game ! <p> ABOUT QUBLE <p> Each QUBLE Game Set includes one puzzle cube with 54 assorted letters and a 60-second timer . Study QUBLE and you will notice that it has 8 corner cubes and 12 single edge cubes which revolve around the 6 fixed center cubes . <p> FOR 1 , 2 OR MORE PLAYERS ( OR TEAMS ) <p> In most games , one player follows another . QUBLE can be played solo or with up to 10 players @ @ @ @ @ @ @ @ @ @ player can play solitaire . <p> SCORING GUIDE <p> The following chart indicates the point values for each letter in the QUBLE game : <p> A - 0 <p> H - 4 <p> O - 0 <p> U - 0 <p> B - 2 <p> I - 0 <p> P - 4 <p> V - 6 <p> C - 2 <p> J - 6 <p> Q - 8 <p> W - 6 <p> D - 4 <p> K - 8 <p> R - 2 <p> X - 6 <p> E - 0 <p> L - 2 <p> S - 2 <p> Y - 4 <p> F - 2 <p> M - 4 <p> T - 2 <p> Z - 8 <p> G - 2 <p> N - 2 <p> PLAY STRATEGY <p> To play QUBLE , players have the option to twist and turn the cube to build words in 60-second rounds using letters worth varying point values ( point values are indicated on each letter ) . The strategy is to search for the most or longest words and accumulate the highest score possible . Each player must decide @ @ @ @ @ @ @ @ @ @ cubes or searching and calling out each word with its point value . Typically , a game consists of 2 to 5 rounds of play . Players compete for the highest score by adding up the letter values for all words appearing anywhere around the cube . The letters can wrap around the sides of the cube from one face to another and must link diagonally , vertically or horizontally . In QUBLE JUMBLE and FIRST TO FORTY , scoring may be based upon the length of the word . The more letters in a word , the more points . <p> Besides word game play , QUBLE can also be played as a conventional brain teaser by matching up each face of the puzzle by solid colors . <p> SCORING <p> Each player or team has a column on a scoresheet . During each turn , all of the words found and called out by a player are written down by the opposite player along with the cumulative point values of the letters in each word . All eligible words appearing anywhere around or on the 6 faces of @ @ @ @ @ @ @ @ @ @ . Highest cumulative score of all words at the end of the game wins . <p> Jon <p> Bill <p> Lisa <p> hut <p> 6 <p> game <p> 6 <p> sail <p> 4 <p> know <p> 16 <p> pets <p> 8 <p> hat <p> 6 <p> ELIGIBLE WORDS <p> All words found in a standard dictionary are allowed with the exception of proper nouns . Words within words count . Both singular and plural words can be counted if both are called before the end of a player 's turn . A word may only be used once in an entire game . Any single letter on the cube may only be used once in the same word . The letters forming a word must be connected and link either diagonally , vertically or horizontally . Letters for a word can link or wrap from one face of the cube to another . Letters forming words can link at any angle to each other , even upside down , left to right or right to left . <p> If a player suspects an opponent 's word is misspelled or does @ @ @ @ @ @ @ @ @ @ expires . Once a dictionary shows who is correct , the winner of the challenge adds triple value for the word to their score column . <p> Objective : Players search and find a single word with the most points in 60 second rounds using letters with different point values . <p> Game Play : Choose a player to go first . The player has 60 seconds to twist and turn the cube in order to search and call out a single word with the largest point value possible anywhere around the cube . Play then passes to the next player who now has the option to further twist and turn the cube to form and call out a word within 60 seconds . Play continues for 5 rounds . <p> Winning : The player or team with the highest cumulative score after 5 rounds wins ! <p> FIND THEM ALL <p> Objective : Can you fill all the words hidden within QUBLE ? Remember there are over a billion letter combinations possible . <p> Game Play : Choose a player to go first . The player has 60 seconds @ @ @ @ @ @ @ @ @ @ many words as possible from anywhere around the cube . <p> The opposing player writes down each word and its point value on the score sheet , The opposing player can challenge any word called after the player 's time expires . Play then passes to the next player who does the same . <p> Winning : The player or team with the highest score after one round wins ! <p> FIND THEM OR LOSE THEM <p> Objective : Find all the words in QUBLE or else you might lose them to your opponent . <p> Game Play : Choose a player to go first . The player may twist and turn the cube at first . But once the first word is called , the cube must remain stationary and the player only has 60 seconds to find and score all the words possible . The opposing player writes down each word called and computes the score of each word when the player 's time expires . <p> The opposing player then gets 60 seconds to find and score any words not found by the first player around the @ @ @ @ @ @ @ @ @ @ opposing player or team going first this time . <p> Winning : The player or team with the highest score after the second round wins . <p> SOLITAIRE QUBLE <p> Objective : A single player searches and scores all words using letters with different point values . <p> Game Play : A solo player twists and mixes-up the cube . The QUBLE cube must then remain stationary for the rest of the game . The player searches and writes down all words possible and their point values from all 6 faces ( sides ) of the QUBLE cube . <p> Winning : Determine the cumulative total score of all words found . A solo player tries to beat his or her personal best score in subsequent games . <p> FIRST OF FORTY <p> Objective : Players compete in 60 second rounds in which they have to come up with the 3 longest words they can find . <p> Game Play : Choose a player to go first . That player has 60 seconds to come up with the 3 longest words possible . Each letter in a word in this @ @ @ @ @ @ @ @ @ @ pts. , house = 5 pts . ) . The opposing player writes down each word and its point value on the score sheet . Any word called can be challenged . No words may be repeated . Players have the option to twist and turn the cube during their play . <p> Winning : The first player to score 40 or more points after each player has had an equal number of turns is the winner ! <p> QUBLE JUMBLE <p> Objective : Players compete simultaneously by searching for words to get the highest score within a 120 second game or to be the first to reach 20 points . <p> Game Play : Each player is given a pencil and paper . Twist and mix-up the QUBLE cube and then place it in a stationary position for all players to see . Start the timer . Players immediately search and write down all words that can be formed by letters adjoining either left to right , up or down , vertically , horizontally or diagonally . Words that go over the edge from one face to another also @ @ @ @ @ @ @ @ @ @ be used once in a word . After 60 seconds , flip the QUBLE cube and timer over , so the bottom and sides hidden from view in the first 60 seconds of play are now visible to players . Each player is therefore able to see all sides of the QUBLE cube during the game . <p> Winning : The first player to reach 20 points is the winner . Alternatively , the player with the highest score after 120 seconds wins . Words found by more than one player are not scored by anyone and must be crossed off the score pad . <p> Alternative Scoring : <p> Number of Letters <p> Number of Points <p> 2 <p> 1 <p> 3 <p> 1 <p> 4 <p> 2 <p> 5 <p> 4 <p> 6 <p> 6 <p> 7 <p> 8 <p> 8 or more <p> 10 <p> SOLID COLOR PUZZLE GAME <p> Objective : Randomly mix-up the colors of QUBLE . See how quickly you can twist and turn the QUBLE cube so that each face ( side of the QUBLE cube ) is a single solid color . @ @ @ @ @ @ @ @ @ @ a solitaire game . <p> Winning : The player who gets the 6 solid colors on all 6 faces in the least amount of time wins . 
@@24629455 @4629455/ <h> **29;5831;TOOLONG <p> Creates a new byte array output stream . The buffer capacity is initially 32 bytes , though its size increases if necessary . <h> **29;5862;TOOLONG <p> public **33;5893;TOOLONG size ) <p> Creates a new byte array output stream , with a buffer capacity of the specified size , in bytes. 41272 @qwx241272 <p> size - the initial size . <p> Throws : <p> **34;5928;TOOLONG - if size is negative . <p> Method Detail <h> write <p> public void write ( int b ) <p> Writes the specified byte to this byte array output stream . <p> Overrides : <p> write in class **29;5964;TOOLONG 41272 @qwx241272 <p> b - the byte to be written . <h> write <p> public void write ( byte b , int off , int len ) <p> Writes len bytes from the specified byte array starting at offset off to this byte array output stream . <p> Overrides : <p> write in class **29;5995;TOOLONG 41272 @qwx241272 <p> b - the data . <p> off - the start offset in the data . <p> len - the number of bytes to write . @ @ @ @ @ @ @ @ @ @ field of this byte array output stream to zero , so that all currently accumulated output in the output stream is discarded . The output stream can be used again , reusing the already allocated buffer space . <p> Overrides : <p> reset in class **29;6026;TOOLONG <p> See Also : <p> **26;6057;TOOLONG <h> seek <p> public void seek ( long pos ) throws java.io.IOException <p> Sets the current stream position to the desired location . The next read will occur at this location . The bit offset is set to 0 . <p> An **25;6085;TOOLONG will be thrown if pos is smaller than the flushed position ( as returned by getflushedPosition ) . <p> It is legal to seek past the end of the file ; an EOFException will be thrown only if a read is performed . 41272 @qwx241272 <p> pos - a long containing the desired file pointer position . <p> Throws : <p> **35;6112;TOOLONG - if pos is smaller than the flushed position . <p> java.io.IOException - if any other I/O error occurs . <h> getStreamPosition <p> public long getStreamPosition() throws java.io.IOException <p> Returns the current byte @ @ @ @ @ @ @ @ @ @ place starting at this offset . 
@@24629457 @4629457/ <h> getSourceActions <p> This is the type of transfer actions supported by the source . Some models are not mutable , so a transfer operation of COPY only should be advertised in that case . <p> Overrides : <p> getSourceActions in class **27;6149;TOOLONG 41272 @qwx241272 <p> comp - The component holding the data to be transfered . This argument is provided to enable sharing of TransferHandlers by multiple components . <p> Returns : <p> This is implemented to return NONE if the component is a JPasswordField since exporting data via user gestures is not allowed . If the text component is editable , COPYORMOVE is returned , otherwise just COPY is allowed . 
@@24629458 @4629458/ <p> TextAreaTool A TextAreaTool creates TextAreaFigures . To create a new text area , the user drags a rectangle on the drawing on a free spot . When releasing the mouse the tool calls the area 's editor to enter the text . If the tool is clicked on an existing area the tool simply calls the area 's editor . When creating a new area , if the user leaves the text empty , the newly created area figure is discarded . <p> HTMLTextAreaTool HTMLTextAreaTool creates or edits HTMLTextAreaFigures . Only diffreence with TextAreaFigure is that this allows to edit HTML code using a more suitable font than the one defined by the figure . 
@@24629459 @4629459/ <h> Nine Men 's Morris Cube <p> ' Nine Men 's Morris ' is an abstract strategy board game for two players . The origin of the game was found in the ancient Egypt . <p> The game is also known as ' Nine Man Morris ' , ' Mill ' , ' Mills ' , ' Merels ' , ' Merelles ' , and ' Merrills ' in English . <p> Rules of play <p> Each player has nine pieces , or ' men ' , which move among the board 's twenty-four intersections . The object of the game is to leave the opposing player with fewer than three pieces or , as in checkers , no legal moves . <p> The game is divided into two phases : the placing and the moving of the pieces . <p> Placing the pieces <p> The game begins with an empty board . Players take turns placing their pieces on empty intersections . If a player is able to form a row of three pieces along one of the board 's lines , he has a ' mill ' @ @ @ @ @ @ @ @ @ @ the board ; removed pieces may not be placed again . Players must remove any other pieces first before removing a piece from a formed mill . Once all eighteen pieces have been placed , players take turns moving . <p> Moving the pieces <p> To move , a player slides one of his pieces along a board line to an empty adjacent intersection . If he can not do so , he has lost the game . <p> As in the placement stage , a player who aligns three of his pieces on a board line has a mill and may remove one of his opponent 's pieces , avoiding the removal of pieces in mills if at all possible . <p> Any player reduced to two pieces is unable to remove any more opposing pieces and thus loses the game . <p> Flying <p> In one common variation , once a player is reduced to three pieces , his pieces may ' fly ' , ' hop ' or ' jump ' to any empty intersections , not only adjacent ones . Some sources of the rules say @ @ @ @ @ @ @ @ @ @ treat it as a variation , and some do n't mention it at all . A ' 19th Century Games Manual ' calls this the truly rustic mode of playing the game+ . <p> The layout of the Nine Men 's Morris Cube was created in 2010 by Walter Randelshofer. 
@@24629461 @4629461/ <h> Leo L. Schwab <h> The Dream Goes Berserk <p> subtitled My First Lesson in Intellectual Property Law+ <p> circa September 1987 <p> Oy ... <p> The full story that caused this animation to be created is a long and convoluted one and , to be honest , rather embarrassing . At the time this whole sordid mess unfolded , I got a ' hell ' of a lot more mileage out of it than I really deserved . Invective on the Net was hurled , feelings were hurt and , as they say in Washington , Mistakes were made+ . Personally , I 'm perfectly happy to just let the issue die , obscured in antiquity . <p> Still , I ended up with a rather nice animation out of the whole deal , not to mention a pretty cool unicycle object . Justly or otherwise , this became one of he most ( in ) famous animations ever made for the Amiga , and even today it still holds up relatively well , if I do say so myself . <p> If you ' really ' want @ @ @ @ @ @ @ @ @ @ a show or a conference some time , buy me a drink and I 'll tell you ... 
@@24629462 @4629462/ <h> TextFigure <h> drawStroke <p> This method is called by method draw() to draw the text of the figure . AbstractAttributedFigure configures the Graphics2D object with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . <h> drawFill <p> This method is called by method draw() to draw the fill area of the figure . AbstractAttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> transform <p> Transforms the shape of the Figure . Transformations using double precision arithmethics are inherently lossy operations . Therefore it is recommended to use **25;6178;TOOLONG restoreTransformTo() to provide lossless undo/redo functionality . <p> This is a basic operation which does not fire events . Use the following code sequence , if you need event firing : <p> detailLevel - The detail level of the handles . Usually this is 0 for bounding box handles and 1 for point handles . The value -1 is used by the SelectAreaTracker and the HandleTracker to highlight figures , over which the mouse pointer is hovering . 
@@24629464 @4629464/ <h> Wng MemoQube <p> This cube can be used to learn Mandarin Chinese words built of two characters . Wng or ? means ' king ' in Chinese . The scheme to connect the characters corresponds with the structure of the Wng character . <p> There are four tones in Mandarin Chinese plus a fifth neutral tone . The same chinese character may be pronounced with different tones but with different meanings in each case . Thus , it is very important to know in advance the correct pronunciation tone . A very convenient means of knowing a character tone consists in coding the character colour . Here , the selected colour code is as follows : Tone 1 : Red , Tone 2 : Green , Tone 3 : Blue , Tone 4 : Black . <p> While the majour group of the Chinese vocabulary are words composed of two characters , combinations with one , three or four characters are less common . <p> When in the initial state the stickers of a face are numbered row by row from C1 to C9 , 8 words can @ @ @ @ @ @ @ @ @ @ , C4-C5 , C5-C8 , C5-C6 , C7-C8 , C8-C9 ) or 48 words per cube . Rotating the faces allows you to build many more words . A database was used to find the most common characters for the centers , corners and edges . 
@@24629466 @4629466/ <h> Java Applets for V-Cube 6 and V-Cube 7 <p> I have implemented support for these cubes in Java . I have integrated it into my CubeTwister application and my Virtual-Cube applets and Cube-Player applets . <p> It took me about one week of work . <p> For each cube , I had to create <p> a permutation model , which describes the position and orientation of the parts of the cube . <p> two 3D models which describe the shape , interaction and animation of the cube in 3-dimensional space ( I had to create two 3D models , because I am supporting two different 3D engines ) . <p> a notation which describes how to write down a sequence of moves . <p> The Virtual-Cube applets can be seen in action on my Virtual Cubes page . These applets allow to play around with a virtual cube.The Cube-Player applets can not yet be seen in action . They are designed to interactively display pretty patterns and solutions inside a web-page . My brother Walter will certainly add them to his pretty patterns page in the future . @ @ @ @ @ @ @ @ @ @ . <p> This URLs contain a script after the question mark . You can change the script after the question mark to your liking using the Superset ENG 6+6/7+7 notation . <p> And here are the links to the Superset ENG 6+6 and Superset ENG 7+7 notation.You need to scroll down on these pages for a description of the notations in plain English . These are just the notations that I use for my own purpose . CubeTwister has an editor which allows to create other notations , which can be used for the applets . <p> The CubeTwister application and all the applets including source code can be downloaded from my CubeTwister page . 
@@24629467 @4629467/ <p> A Tool to create a new figure by drawing its bounds . The figure to be created is specified by a prototype . <p> To create a figure using the CreationTool , the user does the following mouse gestures on a DrawingView : <p> Press the mouse button over the DrawingView . This defines the start point of the Figure bounds . <p> Drag the mouse while keeping the mouse button pressed , and then release the mouse button . This defines the end point of the Figure bounds . <p> The CreationTool works well with most figures that fit into a rectangular shape or that concist of a single straight line . For figures that need additional editing after these mouse gestures , the use of a specialized creation tool is recommended . For example the TextTool allows to enter the text into a TextFigure after the user has performed the mouse gestures . <p> Alltough the mouse gestures might be fitting for the creation of a connection , the CreationTool is not suited for the creation of a ConnectionFigure . Use the ConnectionTool for this type @ @ @ @ @ @ @ @ @ @ instance with the specified prototype but without an attribute set . The CreationTool clones this prototype each time a new Figure needs to be created . When a new Figure is created , the CreationTool applies the default attributes from the DrawingEditor to it . 41272 @qwx241272 <p> prototype - The prototype used to create a new Figure . <h> CreationTool <p> Creates a new instance with the specified prototype but without an attribute set . The CreationTool clones this prototype each time a new Figure needs to be created . When a new Figure is created , the CreationTool applies the default attributes from the DrawingEditor to it , and then it applies the attributes to it , that have been supplied in this constructor . 41272 @qwx241272 <p> prototype - The prototype used to create a new Figure . <p> attributes - The CreationTool applies these attributes to the prototype after having applied the default attributes from the DrawingEditor. 
@@24629471 @4629471/ <p> The first 4 bytes defines the chunk length . This field also carries some other unknown flags , since at least one of the high bits is sometimes set . If the overall length of the chunk is less than 8 , treat the frame as a NOP , which means that the frame is the same as the one before it . Next , there is a header of either 0x0000 or 0x0008 . A header value onlyWith bit 3 set ( header &amp; 0x0008 ) indicates that information follows revealing at which line the decode process is to begin : <p> 2 bytes starting line at which to begin updating frame 2 bytes unknown 2 bytes the number of lines to update 2 bytes unknown <p> If the header is 0x0000 , then the decode begins from the first line and continues through the entire height of the image . After the header comes the individual RLE-compressed lines . An individual compressed line is comprised of a skip code , followed by a series of RLE codes and pixel data : <p> Each line begins onlyWith @ @ @ @ @ @ @ @ @ @ in a particular line in the output line before outputting new pixel data . Actually , the skip count is set to one more than the number of pixels to skip . For example , a skip byte of 15 means " skip 14 pixels " , while a skip byte of 1 means " do n't skip any pixels " . If the skip byte is 0 , then the frame decode is finished . Therefore , the maximum skip byte value of 255 allows for a maximum of 254 pixels to be skipped . <p> After the skip byte is the first RLE code , which is a single signed byte . The RLE code can have the following meanings : <p> equal to 0 : There is another single-byte skip code in the stream . Again , the actual number of pixels to skip is 1 less than the skip code . Therefore , the maximum skip byte value of 255 allows for a maximum of 254 pixels to be skipped . <p> equal to -1 : End of the RLE-compressed line <p> greater than 0 : @ @ @ @ @ @ @ @ @ @ stream to the output frame . <p> less than -1 : Repeat pixel data - ( RLE code ) times . <p> The pixel data has the following format : <p> 8-bit data : Pixels are handled in groups of four . Each pixel is a palette index ( the palette is determined by the Quicktime file transporting the data ) . If ( code &gt; 0 ) , copy ( 4 * code ) pixels from the encoded stream to the output . If ( code &lt; -1 ) , extract the next 4 pixels from the encoded stream and render the entire group -(code) times to the output frame . <p> 16-bit data : Each pixel is represented by a 16-bit RGB value onlyWith 5 bits used for each of the red , green , and blue color components and 1 unused bit to round the value tmp to 16 bits : xrrrrrgg gggbbbbb . Pixel data is rendered to the output frame one pixel at a time . If ( code &gt; 0 ) , copy the run of ( code ) pixels from the encoded stream @ @ @ @ @ @ @ @ @ @ , unpack the next 16-bit RGB value from the encoded stream and render it to the output frame -(code) times . <p> 24-bit data : Each pixel is represented by a 24-bit RGB value onlyWith 8 bits ( 1 byte ) used for each of the red , green , and blue color components : rrrrrrrr gggggggg bbbbbbbb . Pixel data is rendered to the output frame one pixel at a time . If ( code &gt; 0 ) , copy the run of ( code ) pixels from the encoded stream to the output . If ( code &lt; -1 ) , unpack the next 24-bit RGB value from the encoded stream and render it to the output frame -(code) times . <p> 32-bit data : Each pixel is represented by a 32-bit ARGB value onlyWith 8 bits ( 1 byte ) used for each of the alpha , red , green , and blue color components : aaaaaaaa rrrrrrrr gggggggg bbbbbbbb . Pixel data is rendered to the output frame one pixel at a time . If ( code &gt; 0 ) , copy the run of ( @ @ @ @ @ @ @ @ @ @ . If ( code &lt; -1 ) , unpack the next 32-bit ARGB value from the encoded stream and render it to the output frame -(code) times . <h> AnimationCodec <h> setOutputFormat <p> Sets the output format . Returns the format that was actually set . This is the closest format that the Codec supports . Returns null if the specified format is not supported and no reasonable match could be found . 
@@24629475 @4629475/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> More information on using the Orbit Cube together with a specifically designed algorithm database can be found in PDF document Orbit Cube . <h> Orbit Cube 2 <p> The 6x6x6 cube features a total of 9 orbits , numbered from ' 01 ' up to ' 09 ' . The 9 orbits show 24 locations each for corner , edge and center stickers . These are lettered from ' A ' to ' X ' . Thanks to both orbit numbering and sticker lettering , the cube can show how stickers are permuted within their respective orbits and also displays the usually unnoticeable permutations and orientations of centers . <p> Marked stickers allow for analyzing already known or user-specific algorithms and help in understanding the behaviour of permutated pieces within their orbits . <p> In this version , all stickers in a given orbit are colored in a unique tone to make them out from stickers located in a nearby orbit . <p> The layout of the Orbit Cube was created in 2009 by AndrT Boulouard and Walter Randelshofer. 
@@24629476 @4629476/ <p> The location of the start and end points of the bezier path is defined by Connector objects , which are supplied by the connected figures . <p> If a connected figure is removed , the connection figure needs to be removed as well . To achieve this , ConnectionFigure listens to figureRemoved events sent by the two figures that it connects , and then fires a requestRemove event to get removed as well . <p> The bezier path of the connection figure can be laid out using a Liner . <p> Design Patterns <p> Framework Two figures can be connected using a connection figure . The location of the start or end point of the connection is handled by a connector object at each connected figure . Contract : Figure , ConnectionFigure , Connector . <p> Strategy The control points of the bezier path of a connection figure can be laid out using different layout algorithms which are implemented by a liner object . Context : ConnectionFigure ; Strategy : Liner . <p> Strategy The location of the start and end points of a connection figure are determined @ @ @ @ @ @ @ @ @ @ Context : Figure , ConnectionFigure ; Strategy : Connector . <h> setLiner <p> Set a Liner object which encapsulated a lineout algorithm for this figure . Typically , a Liner accesses the child components of this figure and arranges their graphical presentation . 41272 @qwx241272 <p> newValue - encapsulation of a lineout algorithm . <h> lineout <p> void lineout() <p> A lineout algorithm is used to define how the child components should be laid out in relation to each other . The task for lineouting the child components for presentation is delegated to a Liner which can be plugged in at runtime. 
@@24629477 @4629477/ 41265 @qwx241265 <h> Extras <h> Arxon Cuboctahedron <p> The Cuboctahedron is a standard Rubik 's Cube with sliced off sections giving 14 sides to the cube . Since it 's a regular cube it can only be moved along three axes . <p> Colors of the diamond shaped faces are as follows : yellow is opposite to white , blue to green , and orange to red . If the blue side is on the top , then the red is on the front and the yellow on the right . <p> Colors of the triangular faces are as follows : top triangles in clockwise direction starting with the triangle between yellow and red : light rose , gray , deep pink , light violet . Bottom triangles in clockwise direction starting with the triangle between red and yellow : red violet , light green , gold , cyan . 
@@24629479 @4629479/ <p> The mutable table model adds the following operations to the **28;6205;TOOLONG interface : <p> An Abstract factory for the creation of new elements . Insert and remove operations . Operations for retrieving javax.swing.Action 's for a group of elements A setter operation for changing the value of an element . Operations for importing and exporting elements from a **30;6235;TOOLONG . <p> addRow ( int row , java.lang.Object element ) Inserts the specified element at the specified position in this list Shifts the element currently at that position ( if any ) and any subsequent elements to the right ( adds one to their indices ) . <p> void <p> createRow ( int row , java.lang.Object type ) Creates the specified element type at the specified position in this list Shifts the element currently at that position ( if any ) and any subsequent elements to the right ( adds one to their indices ) . <p> **34;6267;TOOLONG <p> **25;6303;TOOLONG rows ) Creates a Transferable to use as the source for a data transfer of the specified elements . <p> java.lang.Object <p> getCreatableRowType ( int row ) Returns the @ @ @ @ @ @ @ @ @ @ specified index of the list . <p> java.lang.Object <p> getCreatableRowTypes ( int row ) Returns the types of elements that can be created at the specified index of the list . <p> LONG ... t , int action , int row , boolean asChild ) Causes a transfer to the model from a clipboard or a DND drop operation . <p> boolean <p> isCellEditable ( int row , int column ) Returns true if the specified cell may be edited . <p> boolean <p> isRowAddable ( int index ) Returns true if a row can be added at the specified index . <p> boolean <p> LONG ... transferFlavors , int action , int row , boolean asChild ) Indicates whether the model would accept an import of the given set of data flavors prior to actually attempting to import it . <p> boolean <p> isRowRemovable ( int row ) Returns true if the specified element can be removed . <h> getCreatableRowTypes <p> Returns the types of elements that can be created at the specified index of the list . 41272 @qwx241272 <p> row - The insertion point . 0 &lt;= @ @ @ @ @ @ @ @ @ @ Object 's that specify element types that can be inserted at the insertion point . Returns an empty array if no elements can be inserted here . Never returns null . This array must include the type returned by operation getCreatableType. <h> getCreatableRowType <p> public java.lang.Object getCreatableRowType ( int row ) <p> Returns the default type of elements that can be created at the specified index of the list . 41272 @qwx241272 <p> row - The insertion point . 0 &lt;= index &lt;= getRowCount() <p> Returns : <p> an Object that specifies the default element type that can be inserted at the insertion point . Returns null if no elements can be inserted here . The value must be one of the types returned by operation getCreatableTypes. 
@@24629484 @4629484/ <h> drawFill <p> protected abstract void **28;6330;TOOLONG g ) <p> This method is called by method draw() to draw the fill area of the figure . AbstractAttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> drawStroke <p> protected abstract void **30;6360;TOOLONG g ) <p> This method is called by method draw() to draw the text of the figure . AbstractAttributedFigure configures the Graphics2D object with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . 
@@24629486 @4629486/ <h> What 's New ? <p> Changes in Version 2.0alpha130 2010-08-18 <p> - Fixes a hang which can occur when recording a script in the script editor. - Adds preliminary keyboard support to the virtual cube applets. - The reset button changes its icon when the alt key is pressed to show that it performs a different function. - Adds support for the applet parameter " rearViewScaleFactor " to the cube player applets. - Reduces memory consumption of the cube player applets . <p> Changes in Version 2.0alpha129 2010-08-10 <p> - The cube can now be rotated with the scroll wheel and with two finger swipes on the trackpad . <p> Changes in Version 2.0alpha128 2010-08-03 <p> - Adds support for the applet parameter " locale " to the cube player applets. - Fixes support for more than 6 colors in the deprecated " colorTable " applet parameter . <p> Changes in Version 2.0alpha127 2010-07-15 <p> - Removed the splash screen from the cube applets . The copyright notice and version number is now written into the console . <p> - Increased the surface area which reacts on mouse @ @ @ @ @ @ @ @ @ @ has now two-colored edge parts . <p> Changes in Version 2.0alpha119 2010-03-27 <p> - Superset notations : Updated N- , T- and V-moves . <p> - WCA notations : Updated notation to revision of July 3 , 2009 . <p> - The entry fields on the Dimension view of the Cube view did not accept negative values . <p> - The Moves table of the Notation view was not updated when a value was pasted . <p> - When playing scripts the inversion token of inverted moves is now highlighted . <p> - When playing scripts the repetitor token of doubled moves is now highlighted . <p> Changes in Version 2.0alpha113 2010-02-12 <p> - Fixed twist speed slider in applets . <p> Changes in Version 2.0alpha112 2010-02-09 <p> - Resource files for the applets can now be zip-compressed. - HTML export now only exports applets if they are needed. - HTML export does not mark the document as changed anymore after export is finished . <p> Changes in Version 2.0alpha111 2010-01-30 <p> - Completed the color scheme of the Arxon Cuboctahedron . The scheme was contributed by Roger Meier . @ @ @ @ @ @ @ @ @ @ work . <p> - Adjusted the light source intensity and the ambient light intensity of the " flat " cube player applet . <p> Changes in Version 2.0alpha106 2010-01-10 <p> - Menu items in the " Edit " menu work now . <p> Changes in Version 2.0alpha105 2010-01-01 <p> - Loading of files did not work - oops : - ( - Changing a color in the cube editor did not immediately update the cube. - Adding an additional color to an applet caused one complete face to take this color . <p> Changes in Version 2.0alpha104 2009-12-29 <p> - The properties panel of the Cube view did not display on Windows. - Saving a file using the " Save " menu did not work . <p> Changes in Version 2.0alpha102 2009-12-22 <p> - Fixed a deadlock which occured when exporting a script as a video . <p> Changes in Version 2.0alpha100 2009-12-21 <p> - Improved the user interface on Windows . <p> Changes in Version 2.0alpha83 2009-04-13 <p> - Implemented the record function in the script editor. - V-Cube 7 : The stickers image at the bottom-right-down corner was @ @ @ @ @ @ @ @ @ @ applets. - The virtual cube applets store now their state in a browser cookie . <p> Changes in Version 2.0alpha76 2009-01-25 <p> - Swipe movements at second edges of Cube7 cubes turned the wrong layer . <p> - All cubes except the DiamondCube with the Idx3d-engine can now be fully twisted by dragging the mouse pointer over the stickers . - Removed players with Geom3D engine from CubeTwister HTML template to reduce the overall download size . These applets are currently not used by CubeTwister alpha . <p> Changes in Version 2.0alpha70 2009-01-03 <p> - The player applets are now localized in English , German , French and Italian. - Cubes can now be twisted by dragging the mouse pointer over the stickers . For now , this only works for CubeTwister and for applets with the Idx3d-engine . It is not fully implemented yet for the Diamond cube and it is not implemente yet for the " flat " Geom3D-engine . <p> - . jar-files in HTML templates are now generated from the . jar.pack.gz files to reduce download size. - Barrel- , Diamond- and Octahedron-Player applets did not @ @ @ @ @ @ @ @ @ @ the tree . <p> - Fixed T3L and T3L2 moves in Superset ENG 5x5 notation. - Help window did not open when CubeTwister was launched as Java WebStart application. - Reworked template document . - The script type " Solver " / " Generator " is not ignored anymore when loading an CubeTwister document. - The cube player apples did not apply the deprecated " colorTable " parameter to all faces of the cube . <p> Changes in Version 2.0alpha65 , 2008-12-19 <p> - Fixed the texture mapping of the right-down edges on the 4x4 Revenge Cube , 6x6 Cube and 6x6 V-Cube. - Fixed the texture of the Permutation Cube 4x4 . <p> Changes in Version 2.0alpha64 , 2008-11-24 <p> - The old help text from CubeTwister 1.0 is now availble in the help menu. - The help text is now searchable . <p> Changes in Version 2.0alpha63 , 2008-09-17 <p> - Added a rear view of the cube to the script editor and the player applets. - Added flat versions of the cube players for V-Cube 6 and V-Cube 7. - The flat versions of the players disable @ @ @ @ @ @ @ @ @ @ Changes in Version 2.0alpha59 , 2008-09-03 <p> - Implemented parsing and output of permutations with different locations of sign. - Implemented default output of the cube state , if the current notation does n't support permutation- Added WCA notation to template document- Added a white V-Cube 7 to the template document. - Fixed HTML export for V-Cube 6 and V-Cube 7. - Added VirtualCube6 and VirtualCube7 applets . <p> Changes in Version 2.0alpha58 , 2008-08-30 <p> - Added Cube 6 and Cube 7 with square parts . <p> Changes in Version 2.0alpha57 , 2008-08-25 <p> - The V-Cube 6 has bigger edge and corner parts like the real cube. - The V-Cube 7 has curved faces like the real cube. - Fixed wrong orientation of side parts in one of the twists for V-Cube 7. 
@@24629487 @4629487/ <h> xpoints <p> public double xpoints <p> The array of X coordinates . The number of elements in this array might be more than the number of X coordinates in this Polygon . The extra elements allow new points to be added to this Polygon without re-creating this array . The value of npoints is equal to the number of valid points in this Polygon. <h> ypoints <p> public double ypoints <p> The array of Y coordinates . The number of elements in this array might be more than the number of Y coordinates in this Polygon . The extra elements allow new points to be added to this Polygon without re-creating this array . The value of npoints is equal to the number of valid points in this Polygon. <h> invalidate <p> Invalidates or flushes any internally-cached data that depends on the vertex coordinates of this Polygon . This method should be called after any direct manipulation of the coordinates in the xpoints or ypoints arrays to avoid inconsistent results from methods such as getBounds or contains that might cache data from earlier computations relating to the vertex @ @ @ @ @ @ @ @ @ @ iterates along the boundary of this Polygon and provides access to the geometry of the outline of this Polygon . An optional AffineTransform can be specified so that the coordinates returned in the iteration are transformed accordingly . 
@@24629488 @4629488/ <p> isEmpty() Returns true , if this figure is empty for one of the following reasons : A group has no children A path has less than two points An ellipse or a rectangle has a width or a height of 0 A text has no characters <h> drawFill <p> This method is called by method draw() to draw the fill area of the figure . AttributedFigure configures the Graphics2D object with the FILLCOLOR attribute before calling this method . If the FILLCOLOR attribute is null , this method is not called . <h> drawStroke <p> This method is called by method draw() to draw the text of the figure . AttributedFigure configures the Graphics2D object with the TEXTCOLOR attribute before calling this method . If the TEXTCOLOR attribute is null , this method is not called . <p> detailLevel - The detail level of the handles . Usually this is 0 for bounding box handles and 1 for point handles . The value -1 is used by the SelectAreaTracker and the HandleTracker to highlight figures , over which the mouse pointer is hovering . 
@@24629489 @4629489/ 41265 @qwx241265 <h> Textures <h> Extras <h> Four Color Cube <p> The Four Color Cube only features stickers in four different colors . In the initial state the colors are arranged in such a way that no two adjacent stickers share the same color . This sticker arrangement follows the ' four color theorem ' , also known as ' four color map theorem ' . In mathematics it states that , no more than four colors are required to color the regions of a map , so that no two adjacent regions have the same color . <p> The layout of the Four Color Cube was created in 2015 by Evgeniy Grigoriev . The color scheme was created in 2015 by Walter Randelshofer . <h> The four color theorem <p> The intuitive statement of the ' four color theorem ' , i.e. that given any separation of a plane into contiguous regions , called a map , the regions can be colored using at most four colors so that no two adjacent regions have the same color+ , needs to be interpreted appropriately to be correct . <p> @ @ @ @ @ @ @ @ @ @ technically , are in the closure of ) three or more countries , must be ignored . In addition , bizarre maps ( using regions of finite area but infinite perimeter ) can require more than four colors . Second , for the purpose of the theorem , every ' country ' has to be a connected region , or contiguous . In the real world , this is not true ( e.g. the Upper and Lower Peninsula of Michigan , Nakhchivan as part of Azerbaijan , and Kaliningrad as part of Russia are not contiguous ) . Because all the territory of a particular country must be the same color , four colors may not be sufficient . <p> This problem is sometimes also called ' Guthrie 's problem ' after F. Guthrie , who first conjectured the theorem in 1852 . The conjecture was then communicated to de Morgan and thence into the general community . In 1878 , Cayley wrote the first paper on the conjecture . <p> The four color theorem was proven in 1976 by Kenneth Appel and Wolfgang Haken . It was the first major theorem to be proved using a computer . 
@@24629490 @4629490/ 41265 @qwx241265 <h> Textures <h> Extras <h> Sundial Cube <p> The Sundial Cube is used to measure the time by the position of the sun . This is a ' Vertical Sundial ' with time displayed on the cube front face . However , to be fully functional as a real sundial , the cube needs an accessory , which is a ' shadow maker ' , called a gnomon or style . When the cube is not used as a sundial , it can nevertheless be used as a Super Cube , which is a design variation of a Rubik 's Cube with marker strokes drawn on some stickers to show the orientation of side parts . The sundial cube noon lines can then be used as Super Cube strokes . <p> The vertical sundial cube can be read in six capital cities , all around the globe : London ( Great Britain ) , Roma ( Italy ) , New Delhi ( India ) , Beijing ( People 's Republic of China ) , Seoul ( South Korea ) and Riyadh ( Saudi Arabia ) . Six @ @ @ @ @ @ @ @ @ @ , Roman , Hindi ( Devanagari ) , Chinese/Japanese , Korean ( Hangul ) and Arabic-Indic numerals . Moreover , the computed angle between a given hour-line and the noon hour-line is different for each capital city , making this cube a precise solar clock . <p> The layout of the Sundial Cube was created in 2008 by AndrT Boulouard and Walter Randelshofer . <p> In common sundial designs , the sun casts a shadow from its style onto a flat surface marked with lines indicating the hours of the day . As the sun moves across the sky , the shadow-edge progressively aligns with different hour-lines on the plate . Such designs rely on the style being aligned with the axis of the Earth 's rotation . <p> The style ( a thin rod or a sharp , straight edge ) should be parallel to the Earth 's axis of rotation , and point to the celestial pole . The surface where the shadow is cast is called the ' dial face ' or ' dial plate ' ( often shortened to ' face ' ) . <h> Vertical @ @ @ @ @ @ @ @ @ @ the shadow-receiving plane is aligned vertically . The style 's angle with vertical ' f ' must equal the co-latitude , which is 90 minus the sundial 's geographical latitude ' ? ' : <p> f = 90 ? <p> However , the line of shadow does not move uniformly on the face : the sundial is not equiangular . If the face of the vertical dial points directly South , the angle of the hour-lines is instead described by the formula : <p> tan ( ? ) = cos ( ? ) + tan ( 15 + t ) <p> where ' ? ' is the sundial 's geographical latitude , ' ? ' is the angle between a given hour-line and the noon hour-line ( which always points due North ) on the plane , and ' t ' is the number of hours before or after noon . For example , the angle ? of the 3 pm hour-line would equal the arctangent of cos ( ? ) , since tan(45) = 1 . Interestingly , the shadow moves counter-clockwise on a South-facing vertical dial , whereas @ @ @ @ @ @ @ @ @ @ Horizontal Sundials <p> In the common ' Horizontal Sundial ' , the shadow-receiving plane is aligned horizontally . The style 's angle with the plane must equal the sundial 's geographical latitude ' ? ' . <p> As is also the case for the vertical sundial , the line of shadow does not move uniformly on the plane : the sundial is not equiangular . If the style points directly North , the angle of the hour-lines is instead described by the formula : <p> tan ( ? ) = sin ( ? ) + tan ( 15 + t ) <p> where ' ? ' is the sundial 's geographical latitude , ' ? ' is the angle between a given hour-line and the noon hour-line ( which always points due North ) on the plane , and ' t ' is the number of hours before or after noon . For example , the angle ? of the 3 pm hour-line would equal the arctangent of sin ( ? ) , since tan(45) = 1 . Interestingly , the shadow moves clockwise on horizontal and equatorial dials , @ @ @ @ @ @ @ @ @ @ <p> Note that the angle ? between a given hour-line and the noon hour-line is not the same for the vertical and horizontal sundials . <h> Combined Sundials <p> A vertical and a horizontal sundial can be combined by sharing the same style , because their style angles are complementary i.e. they sum up to 90 . The horizontal sundial plane can also be used as a base plate for the cube . In that case , the common style should only be fastened onto the plane and not onto the cube . The common style length ' L ' and the distance of the style far end from the cube ' D ' are given by : <p> L = H / sin ( ? ) and D = H / tan ( ? ) <p> where ' ? ' is the sundial 's geographical latitude and ' H ' is the cube height , usually equal to 57 mm for a regular Rubik 's cube . <p> The style can be made from a 3 mm diameter plastic rod , which should be bevelled at both ends . @ @ @ @ @ @ @ @ @ @ base plate whereas the upper end simply leans against the top center cubie . <h> Final adjustments <p> There are three adjustments to calculate local clock time from a sundial reading : 1 . Summer ( daylight saving ) time correction 2 . Time zone ( Longitude ) correction 3 . Equation of time correction 
@@24629491 @4629491/ <h> Professor Cube ILLusion+ <p> The Professor Cube ILLusion+ is made up of black and white cube parts , showing a checkerboard pattern on each face . The cube may look effortless to solve , but if you look again , you may notice that one checkerboard out of six is inverted . <p> Thanks to the inverted checkerboard pattern , it is actually possible to undo all six checkerboard patterns and build a cube with up to 3 white and 3 black faces with white corners . <p> Tip : Because there is a single inverted checkerboard face , the cube can be solved more easily if this face is done first , just after mixing it up . <p> This 5x5x5 cube version is based on the V-Cube 7 ILLusion+ invented by Verdes Innovations S.A. 
@@24629494 @4629494/ 41265 @qwx241265 <h> Textures <h> Extras <h> Watermelon Cube <p> It looks like one of those square watermelons grown by Japanese farmers . But compared to the shape-shifted fruit , this cube can be scrambled a lot easier . <p> Watermelon ( Citrullus lanatus , family Cucurbitaceae ) can be both the fruit and the plant of a vine-like ( scrambler and trailer ) plant originally from southern Africa , and is one of the most common types of melon . <p> In Japan , farmers of the Zentsuji region found a way to grow cubic watermelons , by growing the fruits in glass boxes and letting them naturally assume the shape of the receptacle . The square shape is designed to make the melons easier to stack and store . <p> The layout of the Arbuz Cube ( ? ? ? ? ? arbuz , Russian for watermelon ) was created in 2010 by Evgeniy Grigoriev and Alexey Gurov. 
@@24629495 @4629495/ <h> Client property : Quaqua.SplitPane.style <p> The thumb style is very lean . Only a round knob at the center of the divider and ( if switched on ) the one touch expansion buttons are drawn . <p> With the bar style , the divider is a bar that goes across the split pane . The thumb style is the default . <p> You can specify a style using the Quaqua.SplitPane.style client property and passing in the String " thumb " or " bar " . <p> **30;6392;TOOLONG <p> " Quaqua.SplitPane.style " , " bar " <p> ) ; <p> Popular Mac OS X applications such as iTunes and Mail often use a 1 pixel wide divider . You can achieve this by using the " bar " style and by setting the divider width to 1 . <p> The screenshot below shows a horizontal and a vertical split pane . Both use the " bar " style . The horizontal split pane has its divider width set to 1 . Also , all scroll panes have an empty border , in order to have them go from edge @ @ @ @ @ @ @ @ @ @ <p> Here is the code snippet that was used to configure the horizontal split pane : 
@@24629497 @4629497/ <h> Welsh Calendar Cube <p> This cube is a perpetual calendar . By twisting and rotating it , you can set it to today 's date . <p> The weekday is located at the upper right . It is split into two parts . <p> The month in the middle row is abbreviated into three characters . <p> The day is shown at the bottom right . <p> Welsh weekdays <p> Dydd Llun ( Monday ) <p> Dydd Mawrth ( Tuesday ) <p> Dydd Mercher ( Wednesday ) <p> Dydd Iau ( Thursday ) <p> Dydd Gwener ( Friday ) <p> Dydd Sadwrn ( Saturday ) <p> Dydd Sul ( Sunday ) <p> Welsh months <p> IONawr ( January ) <p> CHWEfror ( February ) <p> MAWrth ( March ) <p> EBRill ( April ) <p> MAI ( May ) <p> MEHefin ( June ) <p> GORffennaf ( July ) <p> AWSt ( August ) <p> MEDi ( September ) <p> HYDref ( October ) <p> TACHwedd ( November ) <p> RHAGfyr ( December ) <p> In Welsh , the digraphs ' CH ' , ' DD ' , @ @ @ @ @ @ @ @ @ @ ' , ' PH ' , ' RH ' and ' TH ' are regarded as single letters and listed separately in the Welsh alphabet , therefore ' CHWE ' , ' TACH ' and ' RHAG ' are three-letter abbreviations as well . The modern Welsh alphabet ( yr wyddor ) contains 28 letters , of which eight are digraphs . The letters ' J ' , ' K ' , ' Q ' , ' V ' , ' X ' and ' Z ' are not part of this alphabet . However , due to several loanwords from English the letter ' J ' is now often included in the alphabet . The letters ' K ' , ' V ' , ' X ' and ' Z ' are used in some technical terms , like ' kilogram ' , ' volt ' , ' xeroser ' and ' zero ' , but can be , and often are , replaced by Welsh letters : ' cilogram ' , ' folt ' , ' seroser ' and ' sero ' . <p> Welsh ( ' Cymraeg @ @ @ @ @ @ @ @ @ @ of the Brythonic branch of Insular Celtic languages spoken natively in Wales ( Cymru ) , in England by some along the Welsh border and in the Welsh immigrant colony in the Chubut Valley in Argentine Patagonia . <p> In 1992 Kelvin Downey built a Welsh Calendar Cube based on the layout of the English Calendar Cube . The design was reworked in 2008 by Walter Randelshofer and Kelvin Downey . 
@@24629498 @4629498/ <h> Psygnosis <h> Lemmings Test Animation <p> This ' test ' anim created by Mike Dailly and Gary Timmons inspired DMA Design to develop the highly successful game Lemmings+ . <p> While Scott Johnson was drawing little men in a 16 x 16 box for a game called Walker+ , Mike Dailly maintained they could be done in less , 8 x 8 he thought . So he set about trying to prove him wrong . Mike did a small anim with some men at the bottom , a gun , and a 10 ton weight . Gary Timmons , then added the mouth , the hand and the spinny thing . Gary 's almost complete Lemming , just right of the mouth , is clearly the one that was later used in the game . <p> A first demo with Lemmings walking over a landscape was shown to Psygnosis in late September of 1989 at the PCW show . Because of the PC EGA palette it looked much nicer to have Lemmings with green hair instead of blue ! 
@@24629500 @4629500/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> Celestia , a real-time 3D space simulation was used to render the images of the comet , planets and moons . <h> Astro Cube <p> The Astro Cube displays 6 planets : Earth , Mars , Jupiter , Saturn , Uranus and Neptune together with 13 of their largest satellites . Comet Halley is able to orbit around all cube faces . The Sun and the inner planets Mercury and Venus are hidden inside the physical core of the cube . <p> In any solved state , all 13 satellites are positioned around their respective planets and the comet orbit is an unbroken loop . Up to 36 solved states do actually exist , because Comet Halley can travel to any of the 6 cube faces . In addition , satellites Moon , Io , Titan , Ariel and Triton can be positioned at different spots around their respective planets . Note that the labels of satellites of a same planet share a same and unique color . <p> Discover astronomical facts , for instance the order of the planets @ @ @ @ @ @ @ @ @ @ Try to recognize the planets from their images and learn more about the largest 13 satellites in the solar system . The cube also visualizes the very elongated orbit of Halley that enables the comet to travel long distances from Earth ( actually from Venus ) to Neptune . <p> The layout of the Astro Cube was created in 2010 by Stefan Berinde . <h> Halley 's Comet ( front face ) <p> Category : <p> short-period comet <p> Orbital period : <p> 75.3 Julian years <p> Last perihelion : <p> 9 February 1986 <p> Next perihelion : <p> 28 July 2061 <p> Dimensions : <p> 15.3 x 7.2 x 7.2 km <p> Halley 's Comet or Comet Halley is the best-known of the short-period comets , and is visible from Earth every 75 to 76 years . Halley is the only short-period comet that is clearly visible to the naked eye from Earth , and thus the only naked-eye comet that might appear twice in a human lifetime . Other naked-eye comets may be brighter and more spectacular , but will appear only once in thousands of years . @ @ @ @ @ @ @ @ @ @ observed by astronomers since at least 240 BC , and recorded by Chinese , Babylonian , and medieval European chroniclers , but were not recognized as reappearances of the same object . The comet 's periodicity was first determined in 1705 by English astronomer Edmond Halley , after whom it is now named . Halley 's Comet last appeared in the inner Solar System in 1986 and will next appear in mid-2061 . <p> Halley 's orbital period over the last three centuries has been between 75 and 76 years , though it has varied between 74 and 79 years since 240 BC . Its orbit around the Sun is highly elliptical . The perihelion , the point in the comet 's orbit when it is nearest the Sun , is just 0.587 ' 21 AU ( between the orbits of Mercury and Venus ) , while its aphelion , or farthest distance from the Sun , is 35.33 AU ( roughly the distance of Pluto ) . Unusually for an object in the Solar System , Halley 's orbit is retrograde ; it orbits the Sun in the opposite @ @ @ @ @ @ @ @ @ @ Sun 's north pole . The orbit is inclined by 18 to the ecliptic , with much of it lying south of the ecliptic . Due to Halley 's highly eccentric orbit , it has one of the highest velocities , relative to the Earth , of any object in the Solar System . The 1910 passage was at a relative velocity of 70.56 km/s . <h> The Solar System <p> In increasing distance from the Sun , the planets and some dwarf planets of the Solar System are : 
@@24629502 @4629502/ <h> Extras <h> Links <h> Three Color Super Cube <p> The Three Color Super Cube displays only 3 colors which are shown on adjacent faces . Due to this particular color scheme and the asymmetric arangement of the stickers all pieces are distinct . The non centered stickers visualize the orientation of side parts and make this cube a Super Cube . <p> A Super Cube is a design variation of the Rubik 's Cube which visualizes the orientation of side parts . Because of this , a Super Cube has 2048 times more positions than a regular cube ( 46/2 = 2048 ) . <p> The layout of the Three Color Super Cube was created in 2010 by Ortwin Schenker. 
@@24629503 @4629503/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> More information on using the Orbit Cube together with a specifically designed algorithm database can be found in PDF document Orbit Cube . <h> Orbit Cube <p> The 3x3x3 cube features a total of 3 orbits , numbered from ' 00 ' up to ' 02 ' . Orbits from ' 01 ' up to ' 02 ' show 24 locations each for corner and edge stickers . These are lettered from ' A ' to ' X ' . Orbit ' 00 ' shows 6 locations only for true centers , lettered with ' A ' , ' E ' , ' I ' , ' M ' , ' Q ' and ' U ' . Thanks to both orbit numbering and sticker lettering , the cube can show how stickers are permuted within their respective orbits and also displays the usually unnoticeable permutations and orientations of centers . <p> Marked stickers allow for analyzing already known or user-specific algorithms and help in understanding the behaviour of permutated pieces within their orbits . <p> The layout of the @ @ @ @ @ @ @ @ @ @ Walter Randelshofer. 
@@24629504 @4629504/ 41265 @qwx241265 <h> Textures <h> Extras <h> Dice Cube <p> This cube is similar to a die , where all six faces show distinct numbers , ranging from one to six . Numbers are patterns of round dots called ' pips ' . They are arranged so that numbers on opposite faces add to seven . This implies that faces 1 , 2 and 3 meet at a common vertex . Faces representing 1 , 2 and 3 run in counterclockwise direction from this vertex . <p> Pips on traditional Western dices are arranged in specific patterns . These can be conveniently described by pairs , where one pair of pips is located on opposite corners , the next pair on the remaining corners and the last pair on the middle of two opposite faces . For odd numbers , a dot is added on the center of the face . Thus , ' three ' is a diagonal row , and ' five ' a quincunx . Numbers on the opposite faces of a die should add up to 7 . However , there are two ways of @ @ @ @ @ @ @ @ @ @ other , so that there are left- and right-handed dice . Standard Western dices are ' right-handed ' : if the 1-spot pattern is located on the upper face , then the 2-spot pattern is located on the left face and the 3-spot pattern on the right face . <p> The layout of the Dice Cube was created in 2010 by Evgeniy Grigoriev and introduced as a sticker variation on a ' Microbic Cube ' . This latter cube , also invented by Evgeniy , is only 10 mm ( 0.39 in ) wide . According to the Guinness World Records , it 's the smallest fully functional Rubik 's Cube . 
@@24629505 @4629505/ 41265 @qwx241265 <h> V-Cube 6 <p> The V-Cube 6 , invented by Panagiotis Verdes , is the 6x6x6 version of the Rubik 's Cube . Unlike the original puzzle , it has no fixed facets : the center facets ( 16 per face ) are free to move to different positions . <p> A V-Cube 6 consists of 152 unique miniature cubes , also called ' cubies ' : 8 corners , 48 edges , and 96 centers . The 6x6x6 cube has a total of 216 stickers . <h> The number of possible positions <p> The number of possible positions of the cube is 8 ! + 37 + 24 ! 6 / 4 ! 24 + 24 1.571 + 10116 which is about 157.1 novemdecillion on the long scale or 157.1 septentrigintillion on the short scale . 
@@24629506 @4629506/ <h> Commodore <h> Kid Amiga <p> Amiga Graphicraft 1.0 demo image . <p> Amiga Graphicraft , developed by Island Graphics Corporation and marketed by Commodore , was the first paint program available for the Amiga . The program was easy to learn with its relatively simple commands . Though it did n't have all the mighty options of its successors , but the ones it had allowed to draw quite complex pictures including cycle animation . The Graphicraft color cycling chunk ( CCRT ) , used to store the color cycling ranges , was different to the later introduced CRNG and DRNG chunks of DeluxePaint. 
@@24629512 @4629512/ 41265 @qwx241265 <h> Textures <h> Extras <h> Tangram Cube <p> The cube shows two complementary black and white checkerboards located on the Up and Down faces and triangular shape stickers on the four remaining faces . All triangular shape stickers on a given face are oriented in the same direction whereas the orientations of stickers located on two adjacent faces differ by 90 . All cube pieces are unique which allows only one solution . Since four centers out of six have to be oriented , the cube shows 256 ( = 44 ) times more positions than a regular cube . <p> The layout of the Tangram Cube was created in 2010 by Ortwin Schenker . <h> Algorithms <h> Initial state ( 4 Dots ) <p> Algorithm ( R2 L2 + MD ) 2 ( 6 ltm , 8* ftm , 12* qtm ) <p> Algorithm MR2 MD MR2 MD ' ( 4* ltm , 8* ftm , 12* qtm ) <p> Note On the Tangram Cube , the 4 Dots pattern looks indistinguishable to the initial state . However , it can not regarded as another valid @ @ @ @ @ @ @ @ @ @ locations . Note that on the Color Tangram Cube this pattern looks different to the initial state . <h> Cube rotation ( 4 Dots ) <p> Algorithm R2 L2 + U D ' + F2 B2 + U D ' ( 8 ltm , 8* ftm , 12* qtm ) <p> Algorithm MR2 MD MR2 MD ' + CD2 ( 4* ltm , 8* ftm , 12* qtm ) <p> Note On the Tangram Cube , the 4 Dots pattern looks like a 180 rotation of the whole cube around the axis of the Up and Down faces . But actually the centers did n't move . <h> Solid face on the top and bottom ( 4 Parallel Bars , 2 Chessboards ) <p> Algorithm MR2 MF2 ( 2* ltm , 4* ftm , 8* qtm ) <p> Note On the Tangram Cube , the 4 Parallel Bars , 2 Chessboards pattern creates a solid face on the top and bottom . 
@@24629513 @4629513/ <p> The constraint in the value of N&lt;6,82 can be overcome if the planar faces of the cube become spherical parts of long radius . Therefore , the final solid with N=7 and more layers loses the classical geometrical cubic shape , that with six planar surfaces , but from N=7 to N=11 the six solid faces are no longer planar but spherical , of long radius compared to the cube dimensions , the shape of said spherical surfaces being almost planar , as the rise of the solid faces from the ideal level , is about 5% of the side length of the ideal cube . 
@@24629514 @4629514/ 41265 @qwx241265 <h> Revenge Cube <p> The Revenge Cube ( also known als the ' Rubik 's Revenge ' or the ' Master Cube ' ) is the 4x4x4 version of the Rubik 's Cube . Invented by PTter SebestTny , the Rubik 's Revenge was nearly called the ' SebestTny Cube ' until a somewhat last-minute decision changed the puzzle 's name to attract fans of the original Rubik 's Cube . Unlike the original puzzle , it has no fixed facets : the centre facets ( four per face ) are free to move to different positions . <p> A Revenge Cube consists of 56 unique miniature cubes , also called ' cubies ' : 8 corners , 24 edges , and 24 centers . The 4x4x4 cube has a total of 96 stickers . <h> The number of possible positions <p> The number of possible positions of the cube is 8 ! + 37 + 24 ! 2 / 4 ! 6 + 24 7.401 + 1045 which is about 7.4 septillion or 7.4 septilliard on the long scale or 7.4 quattuordecillion on the short scale @ @ @ @ @ @ @ @ @ @ ! / 4 ! 6 = 3 ' 246 ' 670 ' 537 ' 110 ' 000 3.246 + 1015 which is about 3.2 billiard on the long scale or 3.2 quadrillion on the short scale . In September 9 , 2005 Jaap Scherphuis showed that the centers can always be solved in at most 22 moves . See also The 4x4x4 centres can be solved in 22 moves for further informations . <h> The diameter of the Rubik 's Revenge <p> The first upper bound for the Rubik 's Revenge was definded in July 7 , 2006 by Bruce Norskog . In God 's algorithm calculations for the 4x4x4 ' squares set ' , posted in the Domain of the Cube Forum , he claims that the 4x4x4 can be solved for any legally scrambled configuration in no more than 79 slice turns ( 11 + 18 + 14 + 17 + 19 = 79 ) ! A new lower bound was defined in the same thread as well : At most 3629 + 3628 + 3627 + ... ( approx. 1/6 of the number of positions of a @ @ @ @ @ @ @ @ @ @ or less , so there are positions that require at least 30 slice turns. + <p> In February 14 , 2007 , Bruce Norskog completed a new five-stage analysis which shows that the 4x4x4 can always be solved using at most 68 block turns ( 10 + 15 + 12 + 15 + 16 = 68 ) . See Solving the 4x4x4 in 68 turns for further informations . <p> In August 13 , 2007 , Bruce Norskog completed a new analyses for ' twist turns ' and ' block turns ' for stage 2 of his five-stage-solution . The total number of moves that could be required to perform all five stages is now 11 + 17 + 18 + 16 + 20 = 82 for twist turns , and 10 + 14 + 12 + 15 + 16 = 67 for block turns . See New upper bounds : 82 twist turns , 67 block turns for further informations . <p> In September 30 , 2013 , Shuang Chen lowered the upper bound to 57 moves in OBTM ( outer-block-turn metric ) . His solving algorithm is based @ @ @ @ @ @ @ @ @ @ by merging step 3 and 4 into one step . See also the article Solving the 4x4x4 in 57 moves ( OBTM ) for further informations . This drops the upper bound for BTM ( block-turn metric ) to 57 moves as well . Actually the value should even be lower , because of the larger set of basic moves in BTM . <p> In March 3 , 2015 , Tomas Rokicki confirmed the upper bound of 57 moves in OBTM . With the same code he also calculated new upper bounds of 56 moves in SSTM ( single-slice-turn metric ) and 53 moves in BTM ( block-turn metric ) . In March 7 and 9 , 2015 , Shunag Chen further improved these upper bounds to 55 OBTM and 53 SSTM respectively . See 4x4x4 upper bounds : 57 OBTM confirmed ; 56 SST and 53 BT calculated for further informations . <h> The maximum permutation order <p> The maximum permutation order of a regular Revenge Cube is 765 ' 765 . It can be achieved by twisted corner 3-cycles and 5-cycles : 3 + ( 3 + 5 @ @ @ @ @ @ @ @ @ @ and 17-cycle : ( 7 + 17 ) ; center 11-cycle and 13-cycle : ( 11 + 13 ) . This results in a Least Common Multiple ( LCM ) of ( 9 + 5 ) + ( 7 + 17 ) + ( 11 + 13 ) = 765 ' 765 . The order can be reached by the following algorithm found by Tony Forbes : NF NU2 B ' TD2 TU ( 5 btm ) . Note , that the maxium permutation order for a Super Cube version is higher . <p> In January 12 , 2008 Max Daniel , Benjamin Lipp and Jakob von Raumer proved for the ' Jugend Forscht ' project , that the maximum permutation order of the Revenge Cube is 765 ' 765 . Their algorithm to reach it was : U TL NB ' + CR ' ( 3 btm ) . They discovered , that possible orders can be computed as the LCM from three values , where one value has to be from the list S8 ( corner orders ) and two values from the list S24 ( edge and @ @ @ @ @ @ @ @ @ @ 360 and 255 ' 255 as the highest values : LCM ( 5 , 504 , 143 ) = 360 ' 360 ; LCM ( 15 , 119 , 143 ) = 255 ' 255 . However , this is n't already the maximal order , because flips have been ignored . From the total order that also regards flips , the relation to the orders above is either the factor 1 or 3 . Since for all permutation orders of 360 ' 360 the factor is 1 and for 255 ' 255 the factor 3 exists , the maximum order is therefore 255 ' 255 + 3 = 765 ' 765 . See also the German document Gruppentheorie am 4-Rubikwnrfel for further informations. 
@@24629516 @4629516/ <h> Circular Treemaps <p> by werner on January 20th , 2008 <p> This week , I made an other attempt at my project for the visualization of large tree structures . I have implemented a circular treemap . Check it out here . <p> Implementing a good circle packing algorithm for the circular treemap is very hard . First I tried a simple generative approach , which lais out the circles in a phyllotactic spiral . Phyllotactic spirals are a common pattern found in nature , for example in a marguerite : <p> In this algorithm n is the number of circles , and c is a constant for the spacing between circle centers , radius and theta are the locations of the circles in polar coordinates . <p> Unfortunately , the phyllotactic spiral only works well , if there are many circles , and all circles have roughly the same size . <p> I am now using an algorithm , which works with pairs of circles . For this algorithm , we first sort the circles by size . With the three largest circles , we create a @ @ @ @ @ @ @ @ @ @ corners of the triangle , and letting the length of an edge be the sum of the radii of the two circles it connects . <p> Then we create a list of each possible pairings of these triangles . With a triangle with corners A , B , C , we get six possible pairings : A-B , B-C , C-A , B-A , C-B , A-C . With each subsequent circle , we try to create a new triangle with these pairings . We choose the pairing , which places the subsequent circle closest to the center of the original triangle , and which does not result in an overlap with the cirlces we have already laid out . Once we found the best triangle , for example A-B with D , we add the four additionally possible pairings to the list : A-D , D-B , D-A , B-D . And then , we process the next circle . <p> This is not an optimal algorithm , but it gives fairly good results . Here is screenshot of a circular treemap generated with it : 
@@24629518 @4629518/ <h> Breton Calendar Cube <p> This cube is a perpetual calendar . By twisting and rotating it , you can set it to today 's date . <p> The weekday is located at the upper row on the right . <p> The day is shown in the middle row on the right or left . <p> The month at the bottom is abbreviated into three characters . <p> Breton weekdays <p> Sul , disul ( Sunday ) <p> Lun , dilun ( Monday ) <p> Meurzh , dimeurzh ( Tuesday ) <p> Merc'her , dimerc'her ( Wednesday ) <p> Yaou , diyaou ( Thursday ) <p> Gwener , digwener ( Friday ) <p> Sadorn , disadorn ( Saturday ) <p> Traditionally , for Bretons , the week begins on Sunday . <p> The list starts with the abbreviated form used in calendars . The days of the week generally take the ' di ' particle , as shown in the second form . In this version , the days have the particle for ' last Sunday , ' next Monday ' etc . <p> Breton months <p> GENver ( @ @ @ @ @ @ @ @ @ @ March ) <p> EBRel ( April ) <p> MAE ( May ) <p> MEZheven , EVEn ( June ) <p> GOUhere ( July ) <p> EOSt ( August ) <p> GWEngolo ( September ) <p> HERe ( October ) <p> DU ( November ) <p> KERzu ( December ) <p> Breton is a Celtic language which is still spoken in Brittany ( Breizh ) . Brittany is a french Region which is located in the western part of France . There are two colors on the cube : one is blue , representing the colour of the sea ( Armor ) and the other is green , representing the colour of the land ( Argoat ) , because in Brittany we have a blue sea ( both Channel and Atlantic ocean ) , white sand and green land ( and good seafood too but also a lot of rain sometimes ) + . ? AndrT Boulouard <p> Breton language originates from the Brythonic branch of Insular Celtic languages brought by Romano-British settlers to Brittany , perhaps from the end of the 3rd century onwards . The modern-day language most closely @ @ @ @ @ @ @ @ @ @ ( The other regional language of Brittany , Gallo , is a Langue d'onl derived from Latin ) . <p> The layout of the Breton calendar cube was created in 2008 by AndrT Boulouard and Walter Randelshofer. 
@@24629519 @4629519/ <h> Super Cube ' Bandelow ' <p> A Super Cube is a design variation of the Rubik 's Cube which visualizes the orientation of side parts . Because of this , a Super Cube has 2048 times more positions than a regular cube ( 46/2 = 2048 ) . <p> You can create a Super Cube easily by yourself . All you need is a felt marker . The design shown on the left uses felt marker strokes to show the orientation of the side parts . Each stroke connects the sticker of a side part with the sticker of one adjacent edge part . 
@@24629521 @4629521/ 41265 @qwx241265 <h> Textures <h> Extras <h> Yun MemoQube <p> This cube can be used to learn Mandarin Chinese words built of two characters . Characters are connected on a circle on each face , hence cube name Yun or ? , which means ' circle ' in Chinese . <p> While most of Chinese words are composed of two characters , words of one , three or four characters do exist but are less commonly used . <p> In the initial state , stickers are numbered row by row from C1 to C9 on each face and 8 words can be built per face ( C1-C2 , C2-C3 , C3-C6 , C6-C9 , C9-C8 , C8-C7 , C7-C4 , C4-C1 ) , giving 48 words per cube . Moving edge pieces allows to build many more words . A database has been used to find words that give a maximum of combinations between characters on corners and edges . <p> This cube was designed in 2013 by AndrT Boulouard , I-Ling Quilfen and Walter Randelshofer . <h> Blue circle ( up ) <p> Mandarin <p> Transcription <p> English @ @ @ @ @ @ @ @ @ @ ? ? <p> ? ? <p> kouyu <p> spoken language <p> ? ? <p> ? ? <p> yufa <p> grammar <p> ? ? <p> ? ? <p> fayi <p> forensic investigator <p> ? ? <p> ? ? <p> yidao <p> art of medicine <p> ? ? <p> ? ? <p> daojia <p> taoism <p> ? ? <p> ? ? <p> jiadian <p> appliances <p> ? ? <p> ? ? <p> dianl <p> electric circuit <p> ? ? <h> Yellow circle ( right ) <p> Mandarin <p> Transcription <p> English <p> Circle <p> ? ? <p> waigong <p> maternal grandfather <p> ? ? <p> ? ? <p> gongkai <p> open to the public <p> ? ? <p> ? ? <p> kaiben <p> format <p> ? ? <p> ? ? <p> bengu= <p> national <p> ? ? <p> ? ? <p> gu=shu <p> credentials <p> ? ? <p> ? ? <p> shumfng <p> title <p> ? ? <p> ? ? <p> mfngfFn <p> social status <p> ? ? <p> ? ? <p> fFnwai <p> exceptionally <p> ? ? <h> Red circle ( front ) <p> Mandarin <p> Transcription <p> English <p> Circle @ @ @ @ @ @ @ @ @ @ <p> ? ? <p> cheshen <p> car body <p> ? ? <p> ? ? <p> shenxin <p> body and mind <p> ? ? <p> ? ? <p> xinxiang <p> to think <p> ? ? <p> ? ? <p> xiangchu <p> to come up with <p> ? ? <p> ? ? <p> chufa <p> to leave <p> ? ? <p> ? ? <p> faqi <p> to launch <p> ? ? <p> ? ? <p> qihuo <p> to catch fire <p> ? ? <h> Green circle ( down ) <p> Mandarin <p> Transcription <p> English <p> Circle <p> ? ? <p> mTnsheng <p> disciple <p> ? ? <p> ? ? <p> shengr8 <p> birthday <p> ? ? <p> ? ? <p> r8shang <p> all day long <p> ? ? <p> ? ? <p> shangtian <p> Heaven , God <p> ? ? <p> ? ? <p> tianxia <p> world <p> ? ? <p> ? ? <p> xiahai <p> to take to the sea <p> ? ? <p> ? ? <p> haiguan <p> customs <p> ? ? <p> ? ? <p> guanmTn <p> to close the door <p> ? ? <h> Orange circle ( @ @ @ @ @ @ @ @ @ @ <p> ? ? <p> zu=feng <p> style <p> ? ? <p> ? ? <p> fengshui <p> feng shui <p> ? ? <p> ? ? <p> shuiwTn <p> hydrology <p> ? ? <p> ? ? <p> wTnyn <p> classical Chinese language <p> ? ? <p> ? ? <p> ynxfng <p> words and deeds <p> ? ? <p> ? ? <p> xfngd=ng <p> action <p> ? ? <p> ? ? <p> d=nggong <p> to begin work <p> ? ? <p> ? ? <p> gongzu= <p> to work <p> ? ? <h> Gray circle ( left ) <p> Mandarin <p> Transcription <p> English <p> Circle <p> ? ? <p> y=ngrTn <p> servant <p> ? ? <p> ? ? <p> rTnshou <p> manpower <p> ? ? <p> ? ? <p> shoutf <p> mobile phone <p> ? ? <p> ? ? <p> tfchTng <p> deduct a percentage <p> ? ? <p> ? ? <p> chTngzhang <p> to grow up <p> ? ? <p> ? ? <p> zhanggao <p> to grow taller <p> ? ? <p> ? ? <p> gaozhong <p> senior middle school <p> ? ? <p> ? ? <p> zhongy=ng <p> usable <p> ? @ @ @ @ @ @ @ @ @ @ Circle <p> ? ? <p> gongfa <p> public law <p> ? ? <p> ? ? <p> chedao <p> road <p> ? ? <p> ? ? <p> rTndian <p> magnetic healer , chiropractor <p> ? ? <p> ? ? <p> dianrTn <p> robot Denjin Zaborger ( Japanese TV series in 1974 ) <p> ? ? <p> ? ? <p> fengkou <p> air vent , drafty place <p> ? ? <p> ? ? <p> koufeng <p> intention <p> ? ? <p> ? ? <p> fenxin <p> to be distracted <p> ? ? <p> ? ? <p> tfqi <p> to mention <p> ? ? <p> ? ? <p> zhongwTn <p> Chinese language <p> ? ? <p> ? ? <p> gongben <p> cost price <p> ? ? <p> ? ? <p> shangshu <p> to give one 's opinion <p> ? ? <p> ? ? <p> chusheng <p> to be born <p> ? ? <p> ? ? <p> zhangguan <p> administrative or military chief <p> ? ? <p> ? ? <p> guanzhang <p> customs chief <p> ? ? <p> ? ? <p> xiaxfng <p> descending <p> ? ? <p> All 6 circles of the cube @ @ @ @ @ @ @ @ @ @ make an additional set of two-character words . 
@@24629524 @4629524/ <p> This class records mouse clicks occurring on other Java Windows running in the same JVM . Mouse clicks occurring in other JVM 's and other processes are not recorded . This ability is useful for performing in-JVM recordings of an application that is being tested . <p> This recorder uses four threads . Three capture threads for screen , mouse cursor and audio , and one output thread for the movie writer . <p> mouseFormat - The video format for mouse capture . The EncodingKey must be ENCODINGBLACKCURSOR or ENCODINGWHITECURSOR . The SampleRateKey can be independent from the screenFormat . Specify null if you do n't want to capture the mouse cursor . <p> mouseFormat - The video format for mouse capture . The EncodingKey must be ENCODINGBLACKCURSOR or ENCODINGWHITECURSOR . The SampleRateKey can be independent from the screenFormat . Specify null if you do n't want to capture the mouse cursor . <p> mouseFormat - The video format for mouse capture . The EncodingKey must be ENCODINGBLACKCURSOR or ENCODINGWHITECURSOR . The SampleRateKey can be independent from the screenFormat . Specify null if you do n't want to @ @ @ @ @ @ @ @ @ @ mouse capturing stopped . Invoke this method only after you invoked stopMouseCapture() . <p> Throws : <p> **30;6454;TOOLONG <h> getAudioLevelLeft <p> public float getAudioLevelLeft() <p> Returns the audio level of the left channel or of the mono channel . <p> Returns : <p> A value in the range 0.0,1.0 or **26;6057;TOOLONG <h> getAudioLevelRight <p> public float getAudioLevelRight() <p> Returns the audio level of the right channel . <p> Returns : <p> A value in the range 0.0,1.0 or **29;5964;TOOLONG <h> stop <p> public void stop() throws java.io.IOException <p> Stops the screen recorder . <p> Stopping the screen recorder may take several seconds , because audio capture uses a large capture buffer . Also , the MovieWriter has to finish up a movie file which may take some time depending on the amount of meta-data that needs to be written . <h> write <p> Writes a buffer into the movie . Since the file system may not be immediately available at all times , we do this asynchronously . <p> The buffer is copied and passed to the writer queue , which is consumed by the writer thread . See method @ @ @ @ @ @ @ @ @ @ rate for the video track . Since we can not capture frames at a fixed frame rate we have to resend the same captured screen multiple times to the writer . <p> This method is called asynchronously from different threads . <p> You can override this method if you wish to process the media data . 41272 @qwx241272 <p> buf - A buffer with un-encoded media data . If buf.track==videoTrack , then the buffer contains a BufferedImage in buffer.data and a Point in buffer.header with the recorded mouse location . The header is null if the mouse is outside the capture area , or mouse recording has not been enabled . <p> Throws : <p> java.io.IOException <p> **30;6486;TOOLONG <h> getMaxRecordingTime <p> public long getMaxRecordingTime() <p> Maximal recording time in milliseconds . If this time is exceeded , the recorder creates a new file . <h> setMaxRecordingTime <p> public void setMaxRecordingTime ( long maxRecordingTime ) <p> Maximal recording time in milliseconds. <h> getMaxFileSize <p> public long getMaxFileSize() <p> Maximal file size . If this size is exceeded , the recorder creates a new file . <h> setMaxFileSize <p> public void setMaxFileSize @ @ @ @ @ @ @ @ @ @ <p> Gets the audio mixer used for sound input . Returns null , if the default mixer is used . <h> setAudioMixer <p> public void **39;6545;TOOLONG mixer ) <p> Sets the audio mixer for sound input . Set to null for the default audio mixer . 
@@24629525 @4629525/ <h> MicroIllusions <h> Angel <p> This fantastic animation created by Ex-Disney animator Heidi Turnipseed shows a fairy , drinking water from a pool . The smoothness of animation and the attention to detail is just incredible . The ' Photon Video Cel Animator ' package actually allows to save an . ord ( Order File ) along with the animation . This additional file defines in which order the frames have to be played back . The file also holds the animation play back rate , individual frame delays , and/or the frame by frame location of any sound effects or dialogue phonemes . In the case of the ' Angel ' animation the final result will give a longer and even better animation then this source file . <p> Heidi Turnipseed has worked for Disney Studios and Don Bluth Productions , she also created demo animations for Deluxe Paint and Photon Paint and did the art work of several Amiga games . 
@@24629526 @4629526/ 41265 @qwx241265 <h> Textures <h> Extras <h> 4x4x4x4x4x4 Sudoku Cube <p> This cube is a Sudoku consisting of up to three levels of ' 2+2 Sudokus ' with base colors , circle colors and symbols on all faces . Therefore the cube name means ( 4+4+4 ) cubies + 4 base colors + 4 circle colors + 4 symbols . <p> In its initial state the cube faces are divided into grids of four colored 2+2 boxes . The four different circle colors are arranged as 2+2 Sudokus on two faces , The four different symbols are arranged as 2+2 Sudokus on all six faces . They appear on every row and column exactly once and they also appear exactly once in each 2+2 box . <p> The cube can be solved in several 2+2 Sudoku stages with several valid solutions . <p> The 46 Sudoku Cube was invented in 2008 by Ortwin Schenker and introduced in the TwistyPuzzles.com forum . <h> 1 . Base Colors <p> The cube can be brought into a position where every face shows a different , complete and correct ' 2+2 Sudoku ' @ @ @ @ @ @ @ @ @ @ four colors show exactly once on every row and column and exactly once in every 2+2 box . In addition , it becomes a ' 2+2 Supersudoku ' when the four colors are displayed on both diagonals exactly once as well . <p> In the image above the base colors are arranged in 2+2 Supersudoku style on each of the six faces . <h> 3 . Symbols <p> Putting it all together one ends up with a cube where each sticker carries markings on three levels : base color , circle color and symbol . <p> The cube can be played with so that any of the three levels can be grouped ( that is identical colors / symbols close to each other ) . It is also possible to bring the cube to states where at least one of the three levels show 2+2 Sudokus on all 6 faces . <p> In the image above base and circle colors are arranged in a 2+2 Supersudoku style on all 6 faces as well as the symbols on the front and back face . Note that the symbols of the right @ @ @ @ @ @ @ @ @ @ each symbol shows exactly twice in each row , column and the two diagonals on the upper and down face . <h> Solved State B <p> 1 . Base colors are arranged in 2+2 Supersudoku style on all six faces.2 . Circle colors are arranged in 2+2 Supersudoku style on all six faces.3 . Symbols are arranged in 2+2 Supersudoku style on two faces . Symbols are grouped into four 2+2 boxes on two faces . <h> Solved State C1 <p> 1 . Base colors are arranged in 2+2 Sudoku style on two faces.2 . Circle colors are grouped into four 2+2 boxes on all six faces.3 . Symbols are arranged in 2+2 Sudoku style on two faces . Symbols are grouped into four 2+2 boxes on two faces . <h> Solved State C2 <p> 1 . Base colors are arranged in 2+2 Supersudoku style on all six faces.2 . Circle colors are grouped into four 2+2 boxes on all six faces.3 . Symbols are arranged in 2+2 Supersudoku style on two faces . Symbols are grouped into four 2+2 boxes on two faces . <h> Solved State D2 <h> @ @ @ @ @ @ @ @ @ @ symbols are brought all together either into 2+2 Sudoku or 2+2 Supersudoku positions are not possible . <h> Glossary <p> 2+2 Sudoku : When on a cube face all four elements of the same group show exactly once on every row and column . In addition they appear exactly once in each of the four 2+2 boxes . <p> 2+2 Supersudoku : When on a cube face all four elements of the same group show exactly once on every row and column as well as on both diagonals . In addition they appear exactly once in each of the four 2+2 boxes . <p> 4+4 Sudoku : When on all six cube faces the combination of two group elements show exactly once . In addition , each of the twelve rows ( 4 rows per axis ) , consisting of 16 stickers ( along four faces of the cube ) , must show each combination exactly once as well . 
@@24629527 @4629527/ <h> Maurice Molyneaux <h> NCC-1701-D In-Warp <p> This animation depicts the Galaxy Class U.S.S. Enterprise cruising through space ( at about warp 7 ) . The ship itself does not move in the animation ( otherwise it would not be able to ' loop ' smoothly ) , but the background DOES , with a multi-layered starfield whizzing by at warp velocity , complete with the Next Generation 's customary streaked-star effect . <p> How-to <p> The animation was created using several programs . The Enterprise was a 3-D model constructed in Cyber Sculpt ( it 's a 53K object ) and a static image of it was rendered with CAD-3D . The starfield was created using CAD-3D , Cyber Control , and the Cyber Star accessory ( by Paul Dana ) . Six separate star ' elements ' were created for the effect , and matted together using Cyber Paint ( five elements for the streaked stars , one for the non-streaked ones ) . A stationary background ' plate ' , was ' painted ' using Cyber Paint , and running lights and blue glow around the @ @ @ @ @ @ @ @ @ @ same software . <p> Memory <p> In FACT , The animation has been ' trimmed ' , that is , the top and bottom of each frame was ' cut off ' in order to cut the file down to a size that would work on 1-meg STs ! That 's the reason for the ' widescreen ' format . 
@@24629528 @4629528/ 41265 @qwx241265 <h> Pocket Cube <p> The Pocket Cube ( also known as the ' Mini Cube ' ) , invented by Ern Rubik , is the 2x2x2 equivalent of the Rubik 's Cube . <p> A Pocket Cube consists of 8 unique miniature cubes , also called ' cubies ' : 8 corners , and no other types of cubies . The 2x2x2 cube has a total of 24 stickers . <h> The number of possible positions <p> The number of possible positions of the cube is 8 ! + 37 / 24 = 7 ! + 36 = 3 ' 674 ' 160 3.674 + 106 which is about 3.7 million . <h> The diameter of the Pocket Cube <p> God 's Number for the Pocket Cube is known since 1981 . It requires at least 11 moves in face-turn metric ( ftm ) or 14 moves in quarter-turn metric ( qtm ) to solve any position of the Pocket Cube . A total of 2 ' 644 antipodes ( positions that are maximally far from solved ) exist for FTM and 276 for QTM . A @ @ @ @ @ @ @ @ @ @ , making them antipodes in both , FTM and QTM . Reduced by symmetry there are 77 symmetry distinct antipodes in FTM and and 10 in QTM . For further informations see also the Cube Lovers post God 's Algorithm for the 2x2x2 Pocket Cube and the Mini Cube page by Jaap Scherphuis . <h> Possible orders <h> The maximum permutation order <p> The maximum permutation order of the Pocket Cube is 45 . It can be achieved by twisted corner 3-cycles and 5-cycles : 3 + ( 3 + 5 ) = ( 9 + 5 ) . This results in a Least Common Multiple ( LCM ) of ( 9 + 5 ) = 45 . The order can be reached by the following algorithm found by David Singmaster : B2 R ' F D ' F ( 5 ftm ) . 
@@24629536 @4629536/ <h> Eric Graham <h> The Juggler <p> In November of 1986 , early in the history of the Amiga computer , Commodore released a new demo animation featuring a robot juggling three mirror balls . Juggler+ was a continuously looping sequence of 24 full-color frames , with matching clink+ sound effect , playing at 30 frames per second . <p> This demo really showed off the Amiga 's superior graphical capabilities . The way the 3D environment was accurately and dynamically reflected in the glass balls had n't been seen before . It was one of the earliest full-color 3D raytraced animations rendered and displayed on a personal computer . In fact , I know of no earlier example than this famous demo by Eric Graham . <p> Eric rendered the frames in a raytracer he wrote called ssg+ , a Sculpt precursor . The rendered images were encoded in the Amiga 's HAM display mode and then assembled into a single data file using a lossless delta compression scheme similar to the method that would later be adopted as the standard in the Amiga 's ANIM file format @ @ @ @ @ @ @ @ @ @ . Many people were inspired by Juggler , and by the Amiga animations that followed , to pursue a career in 3D graphics . Nothing like it could have run on any other stock personal computer in 1986 . <p> In fact , Eric recalled recently , the Commodore legal department initially thought it was a hoax , and that I 'd done the animation on a mainframe. + He sent them his renderer so that they could generate and compile the frames themselves . <p> The image data of the original Juggler is stored in a unique file format that was never used for any other animation . In order to preserve The Juggler and make it available to a larger audience , Ernie Wright extracted the image data from the original file and recompiled it into a Windows AVI . 
@@24629539 @4629539/ <h> Rail Cube <p> In it 's initial state the Rail Cube features a single closed rail road track covering all six faces of the cube . The locomotive and five colored waggons ( yellow , red , pink , blue , green ) are located on the center pieces . The purpose of this cube is to explore alternative networks and to connect the vehicles by using intersections , straight and curved track pieces . <p> Full solutionsSingle closed track : Along with the initial state a total of two distinct solutions with a single closed track exist . These solutions are connecting only one of the intersection forks . 
@@24629540 @4629540/ 41265 @qwx241265 <h> Textures <h> Extras <h> Periodic Table Cube <p> This cube displays the chemical elements of the Periodic Table ranging from element number 1 ( H : Hydrogen ) to 118 ( Uuo : Ununoctium ) . Colors represent different categories of elements . The Lanthanides are displayed on the upper face and the Actinides on the lower face . <p> The layout of the Periodic Table Cube was created in 2012 by Werner Kahl and Walter Randelshofer . <p> The periodic table is a tabular display of the chemical elements , organized on a basis of their properties . Elements are presented in increasing atomic number ; while rectangular in general outline , gaps are included in the rows or periods to keep elements with similar properties together , such as the halogens and the noble gases , in columns or groups , forming distinct rectangular areas or blocks . Because the periodic table accurately predicts the properties of various elements and the relations between properties , its use is widespread within chemistry , providing a useful framework for analysing chemical behavior , as well as @ @ @ @ @ @ @ @ @ @ rows or periods and 18 columns or groups . Elements of the same period have the same number of electron shells ; with each group across a period , the elements have one more proton and electron and become less metallic . <p> The current table was almost simultaneously and independently developed in 1869 by Dmitri Mendeleev ( 1834-1907 ) and Lothar Meyer ( 1930-1895 ) . It was used to illustrate periodic trends in the properties of the then-known elements . The layout has been refined and extended as new elements have been discovered and new theoretical models developed to explain chemical behavior . <p> All elements from atomic numbers 1 ( H : Hydrogen ) to 118 ( Uuo : Ununoctium ) have been isolated . Of these , all up to element 94 ( Pu : Plutonium ) exist naturally ; the rest have only been artificially synthesised in laboratories , along with numerous synthetic radionuclides of naturally occurring elements . Production of elements beyond element 118 ( Uuo : Ununoctium ) is being pursued , with the question of how the periodic table may need to @ @ @ @ @ @ @ @ @ @ ongoing debate . <h> Periodic Table of Elements <p> Atomic # <p> Symbol <p> Name <p> Atomic Mass <p> Category <p> 1 <p> H <p> Hydrogen <p> 1.00794 <p> ? Nonmetal <p> 2 <p> He <p> Helium <p> 4.002602 <p> ? Noble gases <p> 3 <p> Li <p> Lithium <p> 6.941 <p> ? Alkali metal <p> 4 <p> Be <p> Beryllium <p> 9.012182 <p> ? Alkaline earth metal <p> 5 <p> B <p> Boron <p> 10.811 <p> ? Metalloid <p> 6 <p> C <p> Carbon <p> 12.0107 <p> ? Nonmetal <p> 7 <p> N <p> Nitrogen <p> 14.0067 <p> ? Nonmetal <p> 8 <p> O <p> Oxygen <p> 15.9994 <p> ? Nonmetal <p> 9 <p> F <p> Fluorine <p> 18.9984032 <p> ? Halogen <p> 10 <p> Ne <p> Neon <p> 20.1797 <p> ? Noble gases <p> 11 <p> Na <p> Sodium <p> 22.98976928 <p> ? Alkali metal <p> 12 <p> Mg <p> Magnesium <p> 24.3050 <p> ? Alkaline earth metal <p> 13 <p> Al <p> Aluminium <p> 26.9815386 <p> ? Other metal <p> 14 <p> Si <p> Silicon <p> 28.0855 <p> ? Metalloid <p> 15 <p> P <p> Phosphorus <p> @ @ @ @ @ @ @ @ @ @ <p> 32.065 <p> ? Nonmetal <p> 17 <p> Cl <p> Chlorine <p> 35.453 <p> ? Halogen <p> 18 <p> Ar <p> Argon <p> 39.948 <p> ? Noble gases <p> 19 <p> K <p> Potassium <p> 39.0983 <p> ? Alkali metal <p> 20 <p> Ca <p> Calcium <p> 40.078 <p> ? Alkaline earth metal <p> 21 <p> Sc <p> Scandium <p> 44.955912 41267 @qwx241267 <p> 22 <p> Ti <p> Titanium <p> 47.867 41267 @qwx241267 <p> 23 <p> V <p> Vanadium <p> 50.9415 41267 @qwx241267 <p> 24 <p> Cr <p> Chromium <p> 51.9961 41267 @qwx241267 <p> 25 <p> Mn <p> Manganese <p> 54.938045 41267 @qwx241267 <p> 26 <p> Fe <p> Iron <p> 55.845 41267 @qwx241267 <p> 27 <p> Co <p> Cobalt <p> 58.933195 41267 @qwx241267 <p> 28 <p> Ni <p> Nickel <p> 58.6934 41267 @qwx241267 <p> 29 <p> Cu <p> Copper <p> 63.546 41267 @qwx241267 <p> 30 <p> Zn <p> Zinc <p> 65.38 41267 @qwx241267 <p> 31 <p> Ga <p> Gallium <p> 69.723 <p> ? Post-transition metal <p> 32 <p> Ge <p> Germanium <p> 72.63 <p> ? Metalloid <p> 33 <p> As <p> Arsenic <p> 74.92160 <p> ? Metalloid <p> 34 <p> @ @ @ @ @ @ @ @ @ @ <p> Br <p> Bromine <p> 79.904 <p> ? Halogen <p> 36 <p> Kr <p> Krypton <p> 83.798 <p> ? Noble gases <p> 37 <p> Rb <p> Rubidium <p> 85.4678 <p> ? Alkali metal <p> 38 <p> Sr <p> Strontium <p> 87.62 <p> ? Alkaline earth metal <p> 39 <p> Y <p> Yttrium <p> 88.90585 41267 @qwx241267 <p> 40 <p> Zr <p> Zirconium <p> 91.224 41267 @qwx241267 <p> 41 <p> Nb <p> Niobium <p> 92.90638 41267 @qwx241267 <p> 42 <p> Mo <p> Molybdenum <p> 95.96 41267 @qwx241267 <p> 43 <p> Tc <p> Technetium <p> 98 41267 @qwx241267 <p> 44 <p> Ru <p> Ruthenium <p> 101.07 41267 @qwx241267 <p> 45 <p> Rh <p> Rhodium <p> 102.90550 41267 @qwx241267 <p> 46 <p> Pd <p> Palladium <p> 106.42 41267 @qwx241267 <p> 47 <p> Ag <p> Silver <p> 107.8682 41267 @qwx241267 <p> 48 <p> Cd <p> Cadmium <p> 112.411 41267 @qwx241267 <p> 49 <p> In <p> Indium <p> 114.818 <p> ? Post-transition metal <p> 50 <p> Sn <p> Tin <p> 118.710 <p> ? Post-transition metal <p> 51 <p> Sb <p> Antimony <p> 121.760 <p> ? Metalloid <p> 52 <p> Te <p> Tellurium <p> 127.60 <p> @ @ @ @ @ @ @ @ @ @ <p> ? Halogen <p> 54 <p> Xe <p> Xenon <p> 131.293 <p> ? Noble gases <p> 55 <p> Cs <p> Caesium <p> 132.9054519 <p> ? Alkali metal <p> 56 <p> Ba <p> Barium <p> 137.33 <p> ? Alkaline earth metal <p> 57 <p> La <p> Lanthanum <p> 138.90547 41266 @qwx241266 <p> 58 <p> Ce <p> Cerium <p> 140.116 41266 @qwx241266 <p> 59 <p> Pr <p> Praseodymium <p> 140.90765 41266 @qwx241266 <p> 60 <p> Nd <p> Neodymium <p> 144.242 41266 @qwx241266 <p> 61 <p> Pm <p> Promethium <p> ( 145 ) 41266 @qwx241266 <p> 62 <p> Sm <p> Samarium <p> 150.36 41266 @qwx241266 <p> 63 <p> Eu <p> Europium <p> 151.964 41266 @qwx241266 <p> 64 <p> Gd <p> Gadolinium <p> 157.25 41266 @qwx241266 <p> 65 <p> Tb <p> Terbium <p> 158.92535 41266 @qwx241266 <p> 66 <p> Dy <p> Dysprosium <p> 162.500 41266 @qwx241266 <p> 67 <p> Ho <p> Holmium <p> 164.93032 41266 @qwx241266 <p> 68 <p> Er <p> Erbium <p> 167.259 41266 @qwx241266 <p> 69 <p> Tm <p> Thulium <p> 168.93421 41266 @qwx241266 <p> 70 <p> Yb <p> Ytterbium <p> 173.054 41266 @qwx241266 <p> 71 <p> Lu <p> Lutetium <p> 174.9668 @ @ @ @ @ @ @ @ @ @ 41267 @qwx241267 <p> 73 <p> Ta <p> Tantalum <p> 180.94788 41267 @qwx241267 <p> 74 <p> W <p> Tungsten <p> 183.84 41267 @qwx241267 <p> 75 <p> Re <p> Rhenium <p> 186.207 41267 @qwx241267 <p> 76 <p> Os <p> Osmium <p> 190.23 41267 @qwx241267 <p> 77 <p> Ir <p> Iridium <p> 192.217 41267 @qwx241267 <p> 78 <p> Pt <p> Platinum <p> 195.084 41267 @qwx241267 <p> 79 <p> Au <p> Gold <p> 196.966569 41267 @qwx241267 <p> 80 <p> Hg <p> Mercury <p> 200.59 41267 @qwx241267 <p> 81 <p> Tl <p> Thallium <p> 204.3833 <p> ? Post-transition metal <p> 82 <p> Pb <p> Lead <p> 207.2 <p> ? Post-transition metal <p> 83 <p> Bi <p> Bismuth <p> 208.98040 <p> ? Post-transition metal <p> 84 <p> Po <p> Polonium <p> ( 209 ) <p> ? Metalloid <p> 85 <p> At <p> Astatine <p> ( 210 ) <p> ? Halogen <p> 86 <p> Rn <p> Radon <p> ( 222 ) <p> ? Noble gases <p> 87 <p> Fr <p> Francium <p> ( 223 ) <p> ? Alkali metal <p> 88 <p> Ra <p> Radium <p> ( 226.03 ) <p> ? Alkaline earth metal <p> 89 <p> @ @ @ @ @ @ @ @ @ @ <p> 90 <p> Th <p> Thorium <p> 232.0381 <p> ? Actinide <p> 91 <p> Pa <p> Protactinium <p> 231.03588 <p> ? Actinide <p> 92 <p> U <p> Uranium <p> 238.02891 <p> ? Actinide <p> 93 <p> Np <p> Neptunium <p> ( 237 ) <p> ? Actinide <p> 94 <p> Pu <p> Plutonium <p> ( 244 ) <p> ? Actinide <p> 95 <p> Am <p> Americium <p> ( 243 ) <p> ? Actinide <p> 96 <p> Cm <p> Curium <p> ( 247 ) <p> ? Actinide <p> 97 <p> Bk <p> Berkelium <p> ( 247 ) <p> ? Actinide <p> 98 <p> Cf <p> Californium <p> ( 251 ) <p> ? Actinide <p> 99 <p> Es <p> Einsteinium <p> ( 252 ) <p> ? Actinide <p> 100 <p> Fm <p> Fermium <p> ( 257 ) <p> ? Actinide <p> 101 <p> Md <p> Mendelevium <p> ( 258 ) <p> ? Actinide <p> 102 <p> No <p> Nobelium <p> ( 259 ) <p> ? Actinide <p> 103 <p> Lr <p> Lawrencium <p> ( 262 ) <p> ? Actinide <p> 104 <p> Rf <p> Rutherfordium <p> ( 267 ) 41267 @qwx241267 <p> 105 @ @ @ @ @ @ @ @ @ @ <p> 106 <p> Sg <p> Seaborgium <p> ( 269 ) 41267 @qwx241267 <p> 107 <p> Bh <p> Bohrium <p> ( 270 ) 41267 @qwx241267 <p> 108 <p> Hs <p> Hassium <p> 269 41267 @qwx241267 <p> 109 <p> Mt <p> Meitnerium <p> ( 278 ) <p> ? unknown <p> 110 <p> Ds <p> Darmstadtium <p> ( 281 ) <p> ? unknown <p> 111 <p> Rg <p> Roentgenium <p> ( 281 ) <p> ? unknown <p> 112 <p> Cn <p> Copernicium <p> ( 285 ) 41267 @qwx241267 <p> 113 <p> Uut <p> Ununtrium <p> ( 286 ) <p> ? unknown <p> 114 <p> Uuq ( Fl ) <p> Ununquadium ( Flerovium ) <p> ( 289 ) <p> ? unknown <p> 115 <p> Uup <p> Ununpentium <p> ( 288 ) <p> ? unknown <p> 116 <p> Uuh ( Lv ) <p> Ununhexium ( Livermorium ) <p> ( 293 ) <p> ? unknown <p> 117 <p> Uus <p> Ununseptium <p> ( 294 ) <p> ? unknown <p> 118 <p> Uuo <p> Ununoctium <p> ( 294 ) <p> ? unknown <h> Notes <p> Ununquadium is the temporary name of a radioactive chemical element with the @ @ @ @ @ @ @ @ @ @ December 1 , 2011 , the name Flerovium ( after Soviet physicist Georgy Flyorov , the founder of the Joint Institute for Nuclear Research in Dubna , Russia , where the element was discovered ) is in the IUPAC name approval process . <p> Ununhexium is the temporary name of a synthetic superheavy element with the temporary symbol Uuh and atomic number 116 . As of December 1 , 2011 , the name Livermorium is in the IUPAC name approval process . 
@@24629543 @4629543/ <h> Electronic Arts <h> HalfBrite Hill ? DeluxePaint Demo Animation <p> Can you see the dancing ghost ? <p> This is one of Kevin Sullivan 's entries to the Badge Killer Demo Contest+ . It is the first known animation that makes use of the Amiga 's Extra-Halfbrite+ mode and makes an excellent test for that capability on Amiga 1000 's . If you do not see a dancing ghost , then your Amiga is one of the early machines that does not have this mode . 
@@24629544 @4629544/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> PDF document with algorithms by AndrT Boulouard Boulouard for displaying the time of the day on the cube . <h> Digital Clock Cube <p> This cube can display the time of the day on a selected face by rotating and twisting some parts of the cube . The time can be displayed in hours and minutes in 5 minute steps . In the initial state the cube shows 0:00 . <p> The layout of the Digital Clock Cube was created in 2009 by AndrT Boulouard and Walter Randelshofer. 
@@24629545 @4629545/ <h> Client property : Quaqua.Table.style <p> The picture below shows the two styles as well a table using a large font . <p> You can specify the desired style by setting the client property Quaqua.Table.style to striped or to plain . If you do n't specify a value , the plain style is used . <p> **26;6586;TOOLONG <p> " Quaqua.Table.style " , " striped " <p> ) ; <h> Avoid Swing 's DefaultTableCellEditor <p> For best results with editable JTable 's you may consider using your own implementation of a TableCellEditor , because the default implementation does only draw a focus ring around editable text fields ( instead of around all editable components ) and it does not properly honour font settings . Please use the following class , as a replacement of the DefaultTableCellEditor . The test package of the Quaqua Look and Feel contains this class as well . 
@@24629546 @4629546/ <h> MultiShow <p> MultiShow is a multipurpose file viewer for audio , video , images and text . It is entirely written in Java and runs on a wide range of operating systems , including Windows , Mac OS X , Solaris and Linux . <p> With MultiShow you can examine a file at multiple levels of abstraction . The high level views show a file as audio , video , image or text . The intermediate level views show the logical structure of the file content . At the lowest level , a binary or textual representation of the file is shown . <h> Supported Data Types <p> MultiShow supports a rich set of data types ( see the Readme for details ) : 
@@24629549 @4629549/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> Get your weather close to you with meteoblue.com , the online weather forecast for any point on land or sea in the world . <h> Meteo Cube <p> The weather forecast can be displayed on a selected face by rotating and twisting some parts of the cube . Weather parameters like temperature minimum and maximum , sky condition , precipitation probability , wind strength and direction can be displayed simultaneously . The cube can also be customized with a location lable of choice . In the initial state the cube shows a weather forecast with temperatures ranging from a minimum of +10 C and a maximum of +20 C , sunny sky , a precipitation probability of 0% and no wind . 
@@24629550 @4629550/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> More information on using the Orbit Cube together with a specifically designed algorithm database can be found in PDF document Orbit Cube . <h> Orbit Cube <p> The 7x7x7 cube features a total of 13 orbits , numbered from ' 00 ' up to ' 12 ' . Orbits from ' 01 ' up to ' 12 ' show 24 locations each for corner , edge and center stickers . These are lettered from ' A ' to ' X ' . Orbit ' 00 ' shows 6 locations only for true centers , lettered with ' A ' , ' E ' , ' I ' , ' M ' , ' Q ' and ' U ' . Thanks to both orbit numbering and sticker lettering , the cube can show how stickers are permuted within their respective orbits and also displays the usually unnoticeable permutations and orientations of centers . <p> Marked stickers allow for analyzing already known or user-specific algorithms and help in understanding the behaviour of permutated pieces within their orbits . <p> The layout @ @ @ @ @ @ @ @ @ @ Boulouard and Walter Randelshofer. 
@@24629551 @4629551/ <h> JHotDraw 7 : Draw Sample Application <p> Draw is an example of a general purpose drawing editor . It provides a basic set of figures which are suited for the creation of simple diagrams and illustrations . <p> Launch JHotDraw Draw : <p> Drawings are stored in a proprietary , but implementation-neutral XML file format . <p> The user interface supports basic editing capabilites of a desktop application : such as loading , saving , printing and exporting of documents ; cut , copy and paste ; undo and redo . <p> Draw can be run as a stand-alone application or as anapplet . Stand alone-applications support three different document interfaces : single document interface ( SDI ) , multi document interface ( MDI ) and the Mac OS X document interface . <p> Figure 1 : Draw running with the Mac OSX document interface ( click on the image to zoom ) : <p> Figure 2 : Draw running with the multi document interface ( click on the image to zoom ) : 
@@24629552 @4629552/ <h> Animated Cubes <h> Breton First Names Cube <h> Settings <h> Status Message <h> Note <p> The status message indicates if a word can be displayed or not on the cube and shows the position number of the first letter of a word if found in the database . Numbers range from 1 up to 9 , beginning at the top left corner and ending at the bottom right corner . <p> The initial cube state is shown instead of the entered word only if the word ca n't be displayed . <p> Due to cube symmetry properties , an ' H ' or an ' N ' on the top left corner can become the same ' H ' and ' N ' on the opposite bottom right corner . In the same way , an ' N ' on the left edge is transformed into the same ' N ' on the opposite right edge . This applies equally to letters ' I ' , ' S ' and ' O ' . <p> The ' N ' on a top left corner can become a ' @ @ @ @ @ @ @ @ @ @ . The same for the ' N ' on the left edge which can be transformed into a ' Z ' on the top and bottom edge . The ' N ' in the center can be used as a ' Z ' as well . 
@@24629555 @4629555/ <h> Extras <h> Links <p> PDF document with algorithms by AndrT Boulouard for displaying dotted characters on the cube . <h> Dot Matrix Cube <p> This cube can display dotted characters , symbols , images and graphs on a 2-dimensional array of dots . When dot patterns are moved to a selected face by rotating and twisting some parts of the cube , a dot matrix display can be built with a resolution of 6 x 6 dots . In the initial state , six different groups of six identical dot patterns each , are displayed on the six cube faces . All six dot patterns of a group have the same orientation . <p> The six different kinds of dot patterns may have zero , one , two , three or four dots . By rotating the one- , two- and three-dot patterns a total of 16 different patterns can be achieved . Theoretically , a cube face can display 236 images , which is equal to 68 ' 719 ' 476 ' 736 or more than 68.7 billion . However , due to mechanical restrictions not all @ @ @ @ @ @ @ @ @ @ of the Dot Matrix Cube was created in 2009 by AndrT Boulouard and Walter Randelshofer. 
@@24629557 @4629557/ 41265 @qwx241265 <h> Professor Cube <p> The Professor 's Cube invented by Udo Krell is the 5x5x5 version of the Rubik 's Cube . It has qualities in common with both the original 3x3x3 Rubik 's Cube and the 4x4x4 Rubik 's Revenge , and knowing how to solve either can help when working on the 5x5x5 cube . <p> A Professor 's Cube consists of 98 unique miniature cubes , also called ' cubies ' : 8 corners , 36 edges , and 54 centers . The six true centers are affixed to the core mechanism . The 5x5x5 cube has a total of 150 stickers . <h> The number of possible positions <p> The number of possible positions of the cube is 8 ! + 37 + 12 ! + 210 + 24 ! 3 / 4 ! 12 2.828 + 1074 which is about 282.8 duodecillion on the long scale or 282.8 tresvigintillion on the short scale . <h> The diameter of the Professor 's Cube <p> In December 30 , 2010 , Jaap Scherphuis roughly defines the lower bound to be at least 50 moves @ @ @ @ @ @ @ @ @ @ bounds for the 5x5x5 exist at all . See also the article Bigger Rubik Cube bound for further informations. 
@@24629559 @4629559/ <h> Notation <h> Superset ENG 2x2 <p> Superset ENG 2x2 is a notation for Rubik 's Cubes with 2 layers , such as the Pocket Cube . The notation is based on the English language . It supports 90 and 180 twists of the faces of the cube . A whole cube can be rotated along its face axes . Permutation and orientation changes of individual cube parts can be specified using permutation cycles . <h> Face twists : R , R ' , R2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? +90 <p> R <p> U <p> F <p> L <p> D <p> B <p> ? ? -90 <p> R ' <p> U ' <p> F ' <p> L ' <p> D ' <p> B ' <p> ? ? +180&amp;deg <p> R2 <p> U2 <p> F2 <p> L2 <p> D2 <p> B2 <p> Clockwise 90 twists of the six faces of the cube are described by the capital letters : R , U , F , L , D and B , ( right , up , front @ @ @ @ @ @ @ @ @ @ , R rotates the right face in clockwise direction as seen from the right face . <p> Counterclockwise twists and rotations are described by appending the inversion operator ' to a move : R ' , U ' , F ' , ... <p> In environments , where the ' character can not be used , the character - can be used as an alternative inversion operator . <p> 180 twists and rotations are described by appending the number 2 to a move : R2 , U2 , F2 , ... <h> Cube rotations : CR , CR ' , CR2 <p> Move <p> Right <p> Up <p> Front <p> Left <p> Down <p> Back <p> ? ? +90 <p> CR <p> CU <p> CF <p> CL <p> CD <p> CB <p> ? ? -90 <p> CR ' <p> CU ' <p> CF ' <p> CL ' <p> CD ' <p> CB ' <p> ? ? +180&amp;deg <p> CR2 <p> CU2 <p> CF2 <p> CL2 <p> CD2 <p> CB2 <p> Rotations of the whole cube are described by prepending the letter C to a face twist . For example , @ @ @ @ @ @ @ @ @ @ from the right face . <h> Grouping <p> Sequences of moves can be grouped using brackets : ( R U F ) . <h> Repetition <p> Moves and groups can be repeated multiple times by appending the number of repetitions to the closing bracket : ( R U F ) 3. 
@@24629560 @4629560/ <h> Java System Info <p> The SysInfo applet displays Java system properties and shows you how much of your system configuration can by read by a Java applet . <p> Try this applet with different browsers and different versions of the same browser . <p> If you see only the title bar and the copyright note then your browser is not compatible enough to display a list box . In this case you should have a look at the java console to see the output from SysInfo. 
@@24629561 @4629561/ 41265 @qwx241265 <h> Textures <h> Extras <h> Color Tangram Cube <p> The cube shows two complementary black and white checkerboards located on the Up and Down faces and triangular shape stickers in the colors green , orange , blue and red on the four remaining faces . All triangular shape stickers on a given face are oriented in the same direction whereas the orientations of stickers located on two adjacent faces differ by 90 . All cube pieces are unique which allows only one solution . Since four centers out of six have to be oriented , the cube shows 256 ( = 44 ) times more positions than a regular cube . <p> The layout of the Color Tangram Cube was created in 2017 by Fabien Fellay . <h> Algorithms <h> 4 Dots <p> Algorithm ( R2 L2 + MD ) 2 ( 6 ltm , 8* ftm , 12* qtm ) <p> Algorithm MR2 MD MR2 MD ' ( 4* ltm , 8* ftm , 12* qtm ) <p> Note On the Color Tangram Cube , the 4 Dots pattern does the same like on a regular @ @ @ @ @ @ @ @ @ @ the Tangram Cube looks indistinguishable to its initial state . <h> 4 Parallel Bars ( 4 Parallel Bars , 2 Chessboards ) <p> Algorithm R2 L2 + F2 B2 ( 4 ltm , 4* ftm , 8* qtm ) <p> Algorithm CD2 + MR2 MF2 ( 2* ltm , 4* ftm , 8* qtm ) <p> Note On the Color Tangram Cube , the 4 Parallel Bars , 2 Chessboards pattern creates a solid face on the top and bottom and 4 Parallel Bars on the remaining faces . 
@@24629563 @4629563/ <h> Version 8.0alpha102011-09-02 <h> Fixes <p> In 8.0alpha9 , Quaqua used the Leopard design for tabbed panes instead of the Lion design . <h> Version 8.0alpha92011-09-01 <h> Fixes <p> JButton <p> Fixes excessive CPU usage when a flashing default button is shown . The CPU usage continued to be high even when the default button was not showing anymore . <p> Fixes NullPointerException in QuaquaButtonUI . <p> Fixes a layout issue with JButton 's on a JToolBar . <h> Version 8.0alpha72011-08-07 <h> Enhancements <p> OS X 10.7 Lion <p> Adds a file-chooser only version of the Quaqua Look and Feel for use on Mac OS X 10.7 Lion . <p> Uses native painters for most components so that they will ( hopefully ) stay in synch with future updates of OS X. <p> Adds support for the " mini " size variant for most controls . <p> Adds a preliminary Quaqua Look and Feel for Lion . Currently , UI delegates for the following components are provided by Quaqua : <p> JButton <p> JCheckBox <p> JColorChooser <p> JComboBox <p> JFileChooser <p> JFormattedTextField <p> JPasswordField <p> JRadioButton <p> JScrollBar <p> @ @ @ @ @ @ @ @ @ @ JToolBar <p> JToggleButton <p> JEditorPane <p> JTree <p> JLabel <p> JList <p> JTable <p> JOptionPane <p> JPanel <p> JViewport <p> JRootPane <p> JButton <p> Adds support for the JButton.segmentPosition property for the following button types : " segmented " , " segmentedRoundRect " , " segmentedGradient " , " square " , " gradient " . <p> JTextComponent <p> The non-blinking caret which is shown in non-editable text components can now be turned off by setting the system property " **27;6614;TOOLONG " to " false " . <h> Fixes <p> JComboBox <p> Issue 98 : Combo box popup did not work with the Leopard design . <p> Issue 142 : Combo box popup did not work with the cross-platform Leopard design . The fix may cause a regression of Issue 132 . But since this regression will likely only happen on unsupported platforms , it is not critical . <p> The ComboBox popup stays now open when a mouse wheel event occurs . <p> Gradients <p> Fixes gradients when the Quartz rendering engine is used . <h> Changes <p> License <p> Some code ( as marked ) has been derived @ @ @ @ @ @ @ @ @ @ term of the GNU 2 license with " Classpath " exception . <h> Version 7.4.22011-07-05 <h> Fixes <p> JButton <p> Issue 135 : Fixes alignment issues with GroupLayout and borderless JButtons . Icons are now treated as part of the visual bounds of a button . <p> Issue 127 : Fixes a layout bug when adding JButtons to a JPanel . Borderless JButtons and JButtons with custom borders can now be made smaller than the minimal button width . <p> JButton ignored the client property **28;6643;TOOLONG , if the font was not also set to a size smaller than 12 . <p> JComboBox <p> Issue 131 : Fixes Z-order issues for JComboBox popups when one of the ancestor windows has alwaysOnTop set to true . Popups appear now on top of the window . <p> JFileChooser <p> Issue 134 : Fixes a NullPointer in the SidebarSelectionListener , when the user clicks on an item in the sidebar which has been removed from the file system . <p> Issue 131 : Hard crashes caused by unstable QuickLook plugins can now be prevented by setting the system property **43;6673;TOOLONG <p> **29;6718;TOOLONG , @ @ @ @ @ @ @ @ @ @ tabs are collapsed into a single JComboBox . <p> JTable <p> Improves visual fidelity of table headers on Snow Leopard . <h> Version 7.4.12011-03-10 <h> Fixes <p> JComboBox <p> Quaqua tries now harder to fit the entire popup window of the combo box into the available screen area , instead of cropping it at the bounds of the screen . <p> PopupFactory <p> Issue 126 : The QuaquaPopupFactory is not installed anymore if the Popup UI is excluded . <p> General <p> Fixes a fatal NullPointerException which sometimes occured after setting the QuaquaLookAndFeel in the UIManager . <h> Version 7.42011-02-27 <h> Enhancements <p> JLabel / JCheckBox <p> Adds support for the client property " Quaqua.Label.style " . <p> BinaryPListParser <p> BinaryPListParser can now parse dates . <p> General <p> Quaqua can now load its JNI-libs when running on OpenJDK 7 . <h> Fixes <p> JButton <p> Issue 122 : Fixes a NullPointerException when switching from Nimbus L&amp;F to Quaqua L&amp;F . <p> JPopupMenu <p> Issue 125 : Mouse wheel events on popup menus do not close the popup menu anymore . <p> JTextComponent <p> Issue 130 : Fixes a ClassCastException @ @ @ @ @ @ @ @ @ @ and keyboard grabbers are now uninstalled when the QuaquaLookAndFeel is uninstalled . <h> Version 7.3.42010-12-28 <p> Fixes <p> JBrowser <p> Fixes potential issues with lead selection handling . <p> JCheckBoxMenuItem , JRadioButtonMenuItem <p> Fixes the location of the check icons when running Quaqua with J2SE 6 on Mac OS X 10.5 . <p> JFileChooser <p> Files with name " desktop.ini " are now treated like hidden files . <p> JTree <p> Fixes potential issues when JTree is not displaying . <p> Batik <p> Removes unused FileCacheSeekableStream class . <p> Potential issues <p> Fixes a number of correctness issues reported by FindBugs . <h> Version 7.3.32010-11-07 <p> Fixes <p> J2SE5 compatibility <p> Fixes J2SE5 incompatibility caused by the LayoutStyle fix made in Quaqua 7.3.2 . To work on J2SE5 the Quaqua look and feel must now be retrieved from QuaquaManager or the class name " **42;6749;TOOLONG " must be used . <p> JTable <p> Fixes focus behavior of JCheckBox editors in a JTable . <p> Fixes flickering when selecting a JCheckBox in a JTable which currently is not focused . <h> Version 7.3.22010-11-04 <p> Fixes <p> JBrowser <p> BasicBrowserUI attempts now @ @ @ @ @ @ @ @ @ @ falling back to loading the icon directly . <p> JRadioButton <p> Fixes issue 107 . On mouse clicks , radio buttons request focus before notifying listeners , so that listeners can request focus for a desired component . On keyboard actions , radio buttons request focus after notifying listeners , so that focus stays on the radio buttons regardless of focus requests performed by the listeners . <p> JRootPane <p> JRootPane is now opaque and uses the same background color as a JPanel . <h> Version 6.2.12009-10-28 <p> OSXApplication could crashed in native code , when it was invoked before the AWT Event Queue was started , or when the application icon was retrieved concurrently . <h> Version 6.22009-10-18 41271 @qwx241271 <p> ImageBevelBorder can render faster , if a color is provided for filling the center area . <p> Improved appearance of popup menus on Snow Leopard . <p> Fixes <p> JTable : Issue 48 : If the system property " **33;6793;TOOLONG " was set to true , rows in disabled tables could be selected . <p> OSXClipboardTransferable returns now an InputStream by default - instead of a byte array @ @ @ @ @ @ @ @ @ @ bottom " style can now also be used on windows which are not textured . <p> Fixes <p> JToolBar with " bottom " style did not repaint when the " active " state of the window changed . <p> JOptionPane on Snow Leopard opened very slowly the first time , because retrieving and scaling the application icon from OS X was done synchronously . JOptionPane opens now immediately " the icon is rendered after a short delay . <p> JComboBox hit a NullPointerException , when it was the only UI-delegate , that was included using method **30;6828;TOOLONG . <h> Version 6.12009-09-27 41271 @qwx241271 <p> JToolBar supports now the client property " Quaqua.ToolBar.style " with the styles " plain " , " title " , " bottom " and " gradient " . <h> Version 6.0.12009-09-15 <p> Fixes <p> Rebuilt Quaqua against J2SE 5 and J2SE 4 classes of Mac OS X 10.5 , so that it works on Mac OS X 10.4 through 10.5 . <p> **27;6860;TOOLONG did not work on Snow Leopard and did not autovalidate . <p> JList : The mouse handler does not fallback to the implementation @ @ @ @ @ @ @ @ @ @ 6 . <h> Version 6.02009-09-13 <p> Text components hide the cursor when a key is pressed . The cursor reappears when the mouse is moved . <h> Version 5.4.12009-07-14 <p> Fixes <p> JComboBox : Popup menu did not have the correct selection color background . The popup menu did only work with the Leopard design . <h> Version 5.42009-07-07 41271 @qwx241271 <p> JPopupMenu , JComboBox , JOptionPane , JSheet : The Command-Period key can now be used to cancel popup menus and dialogs . <p> Fixes <p> JFileChooser : Fixed a null pointer exception in the sidebar of the file chooser for Mac OS X 10.5 Leopard . <p> JComboBox : Fixed keyboard support for the drop down menu . <p> JTree : The root handles are now always visible , so that these nodes can be opened . <h> Version 5.32009-06-21 41271 @qwx241271 <p> JPopupMenu : Added support for client property Quaqua.PopupMenu.alpha <p> JFileChooser : Leopard file chooser shows now the proper icons in the sidebar for the following well known folders : Applications , Desktop , Documents , Downloads , Library , Movies , Music , Picutres , @ @ @ @ @ @ @ @ @ @ to usefull Mac OS X native API functions are now in a package named **26;6889;TOOLONG . <p> Fixes <p> JFileChooser : The approve button was not made the default button when the file chooser was added to a root pane ancestor . The selected file was not always visible the first time the file chooser was opened . <p> JSheet : Transparency works now for J2SE 5 and 6 on Leopard . <h> Version 5.2.22009-04-13 <p> - <p> Fixes <p> JTree : Do n't render icons in first row of a sideBar-tree or sourceList-tree if tree is disabled . <p> JList , issue #65 : Selection of disabled JList must not be changeable by the user . <h> Version 5.2.12009-04-03 <p> - <p> Fixes <p> JTextField , JPasswordField , JFormattedTextField : Background color was never painted , if the field had no border . <h> Version 5.22009-04-01 <p> - 41271 @qwx241271 <p> JBrowser : Double clicking the resize icon sets the column to its preferred width . Revalidate is now called , after a column has been resized to avoid problems with the parent JScrollPane . <p> **30;6917;TOOLONG : On @ @ @ @ @ @ @ @ @ @ now used . <p> Fixes <p> JBrowser : Horizontal scrollable block increment to the right moves the the view to the left by one column . In prior versions , the view was moved by multiple columns to the left , and sometimes it was not moved at all . <h> Version 5.1.12009-03-13 <p> - 41271 @qwx241271 <p> JTree : Use Quaqua 's own handler for mouse events , even when running with J2SE6 . <h> Version 5.12009-03-13 <p> - 41271 @qwx241271 <p> JTree : Can be set to a Sourcelist-style using the client property " sourceList " . <p> Added support for Apple 's J2SE6 virtual machine . <p> JFileChooser : Always resolve aliases . ( Prior versions only resolved aliases when used as an " Open " file dialog . <p> Fixes <p> JTable : Select all had to be performed by pressing Ctrl+A instead of by Meta+A . <p> Native libraries . Fallback to non-native code , if native functions can be loaded but not used for unknown reasons . <p> OSXLeopardFileSystemView . Added $RECYCLE.BIN to list of hidden files . <h> Version 5.0.12008-11-16 <p> - <p> @ @ @ @ @ @ @ @ @ @ arrow keys did n't work . <p> JTable - issue #72 : Rendering of huge tables was slow , when the table used the " striped " style . <h> Version 5.02008-07-22 <p> - 41271 @qwx241271 <p> General : Quaqua can be selectively applied to Apple 's Aqua Look and Feel . <p> FileChooserUI does now fall back to **26;6949;TOOLONG rather than falling back to package private FileView objects of Apple 's Aqua L&amp;F . Added missing translations for ' devices ' and ' places ' in sidebar . Fixed issue #48 ( race condition in the file chooser tree model ) . <p> Files : Added more native methods to Files class . <p> MenuUI : Draw menu selection with blue gradient for Leopard design . <p> ToolBarUI : Paint toolbar on drag window . <p> TreeUI : Selection border did not honor insets of the JTree . <p> Added libquaqua64.jnilib for use with 64-bit J2SE6 on Mac OS X 10.5 . <p> Fixes <p> TableUI : Set selection foreground color to inactive ( =black ) when the current cell is not selected to avoid white text on white @ @ @ @ @ @ @ @ @ @ Java 1.4 . <h> Version 4.4.72008-07-16 <p> - <p> Fixes <p> TableUI : Fixed row and column selection using Meta-Key in Java 1.4 and J2SE5 . Not fixed for J2SE6 ! For J2SE6 a system property " **33;6977;TOOLONG " can be set to " true " , to use the fix for J2SE5 on J2SE6 . This breaks drag and drop functionality and sorting functionality on J2SE6 though . <p> LeopardFileChooserUI - Issue #48 : Fixed a race condition in AliasFileSystemTreeModel , and fixed a problem in SidebarTreeModel which caused the sidebar to fail , when the /Volumes folder contained items which were n't directories . <h> Version 4.4.62008-06-22 <p> - <p> Fixes <p> LeopardFileChooserUI - Issue #47 : AliasFileSystemTreeModel fired events for nodes which were not in the tree anymore . <h> Version 4.4.52008-05-10 <p> - <p> Fixes <p> TableUI : Draw focused selection color , if table is editing a cell . <h> Version 4.4.42008-05-04 <p> - 41271 @qwx241271 <p> Added build target for 64 bit version of Quaqua native library : libquaqua64.jnilib. - This file is not part of the distribution yet , because it needs to @ @ @ @ @ @ @ @ @ @ loads libquaqua64.jnilib when running on 64 bit VM . <p> Fixes <p> FileChooserUI : Squashed NullPointerExceptions which occured when closing the file chooser , when approving the file chooser , and when changing the directory . <h> Version 4.4.22008-04-22 <p> Fixes : <p> CachedPainter14 does not cache large areas anymore . <p> FileChooserUI : SidebarTreeModel fired wrong event to TreeListener . SidebarTreeModel and SidebarTableModel invoked too many workers for reading file icons . The approve button was not always enabled , when the JFileChooser was in directory selection mode . LONG ... threw a NullPointerException , when the font of the list cell renderer was null . <h> Version 4.22008-01-21 <p> PantherLookAndFeel : The proper pinstripes were only drawn , when the current OS was Panther . <p> ButtonUI , ComboBoxUI : Only draw focus border for enabled components . <p> FileChooserUI : Current directory did not always change when setDirectory was invoked on a JFileChooser . Native code crashed when a volume was removed . Sidebar did not update when a volume was inserted or removed . <p> TabbedPaneUI : Reduced top insets of tabs . <p> TableUI : @ @ @ @ @ @ @ @ @ @ once when installing the UI , instead of overwriting these properties every time when the client property " Quaqua.Table.style " is changed . The UIManager-property ' Table.gridColor ' is now light gray instead of white . <p> TigerLookAndFeel and JaguarLookAndFeel now properly render with their background colors , when used on Leopard . <p> QuaquaFileChooserUI : Now only renders folders in the volumes area of the sidebar . Huge Leopard icons in the preview column are now scaled down , if the native code only delivers large versions of the icons . <p> ComponentUI 's did never render with inactive state . <p> QuaquaTabbedPaneUI with wrap tab layout now properly renders the click-through state on inactive windows . <p> QuaquaScrollPaneBorder does not throw anymore a class cast exception , when the viewport view of the JScrollPane is not a JComponent . <h> Version 3.9.52007-10-21 41271 @qwx241271 <p> QuaquaFileChooserUI : Added support for keyboard shortcuts . <p> Fixes <p> QuaquaFileChooserUI : The filechooser did not properly navigate into another directory , if a file was dropped onto it . <h> Version 3.9.12007-07-31 <h> Version 3.92007-07-30 41271 @qwx241271 <p> JBrowser : Added @ @ @ @ @ @ @ @ @ @ for key events which occur on the currently focused column . <p> ComboBoxUI : Added UIManager property " **33;7012;TOOLONG " . Setting this to true causes editable and non-editable combo boxes to have the same preferred height , resulting in better layouts with some layout managers . <p> TextFieldUI : Added client property " Quaqua.TextField.style " with the values " plain " and " search " . Set this property to " search " to get a text field with rounded corners like the Spotlight search field . <p> RootPaneUI : Added UIManager property " **27;7047;TOOLONG " . Setting this to an Integer value greater than 0 causes windows to snap to the edges of each other and to the screen bounds . This property is only in effect for look and feel decorated windows . <p> LayoutStyle : Added support for Java 1.6 javax.swing.LayoutStyle API . <p> Fixes <p> FileChooserUI : File chooser ran into an inconsistent state , when the JFileChooser was constructed with a different directory than the users home directory . <p> MenuUI : Listeners were not properly installed , due to this , accelerators did @ @ @ @ @ @ @ @ @ @ was not scaled properly , when Quaqua ran without native code . <p> RootPaneUI : Resize icon was n't drawn for look and feel decorated JDialog windows ; Look and feel decorated windows could n't always be dragged from a secondary screen to the main screen . <h> Version 3.7.72007-04-16 <p> Fixes <p> QuaquaLayoutStyle returns now clones of Insets object . <h> Version 3.7.62007-04-12 <p> Fixes <p> QuaquaTextFieldBorder takes margin of JTextComponent into account . <h> Version 3.7.52007-04-11 41271 @qwx241271 <p> To resolve issues with selection colors : Added client property **32;7076;TOOLONG . This can be set on a component that is used as a cell renderer . The value is the component that holds the cells , for example a JTable , a JTree or a JList . <p> FileChooserUI : Double clicking the file preview approves now the current selection . <p> Fixes <p> Removed unnecessary console output . <h> Version 3.7.42007-02-24 41271 @qwx241271 <p> ColorChooserUI : The text in the text fields is now selected , when the text fields gain focus . <p> ButtonUI : The UIManager property **32;7110;TOOLONG is now supported on all J2SE versions @ @ @ @ @ @ @ @ @ @ . The default value for this property is false . <p> Fixes <p> ColorChooserUI : Due to rounding errors , some colors , such as RGB 0,170,0 were changed to other values when the color chooser was opened ; The text fields were too short for J2SE 1.3 ; The text fields in the HTMLChooser were updated with integer values instead of with Hex values . <p> OptionPaneUI : Sometimes , when creating the icons for a JOptionPane the following was output on the console , and the application froze : " Please Attach Debugger : No Autorelease pool exists . Press any key to continue " . <h> Version 3.7.32007-02-17 41271 @qwx241271 <p> OptionPaneUI : The UIManager property " **28;7144;TOOLONG " can be set to 0 , to prevent Quaqua from enforcing the width of HTML messages displayed in option panes . The UIManager property " **35;7174;TOOLONG " has now been added , it can be used to use a smaller value than returned by **41;7211;TOOLONG . <p> Fixes <p> ComboBoxUI : Combo box editor had the wrong background color . <p> PopupMenuUI : Mouse released events were just @ @ @ @ @ @ @ @ @ @ ColorChooserUI : The color chooser did not work in security restricted Java web-start applications . <h> Version 3.7.22007-02-10 <p> Fixes <p> FileChooserUI : Improved performance of file sorting . <p> PopupMenuUI : When Quaqua is run in a security restricted environment , it turns off the fix for the mouse release behavior . <h> Version 3.7.12007-02-10 <p> Fixes <p> ListUI : Only repaints changed cells on contentsChanged event . <p> PopupMenuUI : Menu items on a heavyweight popup invoke their actions now on mouse release <p> TabbedPaneUI : Fixed keyboard navigation when vertical tab runs are shown on the left or on the right . Panther style tabbed panes were not always rendered with antialasing . <p> TableUI : Did only repaint the lead selection cell instead of all selected cells when focus changed . <p> Text components : Added client property **30;7254;TOOLONG that allows to disable the popup menu created by the Quaqua look and feel . <p> When run with Java 5 or higher , opaqueness is changed using **27;7286;TOOLONG instead of setting it directly . <p> Fixed RequestFocusEnabled for some components . <p> JSheet sometimes could n't @ @ @ @ @ @ @ @ @ @ for Graphite appearance contributed by Karl von Randow . <p> ComboBoxUI : maximumRowCount was set too high for editable combo boxes . Baseline was not computed correctly when current value was null . Clip bounds were not computed correctly for cell renderer . Issue #13 : ComboBox text was not always legible when used as a table cell renderer . <h> Version 3.6.52006-04-08 <p> TableHeaderUI : Takes now border size into account when deciding whether table headers are empty or not . <p> TableUI : Fixed colors for focused cell . <p> CheckBoxUI : Renders with small icon when the JCheckBox implements TableCellRenderer or TableCellEditor . <h> Version 3.6.42006-04-02 <p> Fixes <p> FileChooserUI : Approve button was not properly enabled/disabled when text in the file name field was entered or removed . <p> ComboBoxUI did not fire an action event when user pressed the enter key in the text field . <h> Version 3.6.32006-03-28 <p> Fixes <p> FileChooserUI : setSelectedFile() did not always set the selected file in the JFileChooser ; A new folder was sometimes created a level higher than the current directory ; Entering a file name which @ @ @ @ @ @ @ @ @ @ selected the folder while typing . <h> Version 3.6.22006-03-15 <h> Version 3.6.12006-03-12 41271 @qwx241271 <p> JNI Library : Libraries which preload the Quaqua JNI library by themselves can set system property " Quaqua.JNI.isPreloaded " to true , to prevent Quaqua from loading the library again . <p> Fixes <p> FileChooserUI : Double clicking a folder does not anymore approve the file chooser when directory selection is enabled . Multiple file selection returns now all selected files . Using a JFileChooser both for loading and saving files made method setSelectedFile not working properly . <p> JNI Library : Universal binary did not work on Intel computers . <p> ColorChooserUI : Color picker can be canceled using the escape key . Color picker is not displayed , when pixels from the screen can not be read due to security restrictions . <p> JSheet does not show a white background anymore when it ca n't set its parent JDialog to translucency due to security restrictions . <h> Version 3.6.0.42006-02-19 41271 @qwx241271 <p> FileChooserUI : Displays a warning dialog when the user attempts to save to a file that already exists . Does not @ @ @ @ @ @ @ @ @ @ Improves performance on slow network volumes , such as WebDAV folders . <p> ColorChooserUI : Has now a color picker tool . This requires Java 1.5 . <p> ButtonUI : Has now two new styles : " placard " and " tableHeader " . <p> TabbedPaneUI : Replaces Apple 's TabbedPaneUI for Panther . The new Panther TabbedPaneUI squeezes tabs and eventually collapses them into a combo box if not enough space is available . The TabbedPaneUI can now be customized by more client properties . <p> TableUI supports now the client property " Table.isFileList " . <p> OptionPaneUI : Displays the application icon in the option pane . This requires Java for Cocoa . <p> JNI library is now a Universal binary supporting PowerPC and Intel Macs . <p> RootPaneUI : Can draw frame decorations in three sizes : standard , small and mini . This is intended for use by floating palettes as well as for use by the ToolBarUI . The title pane of a frame can be placed at the top or at the left of the content pane . <p> ToolBarUI : Uses now a @ @ @ @ @ @ @ @ @ @ with white background when running with Java 1.4.205 on Mac OS X 10.3.5 . To avoid this , JSheet is shown without a translucent background . <p> QuaquaManager : Prints now a warning message , when resource files can not be accessed . <p> JFileChooser did not work on Windows XPJ ( Japanese ) . <h> Version 3.52005-12-11 41271 @qwx241271 <p> QuaquaLookAndFeel : Reduced start up latency . <p> FileChooserUI : reads file icons and file labels asynchronously to improve perceived performance . Uses now the user defined sorting sequence in the sidebar . Uses new imagery for folders and files . <p> **29;7315;TOOLONG does not throw an NPE anymore in method repaintBorder , if the component has no parent . <p> BrowserUI : Tweaked disclosure icons <p> ScrollBarUI : Tweaked vertical topmost position of thumb . Small separated scroll bar buttons were not drawn with the correct state . <p> QuaquaBorderFactory : Due to a bug , the factory never created CachedImageBevelBorder 's . <p> Text component borders and scroll pane borders now properly draw in a lighter color , if the component is disabled . <h> Version 3.4 @ @ @ @ @ @ @ @ @ @ <p> TitledBorder : Draws now in a NSBox like style . <p> ScrollBarUI added . Places scroll arrows according to system preferences . Changes " Click in the scroll bar " behaviour according to system preferences . Supports regular and small size style . <p> ButtonUI provides a new " help " button style . <p> Startup latency has been improved by making more use of UIDefaults.LazyValue . <p> Drawing speed has been improved by introducing a CachedImageBevelBorder . <p> ColorChooserUI : Color Palettes panel added . This UI depends now on more UIManager properties . This allows to better support a " color chooser-only " subset of the Quaqua Look and Feel . <p> FileChooserUI shows a tooltip for a filename , if the filename does not fit into a column . <p> TreeUI : Behaviour and appearance of tree selection changed . This change was inspired by the article " Giving JTree Fitts " by Adam Walker . <p> Fixes <p> ButtonUI : Borders draw now in pressed state only , if the button is pressed and armed . <p> ScrollPaneUI : Does not fill its background anymore @ @ @ @ @ @ @ @ @ @ <p> ButtonUI : " Quaqua.Button.style " = " help " does draw now properly when in pressed but not in armed state . " Quaqua.Button.style " = " push " does not draw the blue flashing default animation , if it is in pressed but not armed state . <p> TitledBorder : Increased insets . <p> Build <p> Three example subsets of the Quaqua Look and Feel are now provided as bundled jar files : **27;7375;TOOLONG , **28;7404;TOOLONG , quaqua-menu-only.jar <h> Version 3.3 - 3.3.12005-08-28 - 2005-09-08 41271 @qwx241271 <p> ColorChooserUI : Added a Color Wheel panel and a Crayons panel . <p> ScrollPaneUI : Ensures that the ScrollBars do n't overlap with the grow-box of the window . <p> JBrowser : Renders now empty columns to the right , when there is room left in the JViewport . <p> QuaquaMetalLookAndFeel : Improved color fidelity . <p> Build / Sourcecode <p> Included source of swing-layout project , in order to ensure that Quaqua can be built from source . <p> Removed dated layout examples . <p> Fixes <p> JPanels inside of JScrollPanes had a white background instead of gray . @ @ @ @ @ @ @ @ @ @ panel were not always updated when the user switched the option " only web-safe colors " on and off . <h> Version 2.8 - 2.8.32005-01-30 - 2005-03-21 <p> Panther design : JFileChooser 's show a preview column for files , when used as an open dialog . This feature is localized for English , German , French and Italian only . The preview column is not shown for other languages . <p> All designs : The sorting order of Files in JFileChooser 's matches now much better the sorting oder of native file dialogs . <p> All designs : File names in JFileChooser 's are abbreviated in the middle ( instead of at the end ) . <p> Added missing binding for TAB key in multiline text fields . <p> Added missing files to quaqua-filechooser.jar . <p> Panther file chooser did not work with Java 1.3 due to missing Locale , when JFileChooser has no parent . <p> Apple 's MRJ for Java 1.4.1 throws a class cast exception when Quaqua tries to draw an image bevel border using a compatible buffered image . To work around this , Quaqua @ @ @ @ @ @ @ @ @ @ JVM . <h> Version 2.72005-01-06 41271 @qwx241271 <p> All Quaqua UI 's that are in use for Java 1.4 are now used for Java 1.3 as well . This results in many improvements when running Java 1.3 . <p> Panther design : Selected items in list , tables and trees are now shown with white text on a darker version of the selection color . This matches much better the Panther design than before . <p> Quaqua uses now its own MenuUI and MenuBarUI , if the screen menu bar is switched off . <p> Quaqua closes now the file LONG ... after it has read it . <h> Version 2.62004-12-22 41271 @qwx241271 <p> Mouse popup triggers ( Ctrl+Click ) does not change the selection of a JTable , JList or JTree . <p> Quaqua uses now the color gray consistently for focus borders in JTable 's , JList 's and JTree 's . <p> Setting the client property " Quaqua.List.style " to " striped " on a JList renders the list with altnernating row colors . This feature is only available when the JList has a vertical layout orientation @ @ @ @ @ @ @ @ @ @ of JTextField , JTextArea and JComboBox . Cursor up moves to the beginning of the text if the cursor is on the first line . Cursor down moves to the end of the text if the cursor is on the last line . Alt+Del deletes to the end of the word or the next word . Alt+Backspace deletes to the beginning of the word or the previous word . ( Improvements apply to Java 1.4 only ) . <p> JFileChooser 's use the last modification time of a directory to decide wether its contents needs to be read again . This should greatly reduce I/O when a file chooser is reused , or when a user browses the same directory multiple times . <h> Version 2.42004-11-05 <p> The user items section of the sidebar of the **26;7434;TOOLONG shows now the same user items as the Finder . ( This works only , if the JNI code of Quaqua is in the library path ) . <p> Bug Fixes <p> Vertical scrollbar in sidebar of the **26;7462;TOOLONG did never appear , even when there was not enough space in the sidebar @ @ @ @ @ @ @ @ @ @ erroneously suported multiple selection of items instead of single selection . <h> Versions 2.3 - 2.3.12004-11-02 41271 @qwx241271 <p> Dropping a file on a JFileChooser selects the file . <p> The computer is now shown as the root of the file system in the folder combo box of JFileChooser 's . In previous versions , the system volume was shown as the root . This fix works only on Mac OS X 10.3 or later . <p> Renamed file libQuaquaFiles.jnilib to libquaqua.jnilib . <p> Selecting an item in the sidebar or in the location combo box using a **26;7518;TOOLONG did not always work . <h> Version 2.22004-10-26 41271 @qwx241271 <p> The release contains now a new file quaqua-filechooser.jar which contains only the Look and Feel classes for the Panther FileChooser UI . This is for use in applets or applications that have size restrictions . <p> Bug Fixes <p> Calling setFileSelected on a JFileChooser did not work properly , when the provided File object had a relative path . <p> When a file is selected , the open button was made enabled , but not made the default button ( @ @ @ @ @ @ @ @ @ @ not approve the current file selection . <h> Version 2.12004-10-17 41271 @qwx241271 <p> The FileChooserUI 's resolve now aliases to files and directories . <p> Determining the name of the system volume in class PantherFileSystemView now uses fallback code , if method File.getCanonicalFile() on a volume fails . In prior versions this caused an InternalError , when attempting to open JFileChooser . <p> Bug Fixes <p> The file name text field in a save file JFileChooser dialog keeps now its contents , when another directory is selected . <h> Versions 2.0beta - 2.0.22004-07-29 - 2004-10-06 41271 @qwx241271 <p> Cleaned up the number of look and feel classes . <p> FileChooserUI with Panther design added . <p> QuaquaFileChooserUI label of approve button changes to " Choose " , when the file chooser is used to choose a directory . <p> Added missing keyboard bindings for QuaquaComboBoxUI . <p> Added functionality to make Quaqua Look and Feel work in a Java 1.3 Applet sandbox . <p> Bug Fixes <p> Fixed bugs in FileChooserUI with Jaguar design . <p> Fixed an **25;7546;TOOLONG in QuaquaFileChooserUI which caused a file chooser to become unresponsive . @ @ @ @ @ @ @ @ @ @ java.awt.Window to always draw in inactive state . <p> The popup of the ComboBoxUI extends its width to accomodate the widest item in the list . <h> Version 1.82004-06-26 41271 @qwx241271 <p> TableUI with support for striped style added . <p> Jaguar design for TabbedPaneUI can be switched off . <p> Bug Fixes <p> Fixed bugs in FileChooserUI . <h> Version 1.72004-05-02 41271 @qwx241271 <p> QuaquaComboBoxUI added . <p> Bug Fixes <p> FileChooserUI creates folders now at the correct location . <p> MenuUI has now corrected popup offsets . <p> When running Java 1.4 or higher , QuaquaComboBoxUI and QuaquaTabbedPaneUI render in click-through state , when their parent Window is not focus owner . <h> Version 1.6 - 1.6.22004-03-14 through 2004-03-30 41271 @qwx241271 <p> File names are displayed in gray , when the JFileChooser is in FILESAVE mode . <p> System property ' **31;7573;TOOLONG ' added . <p> When clicking on a file on a JFileChooser in FILESAVE mode , the file name is now transferred into the filename text field . Thus the JFileChooser behaves now like a native file dialog for Mac OS X 10.3 ( Panther ) @ @ @ @ @ @ @ @ @ @ of Mac OS X 10.2 ( Jaguar ) . <p> Bug Fixes <p> Reimplemented the update strategy for the FileSystemTreeModel . A directory is now updated only when the user clicks at it . Prior to this version , the whole path up to a file was refreshed frequently . This resulted in an unacceptable amount of I/O operations for directories located on remote computers . <p> Class OSXFileView catches NullPointerException 's thrown by AquaFileView , when trying to determine isTraversable on aliases if the the alias is to a network volume that is no longer mounted . <p> Fixed an **27;7606;TOOLONG which occured when a ' default ' file name was supplied to a JFileChooser in FILESAVE mode , and the user aborted the JFileChooser . <p> OSXFileView throws a NullPointerException when method getName(File) is called with a null argument . This prevents the JVM from crashing in native code in the AquaFileView . <p> Reduced the size of quaqua.jar . Some image files in quaqua.jar were unnecessarily big . The classes are now compiled without debugging information . <h> Versions 1.5 - 1.5.12004-02-07 through 2004-02-15 41271 @qwx241271 <p> @ @ @ @ @ @ @ @ @ @ of the FileSystemTreeModel and the OSXFileView . This significantly reduces the slugginess of the QuaquaFileChooserUI . <p> Bug Fixes <p> Fixed a sporadicaly occuring null pointer exception in the QuaquaFileChooserUI . <p> Fixed more sporadicaly occuring null pointer exceptions in the QuaquaFileChooserUI which were caused by class JBrowser using method **32;7635;TOOLONG to determine the mouse location . <h> Version 1.42003-11-13 41271 @qwx241271 <p> Support for tabbed panes with tabs on the left and on the right added . <p> Symbols for menu accelerators using cursor keys added . <p> Pressing the enter or return key in the file name text field of QuaquaFileChooserUI triggers the accept action . 
@@24629564 @4629564/ 41265 @qwx241265 <h> Textures <h> Extras <h> Maze Cube <p> The Maze Cube design by Chris Lohe features a single closed path drawn over the six faces of the cube . <p> In order to make this puzzle a real challenge , all eight corner pieces have been designed to be different from each other so that they do n't  look the same , even after being twisted . However , six out of the twelve edge pieces are fully symmetric and thus look exactly the same after being flipped . <p> Along with the initial state , a total of 346 states have been found that can display single or multiple closed loops on the cube . 
@@24629565 @4629565/ <h> Swiss Calendar Cube <p> This cube is a perpetual calendar . The date of the day can be displayed in 4 languages on a selected cube face . By twisting and rotating it , you can set it to today 's date . <p> Four 3x3 calendars can be displayed on a front face , namely German , Italian , Rumantsch-Grischun and French . For each 3x3 calendar , weekdays are displayed on the top layer , days on the middle layer and months on the bottom layer . Weekdays names are 2-letter abbreviations whereas months names are abbreviated in 3 letters . <p> German , Italian , Rumantsch Grischun and French weekdays <p> Montag , Luned8 , Glindesdi , Lundi ( Monday ) <p> Dienstag , Marted8 , Mardi , Mardi ( Tuesday ) <p> Mittwoch , Mercoled8 , Mesemna , Mercredi ( Wednesday ) <p> Donnerstag , Gioved8 , Gievgia , Jeudi ( Thursday ) <p> Freitag , Venerd8 , Venderdi , Vendredi ( Friday ) <p> Samstag , Sabato , Sonda , Samedi ( Saturday ) <p> Sonntag , Domenica , Dumengia , Dimanche ( @ @ @ @ @ @ @ @ @ @ French months <p> JANuar , GENnaio , SCHaner , JANvier ( January ) <p> FEBruar , FEBbraio , FAVrer , F+Vrier ( February ) <p> MAeRz , MARzo , MARs , MARs ( March ) <p> APRil , APRile , AVRigl , AVRil ( April ) <p> MAI , MAGgio , MATg , MAI ( May ) <p> JUNi , GIUgno , ZERcladur , JUiN ( June ) <p> JULi , LUGlio , FANadur , JUiLlet ( July ) <p> AUGust , AGOsto , AVUst , AOt ( August ) <p> SEPtember , SETtembre , SETtember , SEPtembre ( September ) <p> OKTober , OTTobre , OCTober , OCTobre ( October ) <p> NOVember , NOVembre , NOVember , NOVembre ( November ) <p> DEZember , DICembre , DECember , D+Cembre ( December ) <p> Paired letters and numbers on edge cubes have been selected to insure that 2 consecutive months and 4 consecutive days and weekdays could be displayed on a front face at the same time . <p> The cube can also display the time of the day from 00:00 up to 23:59 in 1 minute steps . @ @ @ @ @ @ @ @ @ @ in 2009 by AndrT Boulouard and Walter Randelshofer. 
@@24629566 @4629566/ 41265 @qwx241265 <h> Textures <h> Extras <h> Respect Cube <p> In the initial state every mini sticker on the edges touches one large sticker on a corner or center with the same color . The goal of the Respect Cube is to arrange the stickers in a way that meets this rule . <p> The layout of the Respect Cube was created in 2014 by Evgeniy Grigoriev . <h> Cube Facts <p> 1 . The Respect Cube only has 4 base colors : orange , red , blue and green.2 . There are 4 sticker sizes : one large size for the corners and centers and 3 smaller sizes for the edges.3 . Each corner and center is colored in one single color.4 . Every edge features 3 mini stickers in different colors.5 . There exist 9 mini stickers for each of the 4 base colors.6 . The colors of the corners and centers are not related to each other . 
@@24629567 @4629567/ <h> OMS video " A new royality free video format <p> by werner on July 7th , 2009 <p> I just found out about Suns Open Media Commons project which appears to be working on a royalty free video format named OMS Video which is solely based on expired patents and intellectual property owned by Sun Microsystems . <p> The format is based on H.261 which hopefully makes it fit well into hardware accelerated CODEC designs of the H.26x family . <p> I hope they can come up with a competitive format . It would be great to have a video format that could be used by everyone legally for free and that would interoperate with commercial video applications such as QuickTime and Final Cut . ( Okay , I am dreaming right now ) . <p> This makes me wonder whether this is already the case with videos encoded as Raw , Motion JPEG and PNG ? Does anybody know whether videos **39;7669;TOOLONG in these formats may be used royalty free with AVI , QuickTime or MPEG-4 containers in the U.S. ? <p> ( As far as I @ @ @ @ @ @ @ @ @ @ software can not be patented under our legislation. ) 
@@24629570 @4629570/ <h> Eric W. Schwartz <h> Snowbound : A Flip The Frog Cartoon <p> Flip and his girlfriend Clarisse Cat in the snow . <p> This animation was created by scanning animation on paper and reconfiguring that animation to MovieSetter form . The intent was to determine the best possible from MovieSetter animations . The main difficulty was the animation 's story was too large for it to fit efficiently in memory ( It would likely require 18 megs or more to hold it in its complete form ) . Also , the animation playback was not as efficient as I had anticipated . Later on , I produced the animation Plight of the Artist with Sabrina ? as a better testament to show the full potential of MovieSetter animation . With luck , I will produce animations to tell the rest of the Flip the Frog SnowBound+ story in the future . 
@@24629574 @4629574/ <h> Andy Warhol Interview <p> " The thing that I like most about doing this kind of art on the Amiga is that it looks like my work . " <p> Long term Amiga users will remember the unveiling of the Commodore A1000 on July 23rd 1985 at the New York Lincoln Centre . As part of the demonstration of the Amigas ability Commodore invited Andy Warhol to create a portrait of Debbie Harry , lead singer of Blondie using Island Graphics Graphicraft . This was accompanied by a full score synthesised by Roger Powell and Mike Boom , author of Musicraft . <p> The interview is scanned from the January/February 1986 of the US magazine and saved in JPEG format . Hopefully the former publishers of Amiga World will not mind reproduction of this piece of Amiga history . 
@@24629575 @4629575/ <h> Rumantsch Grischun Calendar Cube <p> This cube is a perpetual calendar . By twisting and rotating it , you can set it to today 's date . <p> The weekday is located at the upper left . It is split into two parts . <p> The month in the middle row is abbreviated into three characters . <p> The day is shown at the bottom right . <p> Rumantsch Grischun weekdays <p> Glindesdi ( Monday ) <p> Mardi ( Tuesday ) <p> Mesemna ( Wednesday ) <p> Gievgia ( Thursday ) <p> Venderdi ( Friday ) <p> Sonda ( Saturday ) <p> Dumengia ( Sunday ) <p> Rumantsch Grischun months <p> SCHaner ( January ) <p> FAVrer ( February ) <p> MARs ( March ) <p> AVRigl ( April ) <p> MATg ( May ) <p> ZERcladur ( June ) <p> FANadur ( July ) <p> AVUst ( August ) <p> SETtember ( September ) <p> OCTober ( October ) <p> NOVember ( November ) <p> DECember ( December ) <p> Romansh ( also spelled Rumantsch , Romansch or Romanche ) is since 1938 one of the four @ @ @ @ @ @ @ @ @ @ French and Italian . It is one of the Rhaeto-Romance languages , believed to have descended from the Vulgar Latin variety spoken by Roman era occupiers of the region , and , as such , somewhat resembles Italian , French and Spanish . It was standardised in 1982 by Znrich-based linguist Heinrich Schmid and was declared an ' official language ' of the Confederation in 1996 . The standardised language is called ' Rumantsch Grischun ' . <p> The layout of the Rumantsch Grischun calendar cube was created by Walter Randelshofer. 
@@24629576 @4629576/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> PDF document with algorithms by AndrT Boulouard Boulouard for displaying latitudes or longitudes on the cube . <h> Geo Cube <p> This cube can display latitude or longitude on a selected face by rotating and twisting some parts of the cube . The coordinates can be displayed in 5 ? ( arc seconds ) steps . In the initial state the cube shows a longitude of 00&amp;deg 00 ' 00 ? East ( E ) , which is the longitude of the Prime Meridian passing through Greenwich , London UK . <p> The layout of the Geo Cube was created in 2008 by AndrT Boulouard and Walter Randelshofer . <h> Latitude <p> Range from 00 00 ' 00 ? up to 90&amp;deg 00 ' 00 ? in 5 ? ( arc seconds ) steps , North ( N ) or South ( S ) . <p> The length of 1 ( arc degree ) of north-south latitude difference is about 111 kilometres , 60 nautical or 69 statute miles at any latitude . <h> Longitude <p> Range from 00 00 @ @ @ @ @ @ @ @ @ @ in 5 ? ( arc seconds ) steps , East ( E ) or West ( W ) . <p> The length of 1 ( arc degree ) of east-west longitude difference , is the same as the north-south latitude difference only at the terrestrial equator , reducing progressively to zero at the poles . <p> An accuracy of 5 ? ( arc seconds ) eather in latitude or in longitude means a localization accuracy better than 154 m everywhere on the Globe . 
@@24629577 @4629577/ <h> Updated color chooser in JHotDraw , Part II <p> In an earlier post , I discussed the design of - the " Swatches " color chooser of JHotDraw . <p> For JHotDraw 7.5.1 , I have implemented additional panels for the color chooser . We have got now also a color wheel , and a set of color sliders . <p> The color chooser is implemented as an UI delegate of the PaletteLookAndFeel . The panels are located in the colorchooser sub-package . The PaletteLookAndFeel is a special Swing look and feel , which can be used to selectively override the look of individual GUI components . I am using it in the JHotDraw SVG sample application for the toolbar . <p> The color wheel and the gradients in the color sliders are done using ImageProducer classes , which generate new pixels each time a slider has been moved . Reusable classes dealing with colors are located in the color package . 
@@24629581 @4629581/ 41265 @qwx241265 <h> Textures <h> Extras <h> Turtle Cube <p> The surface of the cube shows a total of 24 entangled sea turtles . Each of the four different coloured turtles appears six times . The graphic design is based on the artwork The Sea Turtles by Jos Leys . <p> Due to the application of the image on the 3-D object , only three flippers meet at certain areas of the corners instead of four like in Leys original drawing . <p> The layout of the Turtle Cube is based on artwork by Jos Leys and was created in 2009 by Walter Randelshofer . The original artwork is used with permission . <p> Jos Leys is a Belgian mechanical engineer who creates beautiful images from abstract mathematics using programs such as Ultra Fractal and Povray . He also transformed many of M.C. Escher 's famous plane ( Euclidian ) tilings into hyperbolic ( circle limit ) ones . 
@@24629587 @4629587/ <p> Positions where base colors , circle colors and symbols are brought all together either into 2x2 Sudoku or 2x2 Supersudoku positions are not possible . <p> Glossary <p> 2x2 Sudoku : When on a cube face all four elements of the same group show exactly once on every row and column . In addition they appear exactly once in each of the four 2x2 boxes . <p> 2x2 Supersudoku : When on a cube face all four elements of the same group show exactly once on every row and column as well as on both diagonals . In addition they appear exactly once in each of the four 2x2 boxes . <p> 4x4 Sudoku : When on all six cube faces the combination of two group elements show exactly once . In addition , each of the twelve rows ( 4 rows per axis ) , consisting of 16 stickers ( along four faces of the cube ) , must show each combination exactly once as well . <h> 4x4x4x4x4x4 Sudoku Cube <p> This cube is a Sudoku consisting of up to three levels of ' 2x2 Sudokus @ @ @ @ @ @ @ @ @ @ all faces . Therefore the cube name means ( 4x4x4 ) cubies x 4 base colors x 4 circle colors x 4 symbols . <p> In its initial state the cube faces are divided into grids of four colored 2x2 boxes . The four different circle colors are arranged as 2x2 Sudokus on two faces , The four different symbols are arranged as 2x2 Sudokus on all six faces . They appear on every row and column exactly once and they also appear exactly once in each 2x2 box . <p> The cube can be solved in several 2x2 Sudoku stages with several valid solutions . <p> 1 . Base Colors <p> The cube can be brought into a position where every face shows a different , complete and correct ' 2x2 Sudoku ' . A ' 2x2 Sudoku ' is displayed when all four colors show exactly once on every row and column and exactly once in every 2x2 box . In addition , it becomes a ' 2x2 Supersudoku ' when the four colors are displayed on both diagonals exactly once as well . <p> In the image @ @ @ @ @ @ @ @ @ @ on each of the six faces . <p> Putting it all together one ends up with a cube where each sticker carries markings on three levels : base color , circle color and symbol . <p> The cube can be played with so that any of the three levels can be grouped ( that is identical colors / symbols close to each other ) . It is also possible to bring the cube to states where at least one of the three levels show 2x2 Sudokus on all 6 faces . <p> In the image above base and circle colors are arranged in a 2x2 Supersudoku style on all 6 faces as well as the symbols on the front and back face . Note that the symbols of the right and left face are grouped into 2x2 squares and that each symbol shows exactly twice in each row , column and the two diagonals on the upper and down face . 
@@24629588 @4629588/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> PDF document with algorithms by AndrT Boulouard for displaying the time of the day and Mathematical &amp; Physical Constants on the cube . <h> Digital Clock Cube <p> This cube can display the time of the day on a selected face by rotating and twisting some parts of the cube . The time can be displayed in hours , minutes and seconds in 1 second steps . In the initial state the cube shows 0:00:00 . <p> In addition the cube can also display a list of numbers and constants . <p> The layout of the Digital Clock Cube was created in 2008 by AndrT Boulouard and Walter Randelshofer. 
@@24629589 @4629589/ <h> Digital Clock Cube <p> This cube can display the time of the day on a selected face by rotating and twisting some parts of the cube . The time can be displayed in hours and minutes in 5 minute steps . In the initial state the cube shows 0:00 . <p> Digital Clock <p> Range from 0:00 <p> up to 24:00 <p> in 5 minute steps . <p> Accumulated Time Counter <p> Range from 0:00 <p> up to 39:55 <p> in 5 second or 5 minute steps . <p> The layout of the Digital Clock Cube was created in 2009 by AndrT Boulouard and Walter Randelshofer . <p> PDF document with algorithms by AndrT Boulouard for displaying the time of the day on the cube . 
@@24629590 @4629590/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> PDF document with algorithms by AndrT Boulouard for displaying Mathematical &amp; Physical Constants on the cube . <h> Mathematical &amp; Physical Constants Cube <p> This cube is used to display the value of some selected mathematical and physical constants . It can also be used as a Number Composer , but with some limitations however . <p> The values of a number of usual constants can be displayed on a selected cube face by rotating and twisting some parts of the cube . In the initial state the cube shows the value of p=3.141592 on its front face . <p> The layout of the Mathematical &amp; Physical Constants Cube was created in 2008 by AndrT Boulouard and Walter Randelshofer. 
@@24629591 @4629591/ 41265 @qwx241265 <h> Textures <h> Extras <h> Binary Clock Cube <p> The time of the day can be displayed on a selected face by rotating and twisting some parts of the cube . Time is displayed in hours , minutes and seconds . In the initial state , the cube shows 0:00:00 on its front face . <p> A binary clock is a clock which can display the time of the day in binary values . Each row on the front face of the cube shows a binary-coded number , which represents hours , minutes and seconds on the top , middle and bottom layers , respectively . Binary number ' 0 ' is represented on the cube by a gray dot whereas binary number ' 1 ' is represented by a white dot . Numbers which are integer powers of 2 have been inserted just above the dots to ease reading time . Hours , minutes and seconds can then be calculated simply by adding these numbers located above white dots . <p> The layout of the Binary Clock Cube was created in 2009 by AndrT Boulouard and Walter Randelshofer. 
@@24629592 @4629592/ <h> Jim Sachs <h> Amiga Lagoon <p> Image from ' Brilliance ' , the bitmap graphics editor published by Digital Creations in 1993 . <p> Although marketed as a single package , Brilliance in reality consisted of two separate ( but near identical-looking ) applications . One was a register-based package also named ' Brilliance ' . The other was a true color package called ' TrueBrilliance ' . <p> TrueBrilliance 's HAM/true color performance which was significantly faster than that of Deluxe Paint IV . However , despite being faster and easier to use than Deluxe Paint , Brilliance never achieved the same level of popularity . <p> TrueBrilliance was notable for its ability to edit true 15 and 24-bit color images , even on older Amigas which could only display HAM-6 ( pseudo-12-bit color ) graphics . In such cases , the image was rendered as a HAM display , but all modifications were performed on the underlying true color image buffer . Even when the final image was intended for HAM display , this had the advantage that successive operations did not accumulate HAM artifacts on @ @ @ @ @ @ @ @ @ @ restricted to a single HAM conversion at the end of the process . 
@@24629593 @4629593/ 41265 @qwx241265 <h> Textures <h> Extras <h> Tic-Tac-Toe Cube <p> Tic-tac-toe is a pencil-and-paper game for two players , ' X ' and ' O ' , who take turns marking the spaces in a 3 x 3 grid . The ' X ' player usually goes first . The player who succeeds in placing three respective marks in a horizontal , vertical , or diagonal row wins the game . <p> The layout of the Tic-Tac-Toe Cube was created in 2011 by Walter Randelshofer . The color scheme was created in 2011 by Phlip Boreysha. 
@@24629596 @4629596/ <h> Dave St. Martin <h> Animated Water Bird Demo <p> DRNKBRD by Dave St. Martin is a . SEQ animation of one of those old bobbing drinking bird toys . Watch it bob up and down and ' drink ' water from a glass . You even get ripples in the water ! <p> This was my first major undertaking using CAD-3D , CYBER CONTROL , and CYBER PAINT from Antic Software . I really must put in a ' plug ' for their outstanding software ? the potential this stuff presents is limitless . <p> The original idea for the water bird demo came from a recently released videotape entitled ' The Future of Computer Animation ' which I picked up at my local video rental store . I presented the videotape at a ST Atari League of San Antonio ( SALSA ) meeting and remarked that the effects shown on the videotape were possible with the CYBER products . The disbelieving looks I got motivated me to take this concept as seen on the videotape and reproduce it using the ST . <p> Ultimately I plan to @ @ @ @ @ @ @ @ @ @ couple drops of water from the beak accompanied by the ripple effect in the water glass . The ripples in the animation were added following the basic animation through the use of CYBER PAINT . 
@@24629600 @4629600/ 41265 @qwx241265 <h> Textures <h> Extras <h> Four Color Cube ' Bauer ' <p> Each face of the cube is split along a diagonal into two triangles which show two different colors . Triangles that share a same cube edge are of the same color . One interesting pattern that can be displayed on the cube is the Superflip which may only twist two centers out of six and keeps all edges unchanged . <p> According to this post at the TwistyPuzzles.com forum , the layout of the Four Color Cube was eventually created first in summer 2001 by jhe70+ a.k.a . Joel . 
@@24629601 @4629601/ 41265 @qwx241265 <h> V-Cube 7 <p> The V-Cube 7 , invented by Panagiotis Verdes , is the 7x7x7 version of the Rubik 's Cube . Like the 5x5x5 Professor 's Cube , the V-Cube 7 has both fixed and movable center facets . <p> A V-Cube 7 consists of 218 unique miniature cubes , also called ' cubies ' : 8 corners , 60 edges , and 150 centers . The six centers are affixed to the core mechanism . The 7x7x7 cube has a total of 294 stickers . <h> The number of possible positions <p> The number of possible positions of the cube is 8 ! + 37 + 12 ! + 210 24 ! 8 / 4 ! 36 1.950 + 10160 which is about 19.5 sexvigintillion or 19.5 sexvigintilliard on the long scale or 19.5 duoquinquagintillion on the short scale . 
@@24629603 @4629603/ 41265 @qwx241265 <h> Textures <h> Extras <h> LSD Cube ( RGB Gradient Cube ) <p> Cube stickers show gradients of the three base colors : red , green and blue . The red color origin is located at corner ulb ( up , left , back ) , while green is at corner rbd ( right , back , down ) and blue at corner fdl ( front , down , left ) . Base color values decrease monotonically from one origin to the other , which creates new colors . The brightest color is yellow , located at corner urf ( up , right , front ) , while the darkest is black , located at corner dbl ( down , back , left ) . 
@@24629604 @4629604/ 41265 @qwx241265 <h> Textures <h> Extras <h> SubCube <p> The SubCube is a design variation of the Rubik 's Cube which features orientation-free parts but also maintains a maximum of possible positions . All side parts , edges and corners are invariant to orientation changes and no longer have to be oriented . However all cube parts are unique which allows only one valid solution . <p> There are 8 ! + 12 ! or approximately 20 thousand billion permutations ( 2 million times less than a regular cube ) , but only 1 orientation . <p> The SubCube was designed in 2010 by Tierno Guzman and introduced in the TwistyPuzzles.com forum . 
@@24629605 @4629605/ <h> Atari Corp . <h> Waterfall ? NEOchrome Demo Image <p> One of the most famous pictures ever to grace the ST was in fact an example picture from NEOchrome . The breathtaking waterfall with animated water flowing down was achieved with NEOchrome 's colour cycling feature , it was and remains one of the most recognisable pictures ever on the ST . <p> The author of NEOchrome , David Staugas , was a system programmer at Atari and was co-author of the Atari ST 's operating system . The knowledge acquired from this obviously paid off since he delivered a fully featured art package in just 40K. 
@@24629608 @4629608/ 41265 @qwx241265 <h> Textures <h> Extras <h> Sports Balls Cube <p> Compared to a regular Rubik 's Cube , the Sports Balls Cube displays 6 images of balls instead of colored faces . A tennis ball is on the top , a basketball on the right , a football or soccer ball on the front , a billiard ball on the bottom , a baseball on the left and a golf ball on the back . <p> The layout of the Sports Balls Cube was created in 2011 by Alexey Gurov. 
@@24629611 @4629611/ <h> SEQConverter <p> SEQConverter converts Atari CyberPaint Sequence animations into one of the following formats : <p> Amiga IFF ANIM video <p> Microsoft AVI video <p> Apple QuickTime video <p> Amiga IFF ILBM image sequence <p> PNG image sequence <p> SEQ files contain videos with a size of 320 x 200 pixels , 4 bits per pixel and a fixed frame rate . It can reproduce 16 colors from a palette of 512 colors . The video frames are compressed with a lossless delta-compression method . <p> The compression ratio of converted videos is currently best with Amiga IFF ANIM files and variable frame rate.The resulting files are comparable in size with SEQ . AVI files QuickTime files are currently about twice the size of an SEQ file . The current version of SEQConverter uses the following settings for exported videos : 
@@24629620 @4629620/ <p> Each task figure has a name field , a duration field and a start time field . One can enter the values for the name field and the duration field . Specifying a duration of 0 denotes a milestone task . Milestones usually have names like ' Start ' or ' End ' . The value of the start time field can not be entered " is computed dynamically by the Figure objects . Each node figure has an arrow at one end . The arrow points to the dependent task . <p> The figures are ' aware ' of their semantics . Connecting a task figure with another task figure establishes a dependency between the two figure objects . Causing all dependent task figure to update their duration fields . Also , the figures prevent the creation of cycles in the graph , by only offering connectors on figures when this does not cause a cycle in the graph . 
@@24629623 @4629623/ <h> Commodore <h> Saturn <p> ProPaint demo image . <p> ProPaint , developed by Island Graphics Corporation and marketed by Commodore , was the companion to Graphicraft , the first paint program available for the Amiga . While Graphicraft was developed for the home market , ProPaint was an advanced graphics program for the professional artist . <p> An early alpha version of ProPaint was demonstrated at the Commodore press event on July 23 , 1985 in New York . The paint program showed the superior graphics capabilities of the new Amiga 1000. 
@@24629624 @4629624/ <h> JScrollBar <h> Client properties : <p> Property <p> Type <p> Notes <p> JComponent <p> . sizeVariant <p> java.lang.String <p> Values : " regular " , " small " <p> Quaqua.ScrollBar . placeButtonsTogether <p> java.lang.Boolean <p> Use this property for debugging purposes only . <h> General <p> QuaquaScrollBarUI 's look and behave differently depending on the " Appearance " settings made by the user in the Mac OS X " System Preferences " application . These settings influence the location of the arrow buttons and the behavior of clicks in the scroll bar track . <p> Quaqua scroll bars support the " regular " and the " small " size variant . The size variant can be specified programmaticaly by setting the client property JComponent.sizeVariant , or by setting the font of the scroll bar to either Lucida Grande 13 ( for " regular " ) or Lucida Grande 11 ( for " small " ) . <p> myScrollBar.setFont ( new Font ( " Lucida Grande " , Font.PLAIN , 11 ) ; <h> Client property : **37;7710;TOOLONG <p> For debugging purposes the scroll bars also allow to explicitly @ @ @ @ @ @ @ @ @ @ . 
@@24629628 @4629628/ <h> Client property : JComponent.sizeVariant <h> Client property : **29;7749;TOOLONG <p> This client property can be used to change the visual margin of the JButton . For details see layout . <h> Client property : Quaqua.Button.style <p> The pictures below shows the effect of the styles . The styles are available for the regular System Font of Mac OS X ( Lucida Grande 13 ) and the Small System Font ( Lucida Grande 11 ) . The styles work also with other font sizes , but then , the results are n't necessarily optimal . <p> The following code snippet shows how to use the client property Quaqua.Button.style : 
@@24629633 @4629633/ <h> Aristides Castiglioni <h> An Anime Girl Transforms <p> This is my second entry to the AnimatED Contest+ , hope you all like it . <p> Once again this animation was created with DPaint and of course with AnimatED , an Amiga 1200 with HD and 2 megs of memory only was used . Well , for all my anims I 've used 2 megs only , and then all the pieces are joined at the house of a friend ( thanks Rene ) . Funny , once that the anim is joined the only one who ca n't see it is me. 
@@24629634 @4629634/ 41265 @qwx241265 <h> Textures <h> Extras <h> Links <p> PDF document with algorithms by AndrT Boulouard for displaying the time of the day on the cube . <h> Analog Clock Cube <p> The time of the day can be displayed on a selected face by rotating and twisting some parts of the cube . Time is displayed in hours and minutes . In the initial state , the cube shows 12:00 , where hour and minute hands are all lined up with number ' 12 ' . <p> However , as there are only 6 center cubies available , not all usual hand combinations , found on a regular analog clock , can be displayed on the cube . <p> Clock hands are split into two parts , one part on centers and the other on edges and corners . For displaying time , the part on a center should be in line with another part on an edge or corner . <p> Time can be displayed either for a 12- or a 24-hour period . In the latter case , stickers showing ' 6 AM ' or ' @ @ @ @ @ @ @ @ @ @ ' 6 ' . <p> The layout of the Analog Clock Cube was created in 2008 by AndrT Boulouard and Walter Randelshofer. 
@@24629636 @4629636/ <p> All models used processors of the Motorola 68000 family with a 32-bit address space . The operating system was graphical and supported a single task at a time . The last versions supported preemptive multitasking . <p> The ST models had a palette of 512 colors , the later STE and TT models had 4096 colors . The screen resolution ranged from 64,000 to 1,2 Mio pixels . Sound could be played using a 3-voice programmable sound generator . <p> The most used graphics mode for animations was 320 x 200 pixels with 16 indexed colors . <p> The . SEQ ( Cyber Paint ) was a popular file format for animations . Games often used proprietary formats for their animations . 
@@24629639 @4629639/ <h> Maze Cube <p> The Maze Cube design by Chris Lohe features a single closed path drawn over the six faces of the cube . <p> In order to make this puzzle a real challenge , all eight corner pieces have been designed to be different from each other so that they do n't  look the same , even after being twisted . However , six out of the twelve edge pieces are fully symmetric and thus look exactly the same after being flipped . <p> Along with the initial state , a total of 346 states have been found that can display single or multiple closed loops on the cube . 
@@24629640 @4629640/ <h> Digital Clock Cube <p> This cube can display the time of the day on a selected face by rotating and twisting some parts of the cube . The time can be displayed in hours , minutes and seconds in 1 second steps . In the initial state the cube shows 0:00:00 . <p> In addition the cube can also display a list of numbers and constants . <p> Digital Clock <p> Range from 0:00:00 <p> up to 24:00:00 <p> in 1 second steps . <p> Accumulated Time Counter <p> Range from 0:00:00 <p> up to 59:59:59 <p> in 1 second steps . <p> Mathematical Constants <p> 3.1415 ( 3.1416 ) Archimedes ' constant Pi ( p ) <p> 1.4142 Pythagoras ' constant ( v2 ) <p> 2.23606 Pythagorian constant ( v5 ) <p> 3.1622 Pythagorian constant ( v10 ) <p> 1.3247 Plastic constant ( ? ) <p> 2.5029 Feigenbaum constant ( a ) <p> 0.2614 Meissel-Mertens constant ( M1 ) <p> 1.1319 Viswanath 's constant ( K ) <p> 1.4513 Ramanujan-Soldner constant ( ) <p> 0.2801 Bernstein 's constant ( ) <p> 0.3036 Gauss-Kuzmin-Wirsing constant ( ? ) @ @ @ @ @ @ @ @ @ @ 's constant ( ? ( 3 ) ) <p> 1.30637 Mills ' constant ( ? ) <p> 2.5849 Sierpinski 's constant ( K ) <p> 2.2955 Parabolic constant ( P2 ) <p> 1.0836 Legendre 's constant ( B'L ) <p> 1.45607 Backhouse 's constant <p> 1.18656 Khinchin-LTvy constant <p> 3.2758 LTvy 's constant <p> Physical Constants <p> 1.0545 + 10-34 J + s Planck or Dirac constant ( ? ) <p> 2.17645 + 10-8 kg Planck mass ( mp ) <p> 5.3912 + 10-44 s Planck time ( tp ) <p> 2.5812 + 104 O von Klitzing constant ( RK ) <p> 1.3806 + 10-23 J + K-1 Boltzmann constant ( k or kB ) <p> 5.0507 + 10-27 J + T-1 nuclear magneton <p> 0.52917 + 10-10 m Bohr radius <p> 1.16639 + 10-5 GeV-2 Fermi coupling constant <p> 1.1910 + 10-16 W + m2 sr-1 First radiation constant <p> 22.4139 + 10-3 m3 + mol-1 molar volume of an ideal gas <p> 0.2221 weak mixing angle <p> Some remarkable numbers <p> 959959959 <p> 656656656 <p> 1.1640 ( 6/5 ) 5/6 <p> 1.1111 10/9 <p> 1.1515 7/6 <p> 0.3333 @ @ @ @ @ @ @ @ @ @ <p> The layout of the Digital Clock Cube was created in 2008 by AndrT Boulouard and Walter Randelshofer . <p> PDF document with algorithms by AndrT Boulouard for displaying the time of the day and Mathematical &amp; Physical Constants on the cube . 
@@24629641 @4629641/ <h> Arc of Motion ? Example Animation <p> Arcs are the plotting of the slightly circular path followed by most living creatures ' movements . In an animation , they create pleasing designs in a two dimensional path of action , and give fluidity to the movements . Arcs usually refer to the action of an arm or hand . <p> ( Excerpt from The Disney Animation Studio User 's Guide ) <p> Demo from Disney Presents ... The Animation Studio+ for Commodore Amiga Computers and 
@@24629647 @4629647/ <h> Visualizing large tree structures <p> This weekend and the last one I experimented with visualizations of large tree structures ( 200000 nodes and more ) . I tried out 5 different visualization forms : <p> Hyperbolic Tree " Projects a tree on a curved surface . <p> Sunburst Tree " Projects a tree on a disk . <p> Icicle Tree " A linear version of the Sunburst tree . <p> Sunray Tree " A variation of Sunburst which puts leaf nodes on rays . <p> Iceray Tree " The linear version of Sunray . <p> Check them out here . So far I am not happy with the results . All these visualizations do n't  work well , if a single tree node has more than some hundred children. - I am putting this project on ice for now , and continue when I get some better ideas 
@@24629653 @4629653/ <h> Eric W. Schwartz <h> The Swiss Army F-16 in Combat <p> This aerotoon featuring nifty gadgets to foil his enemies .. <p> One of my early Aerotoons , and one of the first animation to break the one megabyte barrier ( a challenge because at the time I created them one meg was all I had ! ) Though it 's getting very old now , I consider Swiss Army F-16+ one of my triumphs , probably the funniest animation I did in 1989 . ( IMHO ) 
@@24629657 @4629657/ <h> Antic Software <h> Lamp <p> LAMP is a 3D demo of a lamp looking around . This version has more frames then the very similar Lamp 2 demo . <p> Antic Software published a variety of related Cyber-products to extend the functionality of ' Cyber Studio CAD-3D ' . The texturing extension ' Cyber Texture ' was an unusual program by David Ramsden that used a picture file as a basis for creating a 3D object that looked like the picture , often warped or distorted into some non-flat form . The technique used was a peculiarly brute-force imitation of what is known in computer graphics as texture mapping+. 
@@24629662 @4629662/ <h> Maurice Molyneaux <h> Buzzing Bee ? Cartoon Design Disk Demo Animation <p> A looped animation of a bee with scripted head movements . <p> The ' Cartoon Design Disk ' for the ' CAD-3D 2.0 ( Cyber Studio ) ' modeling and rendering program focused on animation techniques for 3D cartoon characters . It was shipped with three human characters , a humanoid rabbit , three different cartoon insects ( reminiscent of the bee in Lucasfilm 's seminal computer animated short film Andre and Wally Bee ) and a whimsical automaton called Autogyro . Cyber Control scripts were included for scripting each character , along with extensive documentation . The scripts would create the animation from there . This allowed to create for example walking 3D human characters with scripted head movments and facial expressions . 
@@24629667 @4629667/ <h> Atari Corp . <h> Waterfall with NEOchrome GUI <p> One of the most famous pictures ever to grace the ST was in fact an example picture from NEOchrome . The breathtaking waterfall with animated water flowing down was achieved with NEOchrome 's colour cycling feature , it was and remains one of the most recognisable pictures ever on the ST . <p> The author of NEOchrome , David Staugas , was a system programmer at Atari and was co-author of the Atari ST 's operating system . The knowledge acquired from this obviously paid off since he delivered a fully featured art package in just 40K . <p> The feature set and interface of the NEOchrome paint program was defined by Jerome Domurat . Note that many of the icons are on a 45 degree angle . This revealed less distortion when switching resolutions . Jerome is also known for the creation of system icons , cursors , typefaces and human interface issues for the Atari ST computer . 
@@24629677 @4629677/ 41265 @qwx241265 <h> Turtle Cube <p> The surface of the cube shows a total of 24 entangled sea turtles . Each of the four different coloured turtles appears six times . The graphic design is based on the artwork The Sea Turtles by Jos Leys . <p> Due to the application of the image on the 3-D object , only three flippers meet at certain areas of the corners instead of four like in Leys original drawing . 
@@24629687 @4629687/ 41265 @qwx241265 <h> Textures <h> Extras <h> Sports Balls Cube <p> Compared to a regular Pocket Cube , the Sports Balls Cube displays 6 images of balls instead of colored faces . A tennis ball is on the top , a basketball on the right , a football or soccer ball on the front , a billiard ball on the bottom , a baseball on the left and a golf ball on the back . <p> The layout of the Sports Balls Cube was created in 2011 by Alexey Gurov. 
@@24629689 @4629689/ <h> Basque Calendar Cube <p> This cube is a perpetual calendar . By twisting and rotating it , you can set it to today 's date . <p> The month at the upper row is abbreviated into three characters . <p> The day is shown in the middle row . <p> The weekday is located at the bottom on the left . <p> In it 's initial state the cube is displaying Urtarrilaren 1an Astelehenarekin ( Monday , January 1st ) . <p> Basque ( Batua ) months <p> URTarrila ( January , New Year month or black month ) <p> OTSaila ( February , bull or wolf month ) <p> MARtxoa ( March , tepid month ) <p> APIrila ( April , weeding or fasting-bread month ) <p> MAIatza ( May , leaf month ) <p> EKAina ( June , seed-time , bean or barley month ) <p> UZTaila ( July , harvest or wheat month ) <p> ABUztua ( August , month of drought ) <p> IRAila ( September , fern or ear month ) <p> URRia ( October , gathering month ) <p> AZAroa ( November @ @ @ @ @ @ @ @ @ @ December , binding up of vegetation ) <p> Basque ( Batua ) weekdays <p> Astelehena ( Monday ) <p> Asteartea ( Tuesday ) <p> Asteazkena ( Wednesday ) <p> Osteguna ( Thursday ) <p> Ostirala ( Friday ) <p> Larunbata ( Saturday ) <p> Igandea ( Sunday ) <p> Basque ( Euskara ) is spoken in the Basque Country , a region spanning an area in north-eastern Spain and south-western France . A standardised form of the Basque language called ' Batua ' was created at the end of the 20th century . Apart from this standardised version , there are six main Basque dialects , comprising ' Bizkaian ' , ' Gipuzkoan ' , and ' Upper Navarrese ' ( in Spain ) , and ' Lower Navarrese ' , ' Lapurdian ' , and ' Zuberoan ' ( in France ) . However , the dialect boundaries are not congruent with political boundaries . Though geographically surrounded by Indo-European languages , Basque is classified as a language isolate . It is the last remaining pre-Indo-European language in Western Europe . <p> The layout of the Basque calendar cube @ @ @ @ @ @ @ @ @ @ and AndrT Boulouard. 
@@24629693 @4629693/ <h> Tangram Cube <p> The cube shows two complementary black and white checkerboards located on the Up and Down faces and triangular shape stickers on the four remaining faces . All triangular shape stickers on a given face are oriented in the same direction whereas the orientations of stickers located on two adjacent faces differ by 90 . All cube pieces are unique which allows only one solution . Since four centers out of six have to be oriented , the cube shows 128 ( = 44/2 ) times more positions than a regular cube . <p> The layout of the Tangram Cube was created in 2010 by Ortwin Schenker. 
@@24629700 @4629700/ <h> Ukrainian Calendar Cube <p> This cube is a perpetual calendar . By twisting and rotating it , you can set it to today 's date . <p> The weekday is located at the upper row on the left or in the middle . <p> The day is shown in the middle row on the right or left . <p> The month at the bottom is abbreviated into three characters . <p> Ukrainian weekdays <p> ? o ? e ? i ? o ? ( Monday ) <p> ? i ? ? opo ? ( Tuesday ) <p> Cepe ? a ( Wednesday ) <p> ? e ? ? ep ( Thursday ) <p> ? ' ? ? ? ? ? ? ( Friday ) <p> Cy ? o ? a ( Saturday ) <p> He ? i ? ? ( Sunday ) <p> Ukrainian months <p> CI ? e ? ? ( January ) <p> ? ? T ? ? ( February ) <p> ? EPe ? e ? ? ( March ) <p> ? BI ? e ? ? ( April ) <p> TPA ? e ? @ @ @ @ @ @ @ @ @ @ ? ( June ) <p> ? ? ? e ? ? ( July ) <p> CEP ? e ? ? ( August ) <p> BEPe ? e ? ? ( September ) <p> ? OB ? e ? ? ( October ) <p> ? ? C ? o ? a ? ( November ) <p> ? P ? ? e ? ? ( December ) <p> Ukrainian is a language of the East Slavic subgroup of the Slavic languages . It is the official state language of Ukraine . Written Ukrainian uses a variant of the Cyrillic alphabet . The language shares some vocabulary with the languages of the neighboring Slavic nations , most notably with Polish , Slovak in the West and Belarusan , Russian in the North and the East . <p> The layout of the Ukrainian calendar cube was created in 2009 by AndrT Boulouard and Walter Randelshofer. 
@@24629701 @4629701/ <h> Expert 's Cube <p> The cube shows triangular shaped stickers on all faces . In the inital state , all stickers on a given face are oriented in the same direction . Although only black and white colors are used , all corners are unique . This allows only one solution . The number of possible positions of the Expert 's Cube is the same as of a regular Pocket Cube : 3 ' 674 ' 160 . <p> The cube layout is related to the Beginner 's Cube layout , but with different sticker orientations. 
@@24629702 @4629702/ 41265 @qwx241265 <p> Activate JavaScript to see the Virtual Cubes ! <h> Breton First Names Cube <p> Many Breton First Names can be displayed on a selected Cube face by rotating and twisting some parts of the Cube . <p> There are many Breton First Names that are also Town Names in Brittany , see the list below . So , by learning some Breton First Names , you can also learn many Breton Town Names . This would make a ' Tour of Brittany ' more enjoyable ... The following example shows the initial state of the cube , where ' TRO BREIZH ' is displayed on the front face . ' TRO ' means ' Tour ' and ' BREIZH ' means ' Brittany ' , so ' TRO BREIZH ' is simply a ' Tour of Brittany ' . 
@@24629710 @4629710/ 41265 @qwx241265 <h> Textures <h> Extras <h> Tangram Cube <p> The cube shows two complementary black and white checkerboards located on the Up and Down faces and triangular shape stickers on the four remaining faces . All triangular shape stickers on a given face are oriented in the same direction whereas the orientations of stickers located on two adjacent faces differ by 90 . <p> The layout of the Tangram Cube was created in 2010 by Ortwin Schenker. 
@@24629712 @4629712/ <h> Eric W. Schwartz <h> Amiga Hop ? AGA Version <p> The Amiga hops ! <p> This small looping animation was my first serious attempt at complex animation in Lightwave 3D+ . Contrary to what many of you may think , I never used the ' bones ' feature . For you statistic freaks , It was rendered on an Amiga 1200 with a 28 Mhz 68030 running Lightwave 3.5+ . All the objects and bitmap textures were created by myself . It was rendered at 368 x 240 with shadow-mapping and medium anti-aliasing with motion blur . For those of you interested in animation techniques , this one shows them off rather well ( anticipation , squash and stretch , and overlapping action with follow through ) . 
@@24629718 @4629718/ 41265 @qwx241265 <h> Textures <h> Extras <h> Mirror Maze Cube <p> The Mirror Maze Cube features a single closed path drawn over the six faces of the cube . The path goes twice through each sticker . The faces are divided into two sets of identical patterns . Patterns on opposite faces are the same . Note that the stickers are all identical and the corners look the same as well . <p> No matter how scrambled this cube is , one or more closed paths always exist . <p> The layout of the Mirror Maze Cube was created in 2011 by Philip Boreysha. 
@@24629747 @4629747/ <h> TitledBorder <p> Use a **31;7780;TOOLONG to draw a group box ( Cocoa NSBox ) using the Quaqua Look and Feel . Group boxes have a rounded border and a content area that is slightly darker than the surrounding area . <p> You can create titled borders with a title text or without one : <p> **26;7813;TOOLONG <p> new TitledBorder ( " Thumbnails " ) <p> ) ; <p> sizePanel.setBorder ( <p> new TitledBorder ( ( String ) null ) <p> ) ; <h> Know Issues with javax.swing.Box <p> Please note that a TitledBorder does not work properly with a javax.swing.Box component . This is because a Box component does not have an UI delegate at all . Thus its appearance is not fully in control by the Look and Feel in use . 
@@24629748 @4629748/ <h> Client property : **29;7841;TOOLONG <p> This client property can be used to change the visual margin of the JButton . For details see layout . <h> Client property : Quaqua.Button.style <p> The picture below shows the effect of the styles . The styles are available for the regular System Font of Mac OS X ( Lucida Grande 13 ) and the Small System Font ( Lucida Grande 11 ) . The styles work also with other font sizes , but then , the results are n't necessarily optimal . 
@@24629754 @4629754/ <h> Electronic Arts <h> Star Flight ? DeluxePaint Demo Image <p> The image was inspired by an early Ron Cobb design for the Nostromo ship 's bridge . The USCSS Nostromo is a starship from the 1979 motion picture ' Alien ' . The name is taken from the eponymous hero of the 1904 novel by Joseph Conrad . <p> Commercial Towing Vessel Nostromo , an M-Class starfreighter property of the Weyland-Yutani Corporation , is a tug , a towing vessel , hauling an enormous ( some 1.5 miles in length ) ore refinery and 20 million tons of raw ore , weighing many times the mass of the Nostromo . The ship itself is still substantial , over 60,000 metric tons and almost 245 metres ( 800 feet ) long , including three decks , four holds , stores , engines , and lots of pipes and ducts ; its escape ship is called Narcissus . The ship is fitted with a self-destruct system and separates itself from the ore refinery platform via an umibical detachment system . The interior features a large ' space jockey ' cockpit @ @ @ @ @ @ @ @ @ @ dining area , central computer room , engineering areas , a hypersleep chamber and a labyrinthine network of connecting corridors . 
@@24629761 @4629761/ <h> Don Bluth <h> Dragon 's Lair ? Amiga Trailer <p> You control the actions of Dirk the Daring , a valiant knight , on a quest to rescue the fair Princess from the clutches of an evil dragon . Fight your way through the castle of the dark wizard who has enchanted it with treacherous monsters and obstacles . Lead on brave adventurer ... your quest awaits ! This is the trailer of the breath-taking full-screen animation game for the Amiga , released 1989 by ReadySoft. 
@@24629773 @4629773/ <h> Amiga Animations <p> Commodore Amiga computers were produced from 1985 until 1994 . During the heights of its time Amiga was the leading home computer of western Europe . <p> Models were created in a high-end workstation line , Amiga 1000 , 2000 , 3000 and 4000 , and a low-end home line , Amiga 500 , 600 and 1200 . <p> All models used processors of the Motorola 68000 family , had video and audio chip sets ( co-processors ) , and a graphical operating system with preemptive multitasking and a 32-bit address space . <p> The Amiga could display full-screen video with overscan while playing two-channel stereo sound or four-channel mono sound . A rich choice of color modes and screen resolutions between 64,000 and 614,400 pixels was available . <p> EHB ( Extra-Halfbrite ) which could display 64 colors with just 32 color registers . The 32 extra colors were half the brightness of the colors in the registers . <p> HAM 6 ( Hold-And-Modify ) could display 4096 colors with 6-bit pixel op-codes . The op-codes could either select a color from 16 color @ @ @ @ @ @ @ @ @ @ modify its red , green or blue channel with a precision of 4 bits . <p> HAM 8 ( Hold-And-Modify ) could display 262,144 colors with 8-bit pixel op-codes which could select colors from 64 registers or modify an RGB channel with 6 bits of precision . <p> Amiga animations were often distributed as freeware on floppy diskettes . A popular series of freeware diskettes was Fish Disk . Due to the low band-width of floppy diskettes , the animations had to be short , so that they could be loaded fully into memory before they were played back . <p> The most used file format for animations were IFF ANIM and MovieSetter . Games often used proprietary formats for their animations 