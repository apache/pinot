
@@21562120 @1562120/ 66502 @qwx266502 66505 @qwx266505 <h> What is a support-bundle and how to create one <h> Issue <p> What is a support-bundle ? <p> How to generate a support-bundle ? 66501 @qwx266501 <p> Jenkins <p> CloudBees Jenkins Enterprise ( CJE ) <p> CloudBees Jenkins Operations Centre ( CJOC ) <h> Resolution <p> The support bundle screen provides a list of all the classes of information that can be included in the support bundle. - Normally it is best to include all the selected information , however there may be some information which you do not want to share for reasons of confidentiality . In such cases you can de-select the information you do not want to include in the bundle . <p> You can find the Support link on the left hand side of your Jenkins UI. - From this , click the Generate Bundle to download the bundle to your machine . A bundle is a simple . zip file containing mostly plain text files . You can inspect the contents of this file to assure yourself that it does not contain information you do not want to share @ @ @ @ @ @ @ @ @ @ bundle if there is some specific piece of information that you need to remove from the bundle . <p> When you are happy with the bundle , just attach the bundle to your CloudBees support ticket . 
@@21562122 @1562122/ 66502 @qwx266502 66505 @qwx266505 <h> How to Start , Stop or Restart your Instance ? <h> Issue 66501 @qwx266501 <p> CloudBees Jenkins Platform 66503 @qwx266503 66504 @qwx266504 <h> Resolution <h> Administration from Jenkins <p> The easiest way to stop/restart a Jenkins instance is through the instance itself . In addition to the basic stop and restart commands Jenkins provides a set of commands to safely stop/restart Jenkins by putting it in a quiet mode . <p> quietDown : Put Jenkins in a Quiet mode , in preparation for a restart . In that mode Jenkins do n't  start any build <p> cancelQuietDown : Cancel the effect of the " quiet-down " command <p> safeRestart : Puts Jenkins into the quiet mode , wait for existing builds to be completed , and then restart Jenkins <p> safeExit : Puts Jenkins into the quiet mode , wait for existing builds to be completed , and then shut down Jenkins <p> These commands obey the security rules defined by the Authorization Strategy set up in Jenkins . Only user(s) with the required permission can use the following commands : <h> System Administration @ @ @ @ @ @ @ @ @ @ itself . This is the case , for example , when a machine needs to be restarted or upgraded . It is worth to mention that quiet-down is not available in that case . Only user with the required system permissions should be able to run the following commands . <h> Unix-based <p> You installed Jenkins on a Debian-based or a Fedora-based distribution , you can use the following commands : <p> However , if several application are deployed on your application server , it is preferable to manage the Jenkins application independently rather than restarting all applications . The following URLs shows how to start/stop/restart an application like jenkins deployed on a Tomcat server . 
@@21562123 @1562123/ 66502 @qwx266502 66505 @qwx266505 <h> How to connect an HTTPS Client Master to CJOC ? <h> Issue 66501 @qwx266501 <h> Resolution <h> CJOC is not a HTTPS/SSL/TLS endpoint <p> CJOC does not initiate the connection to the master , so it does n't  care if the master is on HTTPS or HTTP . <h> CJOC is a HTTPS/SSL/TLS endpoint <p> The Client Master initiates the connection to CJOC . In order for the Client Master to discover the agent port that CJOC is listening on you need to give the master the TLS cert of CJOC . There are two ways to do that : <p> 1 . Using CJOC feature <p> ( This is the recommended solution as you have complete control and can be assured that the cert is validated for discovery ) If using versions of the OC plugins released after Feb 18th 2016 ( operations-center-server 1.7.17+ / 1.8.6+ and operations-center-client 1.7.6+ / 1.8.5+ ) you can just configure the cert in CJOCs global security config and that cert will be added to the connection details . <p> You can check that the connection is successful in the Client Master Global Configuration : 
@@21562124 @1562124/ 66502 @qwx266502 66505 @qwx266505 <h> How do I reconnect a master to JOC after changing JOC to HTTPS ? <h> Issue <p> We have enabled HTTPS on port 8443 on our CJOC . ( For now , it also serves HTTP on port 8888 ) We had originally set it up using only HTTP on port 8888 , and connected the client masters to it before enabling HTTPS . <p> When I go to a client master and click the " log in " link , it takes me to the JOC on the insecure port 8888 . How do I reconfigure the client masters to talk to the JOC on port 8443 ? <p> Note : Related to " Request to connect as client of JOCA but already client of JOCB " 66501 @qwx266501 66504 @qwx266504 66503 @qwx266503 <h> Resolution <p> The recommended approach is to- detach and attach the client master to CloudBees Jenkins Operations Center . To do this ; <h> STEP 1 : In Operations Center <p> Go to the Client Master configured dashboard and go to the manage section- 
@@21562125 @1562125/ 66502 @qwx266502 66505 @qwx266505 <h> Running Jenkins in Windows as a Service <p> If configuration file jenkins.xml is located under the Jenkins installation directory - commonly C : Program FilesJenkins or C : Program FilesJenkins-OC . Then add the arguments into the &lt;arguments&gt; tag . It should look like this : : <h> Managed Masters <p> Jenkins Master Memory in MB : This is the amount of RAM that will be given to the container , expressed in megabytes . The heap given to the Master JVM will be a ratio of this memory . <p> JVM Max heap ratio : The ratio of the memory set under " Jenkins Master Memory in MB " to use as heap for the Jenkins master JVM . This must be a decimal between 0 and 1 . Values over 0.7 are not recommended and can cause master restarts when running out of memory . <p> For any others : System Properties <p> Before 1.7.1 - just JAVAOPTS . For instance : <p> JAVAOPTS=-XX : +PrintGCDetails <p> * Since 1.7.1 - JAVAOPTS+OTHERVARIABLE . For instance : <p> JAVAOPTS+MANAGEDMASTER =-XX : +PrintGCDetails <h> @ @ @ @ @ @ @ @ @ @ <p> export LONG ... -Xmx512m " <p> It is recommended to configure it in the script **27;0;TOOLONG ( linux ) or **27;29;TOOLONG ( windows ) that you 'll create to customize your application server . <h> Running Jenkins inside another JEE container <p> Please refer to the documentation of the container you are using . <h> Running CloudBees Jenkins Platform for Pivotal Cloud Foundry <p> You need access to the PCF Ops Manager to do it . Open the CloudBees Jenkins Platform tile . On the Settings tab switch to the Jenkins Master pane . Enter arguments into the JVM arguments fields . <p> Please note that this arguments will apply to all the Jenkins Enterprise and Jenkins Operations Center instances . 
@@21562126 @1562126/ 66502 @qwx266502 66505 @qwx266505 <p> 4 CJE : Disable Security in CJE by editing $JENKINSHOME/config.xml . Locate this line : **43;58;TOOLONG and changing it to **44;103;TOOLONG <p> 5 CJE : Start the CJE instance <p> 6 CJOC : Create a new client master <p> 7 CJOC : Configure the Licensing strategy that you want to use ( Test License in this example ) <p> 8 CJOC : Connect the client master either by push configuration from CJOC or manually from CJE <p> 9 At this stage , if the connection does not work and you are still stuck on the registration screen , you need to ask support for an evaluation license to get past the registration screen . <p> 10 CJE:The client master may need to be restarted to complete license registration . <p> 11 CJOC- Optional : Operations center might be keeping values in cache that prevent provisioning of a new master . If this procedure did not get you past the registration screen , you may have to restart CJOC . Re-do the procedure , stop CJOC in step 2 and start CJOC in step 6. 
@@21562127 @1562127/ 66502 @qwx266502 66505 @qwx266505 <h> How to disable the weather column to resolve instance slowness ? <h> Issue <p> The Jenkins instance experiences an overall slowdown . Slow-request logs from the support bundle should show some stack trace involving **26;149;TOOLONG . It should resemble something like this : 10410msec elapsed in Handling GET /master3/ from 127.0.0.0 : RequestHandlerThread#17 View/index.jelly **26;177;TOOLONG 66501 @qwx266501 66503 @qwx266503 <h> Resolution <p> The weather column reports build metrics for each build . Folders display an aggregate " score " of each build and the folders they contain , and display an icon in the weather column to represent this score . When an instance grows to be very large , and its folder structure has many levels , the generation of this weather column can seriously impair system performance . Here are some steps to disable these health metrics at the folder level : <p> Go to all of your top-level folders . <p> Click the configuration page . <p> Click Health Metrics . <p> Delete all of the entries ( except Enabled Projects , it may be left if you find it useful @ @ @ @ @ @ @ @ @ @ . <p> The script can be executed from Jenkins Enterprises Script Console or as a Cluster Operation and run across multiple client masters from Jenkins Operations Center . You could even schedule the Cluster Operation to run on a regular basis . Of course , you should run this script on a test master before running across your production masters . <p> This will stop the weather column from constantly refreshing on all folders and the jobs within them . <p> Note that running this script will disable the Weather Column for existing projects/jobs only , but not for newly created projects in the future . It may be ideal to run this periodically , or perhaps as a scheduled job . 
@@21562128 @1562128/ 66502 @qwx266502 66505 @qwx266505 <h> How to Connect to Remote SSH Slaves ? <h> Issue 66501 @qwx266501 66503 @qwx266503 <p> Dump slave/agents Launch method via SSH <h> Resolution <p> Ideally , we recommend that the same user jenkins is created on each Server where slaves agents or nodes will be deployed . However , it is possible to run slaves with a different user . Indeed , each slave acts as an SSH server and the Jenkins master acts as the SSH Client . <h> Requirements <p> That being said , here are the requirements to make it work : <p> The slave needs to authorize the master to access via SSH for a specific user . <p> The master needs a way to authenticate with a specific user to the slave via SSH . <p> So , a SSH server needs to be installed in the slaves agents or nodes ( For instance , on Ubuntu n++openssh-server ) <p> Before trying to connect a slave to a master . Make sure of the following : <h> Steps <p> In order to connect an SSH slave with the user @ @ @ @ @ @ @ @ @ @ machine : <p> 1 ) Log in as $SLAVEUSER . We create the SSH Keys with that user to ensure it has the required permissions later on when connecting to the slave from Jenkins . <p> &gt; sudo su $SLAVEUSER <p> 2 ) Create private and public SSH keys . The following command creates the private key $myslaversa and the public key $myslaversa.pub . It is recommended to store your keys under /. ssh/ so we move to that directory before creating the key pair . <p> &gt; cd /. ssh/ ; ssh-keygen -t rsa -C " $myslave " -f " $myslaversa " <p> Note : To increase security , a passphrase is advisable to associate it to your Private Key . <p> 3 ) Add the public SSH key to the list of authorized keys in the slave machine <h> In Jenkins : <p> According to the option selected on " step 4 " , select now the proper Private Key type . So for " 4. a " choose Enter Directly , whereas for " 4. b " choose From a file on the Jenkins Master <p> 6 @ @ @ @ @ @ @ @ @ @ the user $SLAVEUSER , configure the slave under Manage **25;205;TOOLONG ( **40;232;TOOLONG ) and use this user credential . <p> Note : Using that configuration , only one credential per user can be used . Several slaves can be launched for the same user on the same machine without any further configuration . To connect slaves hosted on a different machine using the same credential , the same SSH public Key needs to be added in the authorizedkeys logged as $SLAVEUSER <p> 7 ) On every slave you connected successfully , a similar output to this one is expected : <h> On the slave machine : <p> On the hand , under the path specified in Remote root directory , slave.jar should has been copied . And those item/jobs which use this slave agent/node will allocate their workspace here after they are built . <p> NOTE:Depending on the permissions of the node/slave machines user account , it may be necessary to set the jar cache directory - due to the issue JENKINS-18578The default jar cache location is hardcoded to /. jenkins/cache/jars <p> To change the default setting : <p> In @ @ @ @ @ @ @ @ @ @ Option , Place the following in the Suffix Start Slave Command -jar-cache &lt;path to jar cache directory&gt; <p> Make sure there 's a leading space so the parameters are n't  tacked directly onto the slave.jar itself . <h> 7 Comments <p> This is the right way to connect to a slave . But there is a problem when you use this method for OSX slaves to run jobs that needs to use codesign . How can we have an OSX slave connecting via ssh keys and working properly with xcode build . <p> AFAIK for OSX to have a proper integration with all xcode tools you need to have a real user session and thus to use a JNLP slave . With SSH you can open a user session and thus the emulator and others tools like this are n't working <p> - I have another trouble , I 'm using Linux as master and AIX as slave , everything is set correctly , when I select the Launch agent in the slave , nothing happens , just an icon of a circle running is showed , if I go to @ @ @ @ @ @ @ @ @ @ but in jenkins the next error is displayed : This node is offline because Jenkins failed to launch the slave agent on it . logs are empty too . Any idea what can be happening ? 
@@21562129 @1562129/ 66502 @qwx266502 66505 @qwx266505 <h> Upgrade location <p> It is highly recommended to upgrade Jenkins on the same location where it is running even if we are talking about the production environment . Doing a backup of $JENKINSHOME and the $BUILDDIR - in case it is outside the default location - should be enough to revert to the previous status . <p> It is not recommended to keep two different instances working at the same time to avoid downtime while performing the upgrade unless you really know what you are doing - it will be very difficult to replicate the exactly same environment. * JNLP slave will not work correctly as the $JENKINSURL location will be different* Credentials might fail in case the secret is not the same on both instances* The OS might not be configured in the same way . i.e ulimit* The Jenkins configuration might not be correctly replicated <h> Before Upgrading your instance <h> Take a SNAPSHOT of the current state <p> Generate a support bundle with the current status . It will help in case there are problems with the upgrade or to know @ @ @ @ @ @ @ @ @ @ Backup your instance before starting your upgrade . The minimal backup is a copy of your $JENKINSHOME directory . If the BUILDDIRECTORY is out of the $JENKINSHOME you must backup this directory as well . <h> Check the impact of the changes <p> Check the plugins which will be upgraded taking a look at our documentation : <p> If you are upgrading Pipeline plugin , you might be facing some incompatibilities due to recent changes on this plugin . You can check those changes on the Wiki of this plugin . <h> Upgrades inside 1. x ( deprecated ) <p> In the rare case you need to upgrade to a newer 1. x version : IMPORTANT ! ! ! - Verify that there are not any plugins that are pinned . When the server is stopped , remove all files named *. pinned from $JENKINSHOME/plugins ( see Pinned Plugins ) . <h> Upgrades from 1. x to 2. x <p> Maven jobs might be affected as they are required now to be using the same Java version than the Master is running . The workaround is explained on this KB @ @ @ @ @ @ @ @ @ @ a test environment . <p> Groovy has been upgraded from 1.8. x to 2.4. x on Jenkins 2. x . This change will produce an increase of the heap memory consumption on the instance . Since the Groovy API changed , it means some of your Pipelines might need to be adapted to those changes . <p> Removal of the AJP connector from the embedded Winstone-Jetty container <p> Also , it is very recommendable to change the JNLP protocol to version 4 ( JNLP-4 ) . You can do this from Manage Jenkins -&gt; Configure Global Security . <p> IMPORTANT You should ensure that your Jenkins instance is prepared for support . The correct configuration of the GC and ulimit is critical for a good Jenkins performance and to avoid crashes . Please , take particular attention to Java Parameters , Ulimit Settings , Log Startup Timing Info . <h> Upgrading your instance <h> War file installations <p> If your CloudBees Jenkins Enterprise instance is run with the command java -jar jenkins.war , you can simply replace the jenkins.war file with the latest version . - This can be done @ @ @ @ @ @ @ @ @ @ - At the top , you will see a link stating the most recent version . - Simply click it and Jenkins will begin the upgrade process . <h> Custom container installations <p> If you use a custom container , you will find the jenkins.war file in the deploy directory of your container . - For example , LONG ... would be the location for a default JBoss installation . <h> Debian and other Linux distro installations <p> Certain systems , such as Debian , will not allow upgrades via the Manage Jenkins page . - You can run the update from your package manager in these cases . - For example , in Debian you can run aptitude update then aptitude install jenkins . <h> IMPORTANT : RPM/YUM with High Availability <p> The RPM package contains a post-install script to ensure ownership on several files including JENKINSHOME . Therefore if High Availability is setup , this could lead to I/O Errors - for example when upgrading one node while another one is still running . More information is available in JENKINS-23273 . <p> To workaround this problem , you @ @ @ @ @ @ @ @ @ @ true " under /etc/sysconfig/jenkins . <h> CloudBees Jenkins Platform 2 . X <p> Note : If your CloudBees Jenkins Enterprise is connected to a CloudBees Jenkins Operations Center ( CJOC ) instance , the CJOC must first be upgraded to CJP2 
@@21562131 @1562131/ 66502 @qwx266502 66505 @qwx266505 <h> Issue 66501 @qwx266501 <h> Resolution <p> Custom styling can be applied via modification of the CSS structure being used by Jenkins.Simple Theme Plugin is the most popular approach to customizing CSS outputs . <p> Below you can find a screenshot of CloudBees Jenkins Enterprise instance with the modified header . <p> Please note that CJE and CJOC layouts slightly differ from open-source Jenkins instances , so the existing themes for Simple Theme Plugin may work incorrectly . <h> Customizing instance headers <p> Below you can find a list of steps , which allow customizing headers of bothCloudBees Jenkins Enterprise and CloudBees Jenkins Operations Center.These steps apply to the versions 1.625. x and 1.642. x , steps for other versionsmay differ . 
@@21562134 @1562134/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Resolution <p> The Role-Based Access Control plugin combines with the Folders plugin to give a powerful solution for managing a Jenkins which is shared by multiple teams of users . The Jenkins administrator can create folders for each of the teams and then create groups in those folders for each of the roles that team members can have . By delegating the management of the group membership ( but not the management of the roles assigned to groups ) to the team leaders , the Jenkins administrator can empower the team leads to manage the permissions of their team while reducing their own administrative overhead . <p> We are resolving this issue by the following scenario : <h> Scenario <p> Let 's say we have three different users groups in Jenkins : <p> admin ( group ) -&gt; admin ( user ) <p> Team-A ( group ) -&gt; user1 ( user ) <p> Team-B ( group ) -&gt; user2 ( user ) <p> Then : <p> admin users will be allowed to access everywhere but <p> Users which belong to Team-A group will @ @ @ @ @ @ @ @ @ @ to Team-B group will only have access to folder-team-b. 
@@21562136 @1562136/ 66502 @qwx266502 66505 @qwx266505 <h> Pipeline - How to kill a pipeline job that is stuck executing <h> Issue <p> We tried to kill the job , but it does n't  seem to have an impact . We have deleted the job , but the execution still appears in the list of running jobs in the Build Executor Status . How can we kill this execution ? <p> Pipeline run will not terminate even- with- a cancel , or terminate . 66501 @qwx266501 <p> Jenkins 66503 @qwx266503 <p> Pipeline plugin <h> Resolution <p> Please upgrade to the latest version of all Pipeline Plugin which enables the ability to perform a hard kill operation when a pipeline operation is canceled . <p> If you cancel a build ( via the red X ) and the build will not stop or abort then after 15 seconds a Forcibly terminate running steps will appear in the console output of the build . If you click that and the build does not stop the build , then a Forcibly terminate the project button will appear which will allow you to foribly terminate all @ @ @ @ @ @ @ @ @ @ of the Forcibly terminate options , and you are currently using the latest versions and you continue to encounter hangs in your pipeline scripts , then please file a new support ticket and attach a support bundle to investigate further . 
@@21562141 @1562141/ <h> The Groovy Way to Write Jenkins Plugin <h> Wednesday , 16 July 2014 - <h> 4:00pm 4:45pm <p> Writing a plugin gives you the power to customize Jenkins CI . As we know , great power demands great responsibility and we believe that Groovy is the right choice for your next Jenkins CI plugin . In this session we will guide you through the basic building blocks of a typical Jenkins plugin ; we will show you the benefits of using Groovy for creating an easy and elegant UI and for simplifying the business logic- code . <h> Shiran Rubin <p> Software Engineer <p> JFrog <p> Shiran has a diverse background in software development , and for the last couple of years has been working as a software engineer at JFrog , the home of Artifactory and Bintray . As a member of the Bintray team , she has developed both client and server side code using Groovy , Java , HTML , JavaScript and- more . 
@@21562142 @1562142/ 66502 @qwx266502 66505 @qwx266505 <h> How to troubleshoot Move Copy Promote issues ? <h> Issue <p> How to troubleshoot Move/Copy/Promote issues on CloudBees Jenkins 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <p> Operation Centers Plugins Suite <h> Resolution <p> This article gives simple steps for troubleshooting a Move/Copy/Promote operations . It also gives steps to gather the most relevant information so that the Support Team can resolve your issue as quickly as possible . <h> What to do if a Move/Copy/Promote operation is getting stuck at validating stage <p> If you are performing a Move/Copy/Promote operation between two different masters and the build is stucked in this window <p> probably the messaging database of the Master which is trying to perform the M/C/P operation is corrupted and the CJOC is not able to pick up the request . To troubleshoot such situations We have a script to be executed in the jenkins groovy console in order to confirm it , so please follow the next steps in you are facing this problem : <p> Try to reproduce the issue copying a job from a Master ( MASTERSOURCE ) to another @ @ @ @ @ @ @ @ @ @ Create a new support bundle of CJOC and the Master <p> Go to $CJOCURL/script and execute the attached cjoc-status.groovy script and save the output in cjoc-status.output <p> Go to $CJOCURL/script and execute the attached messaging-status.groovy script and save the output in **28;274;TOOLONG <p> Go to $MASTERSOURCEURL/script and execute the attached messaging-status.groovy script and save the output in **30;304;TOOLONG <p> Create a zendesk case and attach the support bundles and the *-status.output files . <h> Get the Move/Copy/Promote History <p> For each Move/Copy/Promote operation , there is a history log created and you can access it via in Jenkins via Manage Jenkins &gt; Move/Copy/Promote History . On this page you can locate the Move/copy operations that failed and check the log by selecting the small screen on the right . <p> This displays the detailed logs of the operation : <h> Add Loggers and Reproduce <p> You can enhance the logging to track the Queue and improve our visibility during the failing operation : <p> Create a Logger in the instance(s) involved in the operation . Name it for example move-copy-issue . <p> Add the following packages : <p> hudson.model.Executor <p> @ @ @ @ @ @ @ @ @ @ Get the log at **44;409;TOOLONG <p> ( If you generate a support bundle , this custom logger is included in it ) <h> Check the Jenkins User Permissions <p> Ensure that the Jenkins user has the required permissions - Jenkins user should have read/write permissions - in both the source and the destination locations . You can for example run the following command ( replace &lt;path-to-item&gt; with the path of your job or folder ) : <p> ls -ltR $JENKINSHOME/jobs// &gt; /tmp/permissions.log <p> This creates the file /tmp/permissions.log in which you can check the users permissions . For example : <h> Check the User Permissions in Jenkins <p> Ensure that the user performing the operation has the required permission in both the source and the destination location . <p> Check the permissions at $JENKINSSERVER/whoAmI <p> For RBAC , check the roles/permission at **27;455;TOOLONG <p> When using CJOC SSO to login on masters it is required to use trusted masters configuration in CJOC , this requires to set " Trusted Master with equivalent security realm " in " Configure Global Security " - " Security Setting Enforcement " in CJOC general @ @ @ @ @ @ @ @ @ @ user performing the move/copy operation in the target master , so security policies are properly applied . Otherwise the user will be identified as anonymous in the target master and the operations will fail ( unless anonymous has write permissions in the destination location ) . <h> What should I attach in a CloudBees support ticket ? <p> Gather the following information and attach it to a the support ticket : <p> The History logs of the failing move operation ( please copy/paste the the content on the page and send us a . txt or . log ) <p> Support bundles from both CJOC and CJE <p> The . log files generated in the step(s) above <p> The config.xml of the relevant Folder(s)/Job(s) <h> Recommendations <p> Many fixed/improvement have been added to this feature and we recommend that you update the operations-center-* plugins to the latest version . 
@@21562144 @1562144/ 66502 @qwx266502 66505 @qwx266505 <h> GitHub webhook configuration <h> Issue <p> How does GitHub webhooks for triggering jobs works for Pipeline Multibranch or GitHub Organization Folder ? 66501 @qwx266501 <p> Jenkins <p> Cloudbees Jenkins Enterprise ( CJE ) <p> GitHub plugin <p> GitHub Pull Request Builder plugin <p> CloudBees GitHub Pull Request Builder plugin <p> Pipeline Multibranch Plugin <p> GitHub Organization Folder Plugin <p> Github Webhook <h> Resolution <p> To understand the configuration , it is important to make a distinction regarding GitHub plugins direct dependency . Multibranch projects and Organization folders from GitHub depends directly on GitHub Branch Source Plugin and not the GitHub plugin. <h> 1 . At network level <p> At the network/infrastructure level , the Jenkins instance must be able to connect to GitHub and vice versa . <p> Note : If you are testing this feature running Jenkins locally , a tool such as ngrok might be helpful . <h> 2 . At Credential level <p> On the left hand side menu of the Jenkins Dashboard ( Root ) click on Credentials and then create a new Global &gt; Secret Text Credential type , @ @ @ @ @ @ @ @ @ @ user " GitHub-User-X " who will send " push " or " pull request " events to the " Repo X " . <p> This credentials will be used by the Step 4 : Configuration of the Github Plugin. <h> 3 . At Job level <p> Depending of the type of jobs : <h> A. None Multibranch pipelines plugins and GitHub Organization Folder <p> In the Job configuration , one of the following Build Triggersneeds to be selected : <p> For PUSH events : Build when a change is pushed to GitHub <p> For PULL REQUEST events : Build pull requests to the repository <p> Notes : <p> For triggering by PULL REQUEST events , one of the following plugins need to be installed : GitHub Pull Request Builder plugin or CloudBees GitHub Pull Request Builder plugin . However , PUSH events is enabled by the GitHub plugin . <p> Both triggers can be selected together if it was needed in a Freestyle project . However Build pull requests to the repository trigger option is not available for Pipeline jobs . Alternatively , use Multibranch Pipeline and restrict the branch @ @ @ @ @ @ @ @ @ @ the master ( a Jenkinsfile in the master branch of the repo is needed ) . <h> B. Multibranch pipelines plugins and GitHub Organization Folder <p> It is all one process : branch indexing , and it is configured by default , so nothing needs to configured for this aspect in the Jenkins side at job level . <p> branch indexing takes place for any push and pull request events . <h> 4 . At WebHook level <p> Pair of GitHub token ( credentials generated on the Step 2 ) and server url . Credentials can be validated by clicking on Verify credentials . If this credentials are fine the following output is expected on the GUI : <h> Depending on how the WebHook is managed <h> A. Automatically <p> This option does not work for Pipeline Multibranch Plugin plugins or GitHub Organization Folder jobs , because it is inhered from the GitHub plugin and not the GitHub Branch Source plugin . <p> Jenkins generate the WebHook for you . For this option , check on Manage hook URLs so it gets enabled . <p> On GitHub side , nothing @ @ @ @ @ @ @ @ @ @ build for the " Job X " , a webhook is automatically added on GitHub for " Repo X " . It includes the event which triggers the job ( Pull request or Push ) . To check this go to the Setting button of the " Repo X " GitHub website &gt; Service Hooks . Please , note that Jenkins will create one hook per different event . <h> B. Manually <p> This option works all types of jobs , including Multibranch pipelines plugins and GitHub Organization Folder . <p> For this option , on the Jenkins side , disable Manage hook URLs <p> On the GitHub side , go to the GitHub repository and click on the Setting button . Then , create a new Service Hooks -&gt; Post-Receive URLs and enter the URL of your Jenkins instance , which must be https : **36;484;TOOLONG - Do n't  forget the last " / " . <p> Content type should be set up as **34;522;TOOLONG . <p> Events : <p> For PUSH events : Check Push <p> For PULL REQUEST events : Pull request . This option is available @ @ @ @ @ @ @ @ @ @ Notes:1 . Each webhook can be installed on a Organization level ( mandatory for GitHub Organization Folder jobs ) or a Specific Repository . In any case , within a GitHub Organization , in order to access to Setting &gt; WebHooks the Owner** role is needed. **2 . In case both events are needed , select both from Let me select individual events . So , just one webhook can trigger different types of events . <h> 1 Comments <p> Where these instructions talk about " Manage hook URLs " , they are referring to a single check box that you can get to by doing ( from a Master or Client Master only ) <p> Manage Jenkins &gt; Configure System &gt; GitHub &gt; GitHub Servers and add one . Then you have to enter the GitHub URL , whether its at github.com or is an enterprise github instance with some local URL to your network . <p> Then you have to enter credentials to allow access to the GitHub instance ( and the credentials have to have admin permission ( or maybe somewhat less ) to be able to @ @ @ @ @ @ @ @ @ @ you select the box " Manage hook URLs " because it wo n't try to use the credentials you entered on line n-1 if you you unselect the check box on line n . ( The order is confusing if not utterly wrong . ) <p> Note that when I went to this page from Google without logging in , I did not see any images and that left the text-only content very confusing . Particularly mentioning " Manage hook URLs " without any context whatsoever . Its a little better with images but still does n't tell how to get to the page . <p> It is not intuitive that you go to add a build job and click to automatically build on a change but that does n't work until you go to a whole different place in a different part of the web app to check a box and enter GitHub access info . But that is what this article describes . 
@@21562145 @1562145/ 66502 @qwx266502 66505 @qwx266505 <h> Jenkins fails to Start due to HttpsConnectorFactory <h> Issue <p> Jenkins fails on startup with the following stack trace : <p> SEVERE : Container startup failed java.io.IOException : Failed to start a listener : **30;558;TOOLONG at LONG ... at LONG ... at **41;590;TOOLONG at LONG ... Method ) at LONG ... at LONG ... at LONG ... at Main. main(Main.java:293) at Main.main(Main.java:98) Caused by : **30;633;TOOLONG : **31;665;TOOLONG at LONG ... at LONG ... ... 8 more Caused at LONG ... ... 10 more 66501 @qwx266501 66504 @qwx266504 66503 @qwx266503 <p> Jenkins <p> JDK 8+ <p> Open JDK 1.7.0111 <h> Related Issue <h> Resolution <p> This is an issue related to the auto-generation of self-signed certificate carried out by the Jetty Winstone container . This feature is fails with JDK 8+ as well as with the latest version of Open JDK 7 . For more information , have a look at JENKINS-25333 for more details . <p> The problem occurs only if you use -httpsPort without providing a keystore or a certificate . In that case Jenkins tries to run with an auto-generated self-signed certificate . 
@@21562146 @1562146/ 66502 @qwx266502 66505 @qwx266505 <p> Then , configure the tools- you want to push on the Slaves - I am showing how to do this with the JDK : <p> And now the JDK is- pushed from CJOC to Client masters . As you can see at job level this build tool is available . <p> However , this feature needs Operations Center Context Plugin &gt;= 1.7.1 . If you are using CloudBees Jenkins Operations Center 1.580 base line , the feature was also backported to version 1.6.9 of the plugin . So you might need to upgrade this plugin to have available this feature . <p> You can specify the location of certain tools at shared node level , although you may prefer to use automatic tool installers instead , removing the need to configure each node separately.This approach is documented on our official documentation.To use this approach you need to do the following : <p> Define the Build tool in CJOC- http : **27;765;TOOLONG - In this example I am showing you how to do it with the JDK . <p> Inject the tool location in the @ @ @ @ @ @ @ @ @ @ Properties at shared node level . For this , go to the corresponded shared slave , then Properties -&gt;- Inject Node Properties -&gt; Tools locations and select the tool you have defined in the previous section - - 7u51 in this case . <p> - 3 . Define the same tool name in Client master Global configuration <p> Tool Locations will add/update the tool locations . The required tool installers must be defined with the same names both on CJOC and on the client masters to which slaves will be leased . <p> Go to the Client master global configuration http : **36;794;TOOLONG and in the JDK section define a JDK with the same name you did in section 1 and 2 - 7u51 . <p> Now , in the client master at job level the JDK we have defined is available on the path we specified at shared node level . <p> Note that this option requires to have installed at least- -Operations Center Server Plugin &gt;= 1.7.2 <h> 3 . Define the- build tool only at Client master level <p> This option is the less recommended because you @ @ @ @ @ @ @ @ @ @ , but also need to define everything for each client master . With the previous approach you are able to overright this from CJOC-&gt;shared slave. - <p> For this option , you need to define the build tool location in the Client master global configuration http : **35;832;TOOLONG 
@@21562147 @1562147/ 66502 @qwx266502 66505 @qwx266505 <p> folderName= " folder-a " // change value folder-a for the full name of the folder you want to disable all jobs in LONG ... . findAll it instanceof AbstractProject . each it.disable() println ( " Disabled job : $it.fullName " ) null <p> You can perform a dry run by commenting out the disable line , i , e : <p> //it.disable() <p> This will result in the names of the jobs that would be disabled being printed , but not disabled . 
@@21562148 @1562148/ 66502 @qwx266502 66505 @qwx266505 <h> Resolution <p> Here are the instructions for fetching an instance I 'd from a Jenkins master in the following scenarios : <h> Scenario 1 - a fresh installation ( CJE or CJOC ) <p> Go to your masters UI : <p> For CloudBees Jenkins Enterprise , the default location is localhost:8080 <p> For CloudBees Jenkins Operations Center , the default is localhost:8888- <p> Since this is a fresh installation , you 'll see the following registration screen : <p> Click on the " Use a license ey " option ( as shown above ) . The top-most field will contain your masters instance I 'd . Copy this value , and paste it into your onboarding case. - <p> Please also include information as to what kind of master this instance I 'd will be ( CloudBees Jenkins Enterprise or CloudBees Jenkins Operations Center ) , and how many executors that master should be licensed for . <p> Its best practice to- upgrade your Jenkins core to the last LTS branch CloudBees Jenkins Enterprise distribution is available for . ( Note that you should not upgrade to the @ @ @ @ @ @ @ @ @ @ CloudBees Jenkins Enterprise branch ) . Failure to do so can result in your instance becoming unresponsive due to missing core dependencies for the Enterprise plugins . <p> Install the " Enterprise by CloudBees " plugin from the OSS update center by clicking on the " Manage Jenkins " link in the lefthand menu , then clicking the " Manage Plugins " link . The " Enterprise by CloudBees " plugin can be found under the " Available " tab : <p> This plugin will install all of the CloudBees Enterprise plugins , which will convert an Jenkins master into a CloudBees Jenkins Enterprise master . <p> As with the first scenario , you 'll now need to go to your masters web UI : <p> For CloudBees Jenkins Enterprise , the default location is localhost:8080 <p> For CloudBees Jenkins Operations Center , the default is localhost:8888- <p> Since this is a fresh installation , you 'll see the following registration screen : <p> Click on the " Use a license key " option ( as shown above ) . The top-most field will contain your masters instance I 'd . Copy this @ @ @ @ @ @ @ @ @ @ <p> Please also include information about how many executors that master should be licensed for so that the Solutions Architect can license your instance accordingly . 
@@21562149 @1562149/ 66502 @qwx266502 66505 @qwx266505 <h> Issue <p> Jenkins builds can pile up and cause disk space to grow out of control <p> Performance issues can result in large/complex instances with large number of projects building frequently , such as slowdown of the GUI as it attempts to load the job history , etc . <p> Configuring build cleanup following project setup can be manual and time-consuming process , especially with large number of projects 66501 @qwx266501 66503 @qwx266503 <h> Resolution <p> There are a number of ways to manage build cleanup:1 ) By default , you can enable the " Discard Old Builds " in each project/jobs configuration page . This will perform basic cleanup , using functionality found in Jenkins core . To make this bulk change to large number of projects ( if you have large number of projects and its not feasible to do this individually to each one ) , please install/use theConfiguration Slicing Plugin <p> 2 ) You can install/use the Discard Old Build plugin to do the cleanup . This will extend the basic Jenkins " Discard Old Builds " functionality in each @ @ @ @ @ @ @ @ @ @ If you have large number of existing builds and its not feasible to manually cleanup builds using one of the options above , its possible to perform manual cleanup of jobs from the filesystem ( in $JENKINSHOME/jobs ) . Navigate to **40;869;TOOLONG folder for each project , and delete some or all of the files inside here ( which comprise the build history ) . Following the deletion , it will be necessary to restart Jenkins or " Reload Configuration from Disk " ( both in " Manage Jenkins " ) so the links to the deleted builds will disappear . Following this operation , install/use the Configuration Slicing Plugin mentioned in step #1 so you do n't  need to perform this bulk deletion again in the future . <p> Its also possible to purge selectively from the filesystem using " find $dir -mtime +$age -rm " where age is the oldest dateyou want to keep the build ( in days ) . This will get rid of the builds and the links . Again , you may have to restart or reloadonce this is done in order for the @ @ @ @ @ @ @ @ @ @ . Be sure to backup your $JENKINSHOME ( or at least the jobs folder ) prior to doing thisjust in case of unintentional deletes. 
@@21562150 @1562150/ 66502 @qwx266502 66505 @qwx266505 <p> Running with //item.delete() allows you to see a list of jobs that would be deleted without actually deleting any ( dry run ) . Once you are happy with the job list uncomment item.delete() , i.e. //item.delete() -&gt; item.delete() . <p> NOTE : There is no undo for this once you have deleted the jobs . Recommend taking a backup before deleting anything to be safe . <p> I am going to be refreshing a large number of jobs from one environment to another . - Unfortunately this had been done once in the past and the new environment wasnt used . - As a result there 's a bunch of old copies of the jobs in on the new system and I am thinking I should delete them before migrating the fresh copies over . - <p> 1 ) if I copy the jobs over at the file system level and force an overwrite is that known to be problematic ? - <p> 2 ) if I use this command to delete the jobs first , and I delete all jobs in a folder @ @ @ @ @ @ @ @ @ @ would be the correct syntax ? - <p> If you need to delete all the Projects in a Folder , you do n't necessary need this script . You can just delete a folder which will delete all its content as well . You can recreate the Folder again if you still need it afterward. 
@@21562155 @1562155/ 66502 @qwx266502 66505 @qwx266505 <h> Case A - Migrate Jobs Only <p> You are moving the full pile of jobs between one Jenkins instance to another . <p> There is not a huge complexity folder tree among Jenkins instances . <p> Important : The configuration ( System , Credentials , Plug-in , Nodes , etc. ) of the destination jenkins instances must be similar to the origin at the point of migrating jobs . Otherwise , jobs could fail in case the have any missing configuration dependencies ( for instance , missing credential secret.key or artifactory server ) . After migrating jobs , there is not problem in having different configuration among your Jenkins according to your needs . <h> Option A - Relocating $JENKINSHOME/jobs <p> 1 . Copy the items in the $JENKINSHOME/jobs folder from the source to the destination instance.Ensure permissions are preserved for the jenkins user when doing this , to avoid issues . <p> 2 . Restart Jenkins ( or " Reload configuration from disk " from the " Manage Jenkins " screen ) on the destination instance.Once Jenkins is up and running , you @ @ @ @ @ @ @ @ @ @ job configurations may depend on a particular Jenkins version or plugins/versions being presentso they may not necessarily function the same way once migrated to a new instance . <p> Optional : Immediately run this script to disable all jobs ( particularly if you have copied from a " Production " instance , and/or have a lot of scheduled jobs or jobs configured to poll from SCM repository : <h> Case B - Migrate Entire Jenkins Configuration , Including Jobs <p> Note : In this example , were cloning a PROD Jenkins master , and cloning it to a new TEST Jenkins master . ( For reference please see the Test Instances section on our documentation site ) <p> This will preserve most ( but not all ) of your Jenkins configuration and other settings . Some items ( such as Slave connections ) will need to be re-created on the TEST instance . Note that in using this method , it will be necessary to contact CloudBees Support ( Licensing ) to obtain an updated license key . The instance I 'd ( and associated license string ) from your source/original @ @ @ @ @ @ @ @ @ @ instance.Please follow the following procedure : <p> 4 . Remove the following : - $JENKINSHOME/secret.key* - $JENKINSHOME/license.xml - **29;911;TOOLONG - $JENKINSHOME/jgroups/ ( subdirectory ) This will only be present if the SOURCE destination is member of HA cluster <p> 8 . Upon startup , you will be prompted for CloudBees Jenkins registration. - If you are connecting your new Test instance to a CloudBees Jenkins Operations Center ( which is configured to centrally manage your licenses ) , you should be able to establish the connection. - If you would like to run your newly configured CloudBees Jenkins Enterprise instance in standalone ( not connected to CloudBees Jenkins Operations Center ) , please contact CloudBees and provide your instance I 'd to obtain a new license/registration . In the meantime , you may select the " Evaluation " option to proceed with the remaining steps prior to obtaining the license string . <p> 10 . Navigate to Manage Jenkins -&gt; Configure System and Configure Security and update any settings as needed . Some settings ( suchas the Jenkins URL ) are specific to each instance , and may need to be @ @ @ @ @ @ @ @ @ @ will be necessary to re-create the nodes , including Slave or Shared Slave connections . If any issues arise , please check ( and repeat , if needed ) step #4 . If any of these files are corrupted , or the original copies werent replaced with new versions once the destination instance was startedissues might arise in creating Slave connections . <p> 12 . Uncheck Quiet Restart <p> 13 . Start enabling jobs for testing ( note : only enable jobs that will not have side effects on production platform - ie do n't  update SCMs , publish artifacts to repositories , send notifications etc ) 
@@21562156 @1562156/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Explanation <p> Because java serialized classes are exchanged between Jenkins master and Maven Jobs it is required that the JVM used to launch Maven is superior or equal to the version of Java for which Jenkins Master is built for . <p> This constraint was firstly reported for the Jenkins upgrade from Java 5 to Java 6 as JENKINS-18403 thus the error message <p> ERROR : JENKINS-18403 JDK 5 not supported to run Maven ; retrying with slave Java and setting compile/test properties to point to LONG ... <p> This one was wrongly implemented thus for the upgrade to Java 7 you are receiving the same error about JDK 5 while it is JDK 6 ( See JENKINS-28294 ) . <h> Resolution <p> There are several solutions to avoid this problem . <h> On Jenkins side <p> The simplest workaround could be to define the properties **27;942;TOOLONG **27;971;TOOLONG locally in your maven job settings or globally in Jenkins global configuration for MAVENOPTS if you have only Java 6 maven jobs . NOTE : This will work only if your maven jobs are @ @ @ @ @ @ @ @ @ @ plugins but are using these properties to do the configuration ( which is the default behavior of Maven ) . <p> In Jenkins , instead of using Maven Jobs you can use FreeStyle jobs with a Maven build step.This solution requires a manual recreation of jobs.FreeStyle jobs will offer less features than Maven jobs but theyll support to launch Maven on any version of java . <h> At Apache Maven level <p> Before anything you need to configure the maven compiler plugin to target your oldest version of Java even if you are using a more recent JDK.If you did n't  configured ( directly or in a parent ) the compiler plugin you can just add in your pom : <p> If the compiler plugin is already reconfigured in your project or in a parent pom you may have to use another property or declare the configuration options of the plugin in the plugins or pluginManagement settings . <p> Sadly configuring the compiler options are often not enough to ensure that you will produce binaries compatible with your target JRE . For exemple , you can use APIs ( methods @ @ @ @ @ @ @ @ @ @ available in the older version . <p> To avoid this kind of issue there are 2 solutions at Apache Maven level which will allow you to launch Apache Maven with a Java version superior to the one targetted by your application but without risking to produce an incompatible binary.With theses solutions you 'll have to update your build but you 'll be able to continue to use your Maven Jobs . <h> The animal-sniffer solution <p> In your build you add an additionnal control using the Animal Sniffer plugin to avoid to use in your code some APIs provided by the version of Java used to build.This solution is n't 100% safe ( it controls only the singatures of methods not their semantics ) but it covers a large part of classical errors to build an application for an older version of Java . <p> With toolchains , Apache Maven will be able to run on a different ( version ) of the JVM than the JDK used to build your project.It will allow to run Apache Maven on the same JVM version than your Jenkins Master ( for exemple Java JRE 7 @ @ @ @ @ @ @ @ @ @ application ( for example Java JDK 5 ) . With this strategy the targeted version of the JDL is used <p> On Jenkins side you will need to perform the following actions : <p> Your Maven Job project will be configured to use a JDK 7 . You will use the Tool Environment Plugin to install an additional JDK 6 on your slave . <p> You will use the Config File Provider Plugin to define and install a toolchain.xml file used by maven to define where the JDK6 is installed <p> - Yes the principle remains the same . If you have this error this is because you configured a Maven job with a Java version &lt; 7 . Jenkins &gt;= 1.612 and thus 2.18 can not natively use Maven jobs with a Java version inferior to 7 . THus the build is trying to use the Java version of your agent which is necessarily superior or equal to 7. 
@@21562160 @1562160/ 66502 @qwx266502 66505 @qwx266505 <h> 4 Comments <p> The issue with this is that when a user clicks the X button to cancel the build outside of the input rejection . I see that the user in the cause is actually SYSTEM rather than the user that cancelled it . <p> What we see when the build is clicked through the X button in the running builds list . The log even says " Aborted by admin " but the user on the cause is actually SYSTEM . This effectively means that there is no good way to tell a timeout apart from a user abort outside of the input. - 
@@21562162 @1562162/ 66502 @qwx266502 66505 @qwx266505 <h> How to pass data between pipeline steps ? <h> Issue <p> Your pipeline script requires data during certain steps . 66501 @qwx266501 66503 @qwx266503 <h> Resolution <p> The Pipeline script needs to use the results of one of the calls to determine the input data to the next call . - This is possible pending- JENKINS-26133- by- writing the data to a file which is consumed by the next step . <p> Please note that the steps can be run on different nodes by doing the following : 
@@21562163 @1562163/ 66502 @qwx266502 66505 @qwx266505 <p> 2 ) Configure the project to " Build when a change is pushed to BitBucket " : <p> IMPORTANT : Build the project once to retrieve the Git data . <p> Note : It is possible to checkout multiple repositories in Pipeline . Be aware that when the Git plugin receives a notification that a certain repository has changes , any Jenkins pipeline that checkouts this repository using the git or the checkout step may be triggered if this step does not have poll : false specified <h> Configuration in Bitbucket Server side <p> Go to the Settings of a repository . Then go to the section Hooks and click on Bitbucket Server Webhook to Jenkins : <p> From now on , Push events to the repository notifies the Bitbucket plugin and triggers a new build . <h> Consideration <p> 1 ) You need to ensure that the Repo Clone URL configured is exactly the same as in the Jenkins job , if not the trigger will not work correctly . <p> 2 ) You need to ensure that your workspace is not deleted @ @ @ @ @ @ @ @ @ @ in order to compare previous commits to check if there were changes in the repository or not . <h> Pull Requests <p> ( We strongly encourage to use Pipeline Multibranch for such scenario ) <p> There is currently no simple solution to trigger jobs on Pull Requests for BitBucket Cloud . There is some work in progress in the Bitbucket Plugin to make this possible . This is tracked by JENKINS-23685. 
@@21562164 @1562164/ 66502 @qwx266502 66505 @qwx266505 <p> To overcome the demanding aspect , you can use the techniques discussed in the article Taming the Jenkins JSON api with depth and " tree " . Following shows how to retrieve all jobs name and the corresponding builds URL and keepLog option : ( jobsname , buildskeepLog , url = " I want jobs . For each job I want the name of the job and its builds . For each build I want the URL and the keepLog option " ) ( LONG ... = " I want the same as above including nested jobs ( inside folder(s) ) " ) 
@@21562165 @1562165/ 66502 @qwx266502 66505 @qwx266505 <p> Note : The 2.50 ( and newer ) versions of remoting ( slave.jar ) adds support for connecting through a proxy . If you have the httpproxy environment variable or the http.proxyHost system property defined for the agent process , it wont be able to connect to the master . If needed , please remove these and restart the Windows agent , then attempt to re-connect . If you are running CloudBees Jenkins Enterprise 1.609.1.1 or newer , you should have 2.50 or newerunless you upgraded from a previous release and the Windows agents did n't  get updated . <h> Updating The Windows Agent <p> If necessary , use this procedure to update the Windows agent to the version bundled with your CloudBees Jenkins Enterprise release <p> 1 ) Retrieve the version from **35;1000;TOOLONG <p> 2 ) Stop the agent process ( service ) on the Windows agent <p> 3 ) Delete the existing slave.jar on each Windows agent and replace it with the newly retrieved version . 
@@21562166 @1562166/ 66502 @qwx266502 66505 @qwx266505 <p> This configuration can be overridden for a specific agent in the node configuration . Under Manage Jenkins &gt; Manage Nodes &gt; $NODENAME &gt; Configure in the- section Node Properties- &gt;- Tool Locations . You can set the location of a specific tool on this agent . <p> From a job - or- a pipeline script - the tool- path used for the job depends on the node- allocated . If the job runs on the master , the path defined in the global configuration is used . If it runs on a node , the path defined on the agent configuration is used and if there is none , fallbacks to the global configuration . <p> If you have more than one Git tool configured and you need to select between them in the Pipeline , please use a checkout step in Snippet Generator . It will give you an option- called Git executable which will list all the available Git tools . <p> We found an obscure reference about what Denys said and can use that . And are . <p> As for @ @ @ @ @ @ @ @ @ @ strange " problem " . We are using cloud slaves set up in our CJOC . Since the CJOC ca n't install the Git plugin , git is not an option on the Global Tools config and we have to configure our Git tools at the master level . That means the Node Properties &gt; Tool Locations on the Agent ( which is configured on the CJOC ) does n't offer the possibility of entering a git tool . <p> I know the git plugin could be installed by upload on the CJOC . That 's a workaround I have n't completely figured out because of all the plugin dependencies and possible conflicts . I have asked for an issue to be created to allow installing some additional plugins on the CJOC ( including Git ) so that Global Tools can set up configurations using them . Also so I can run a pipeline job that does customized backup of CJOC config . All the plugins that contribute content to the Global Tools config should be allowed on the CJOC . I have n't checked that the issue was created @ @ @ @ @ @ @ @ @ @ Tool Installations to Operations Center Shared Configuration as an internal JIRA issue CJP-5743. - We are- exploring alternative ways of managing the configuration of a cluster of Client Masters , so this issue is not on the immediate roadmap and might be superseded by a new solution . 
@@21562168 @1562168/ 66502 @qwx266502 66505 @qwx266505 <p> 2 . If i have a cron to run a build periodically , is it possible to run the build by automatically taking default value defined for user input defined or assuming that value as null without user interference ? ? <p> It would be very helpful if you could extend this example with a variant in the declarative syntax . I 'm looking into a combination of this article ( getting user input ) and conditions ( what 's described here ) . 
@@21562170 @1562170/ <h> Intro to Plugin Development Workshop <p> Day 1 - 1:00 PM - 3:00 PM <p> Add-on at time of registration : - $99 <p> This workshop will introduce developers to the Jenkins plugin ecosystem and terminology . The goal is to provide a cursory overview of the resources available to Jenkins plugin developers . Armed with this information , Jenkins developers can learn how to navigate the project and codebase to find answers to their- questions . <p> This workshop is- not- going to teach you how to write Java , - etc . <p> Pre-requisites <p> Knowledge of Java : need n't be advanced , but an understand of Java code concepts and- structure <p> Steven is currently a support engineer at CloudBees . He is also lead programmer of Cobertuta - an open source code coverage tool for Java . He has been a Java developer since high school and started working with Jenkins ( Hudson , at the time ) in college . You can find more information about him at www.stevenchristou.com. 
@@21562173 @1562173/ 66502 @qwx266502 66505 @qwx266505 <h> Backup and Store Jenkins Jobs and Configuration in Source Control such as GIT or SVN <h> Issue <p> I would like to automatically check-in and backup my Jenkins jobs via GIT . How can I manage separate masters with different jobs that move between the masters ? <p> I would like manage plugin versions in a source control system . 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> There are several options , depending on your organizations SCM configuration and specific needs : <p> 1 ) Use CloudBees Backup Plugin to take a " Local directory " backup which would be a snapshot of your $JENKINSHOME/jobs/ directory . From here you can store the data in SCM for version control/history and disaster recovery purposes . <p> 2 ) Use the Workflow MultiBranch Featureprovided by the Pipeline Plugin . It requires the workflowdefinition to be stored in a Jenkinsfile in the project and will use it to build your project . As the job configurationis stored in the SCM , it can be moved to another master . <p> 4 ) To capture plugin @ @ @ @ @ @ @ @ @ @ , you can use the run the Jenkins CLI to do this:java -jar jenkins-cli.jar -s $JENKINSMASTERURL list-plugins ( append &gt; myinstanceplugins.txt " to this command to capture the output as a text file , from which you can check-in to source control ) <p> This command will return the job definition XML to stdout which includes the section that does contain all ofthe plugins available on the Update Center:java -jar jenkins-cli.jar -noKeyAuth -s $CJOCURL get-job CustomUpdateCenter <h> 1 Comments <p> 2 ) Where is the list of files that need to be saved ? If the pipeline job is going to collect the files , we need information on which files . <p> Perhaps the strategy is to take the latest zip or tar.gz file created by the backup job and update those in the scm . If so , it would store all the hpi and jpi files for plugin AND why would you need a list of plugins with versions . Further , hpi , jpi and war files are n't really good subjects for inclusion in an scm ( as are n't most binary files ) . @ @ @ @ @ @ @ @ @ @ zip/tar.gz , which files should be left out . <p> I think this article needs some more detail so everyone does n't have to duplicate the efforts . 
@@21562174 @1562174/ <p> Time to value is critical . Continuous delivery of containerized microservices is the best approach for developing better software and iterating fast to give more value to our customers. - However , it can be challenging trying to figure out how to take the theory of continuous delivery and turn it into a reality ; particularly with the large increase in the number of microservices- projects and the rapid innovations happening in the container- ecosystem . <p> In this talk , we 'll show how to use Jenkins Pipeline together with Docker and Kubernetes to implement a complete end-to-end continuous delivery and continuous improvement system for microservices and monolithic applications using open source software . We 'll demonstrate how to easily create new microservices projects or import existing projects , have them automatically built , system and integration tested , staged and then deployed . Once deployed , we will also see how to manage and update applications using continuous delivery practices along with integrated ChatOps - all completely- automated ! <p> Finally , we 'll walk through how to develop microservices-based applications to optimize features like service @ @ @ @ @ @ @ @ @ @ , circuit breakers , tracing , logging and metrics . After this talk you should be ready to set up your own end-to-end continuous delivery platform easily , with lots of automation and tooling . Let 's all go- faster ! <p> James is a long time open source contributor who created Apache Camel and the Groovy programming language . These days James works at Red Hat on an open source microservices platform based on Docker , Kubernetes and Jenkins called Fabric8 : http : //fabric8.io/ 
@@21562176 @1562176/ 66502 @qwx266502 66505 @qwx266505 <h> Cache warnings in catalina logging <h> Issue <p> A similar stacktrace than the one below is repeated all the time on your catalina logs . <p> 21-Jan-2016 18:36:17.531 WARNING http-nio-80-exec-4 LONG ... Unable to add the resource at **37;1037;TOOLONG to the cache because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache 21-Jan-2016 18:36:17.531 WARNING http-nio-80-exec-4 LONG ... Unable to add the resource at **43;1076;TOOLONG to the cache because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <p> Jenkins <p> Tomcat &gt;= 8 <h> Resolution <p> Increase the cache size instead of disabling it . The config block inside of the &lt;Context block on Tomcat 8 should fix the issue . <p> &lt;Resources cachingAllowed= " true " cacheMaxSize= " 100000 " /&gt; <p> That should clean up the cache warnings you were noticing . You can increase the cache size further if needed of course . 
@@21562178 @1562178/ 66502 @qwx266502 66505 @qwx266505 <p> 5 . Copy credentials.xml files from LONG ... to **32;1121;TOOLONG . This should be done in each folder you would like to migrate and should be adapted to your specific folder paths/structure . <p> 6 . Copy credentials.xml files from LONG ... to **31;1155;TOOLONG . This should be done in each of the users you would like to migrate . <p> 7 . Finally , restart the instances and the identity.key.enc should be regenerated on the new instance . <p> I would like to migrate my old Jenkins server 1.565.3 to a new Jenkins latest version on another instance . So , - I have copied all the files listed above . But I am still getting an issue with Git credentials . Can someone help me out on this . 
@@21562179 @1562179/ 66502 @qwx266502 66505 @qwx266505 <h> How to upload a plugin manually ? <h> Issue <p> How do I upload a plugin manually ? <p> Install plugin without UI access . 66501 @qwx266501 <p> Jenkins <h> Resolution <p> To upload a plugin manually there are two methods . <p> - <p> File System method <p> There might be a case where Jenkins will not start because of an incompatible plugin , or the plugins did not download successfully . The File System method is the only method for installing new versions of- plugins. - Just replace the . hpi/.jpi file with the new version and restart Jenkins . <p> NOTE : If you are upgrading a plugin to a newer version make sure to override the previously installed version . <p> - <p> Web UI method <p> To install via the web UI go to <p> Manage Jenkins <p> Manage Plugins <p> Advanced Tab <p> Upload Plugin <p> Select the plugin to upload and click the upload button . You should restart your Jenkins instance after the plugin has been uploaded. 
@@21562181 @1562181/ 66502 @qwx266502 66505 @qwx266505 <p> You can use the optional startup parameter **29;1188;TOOLONG to define the SSL Certificate used by the HTTP endpoint of CJOC if the endpoint uses HTTPS and if the SSL certificate is not trusted by the JVM SSL trust store . <h> Troubleshooting <p> The following groovy provides information about the client masters ( i 'd , idName , grantId ) defined in the CJOC . It must therefore be run on the CJOC : 
@@21562182 @1562182/ 66502 @qwx266502 66505 @qwx266505 <h> How to generate a thread dump ? <h> Issue <h> Resolution <p> In order to diagnose performance issues we can gather information about- what is happening inside the JVM while it is experiencing issues. - One of the tools used to help diagnose performance issues is a thread dump which displays all currently running threads . <p> Following , alternative methods are provided when Jenkins is not responding to web UI or complementary info was needed . <h> 1 . Get the PID of the Java process where Jenkins is running <p> To generate a thread dump the first part is to obtain the process i 'd ( or PID ) . - There are multiple- methods to obtain the PID : <p> jps -- From Unix Terminal or Windows Cmd with the JDK installed into the OS . It lists the instrumented Java Virtual Machines ( JVMs ) on the target system . <p> ps -efgrep jenkins - From Unix Terminal only . It is used to obtain the process i 'd of all java processes . <p> Process explorer - There are- task manager @ @ @ @ @ @ @ @ @ @ to obtain the process i 'd . Find the process and view its PID in the corresponding column . <p> On Windows and Linux ( Ubuntu ) is named as Task manager <p> On Mac OS is named as Activity Monitor <h> 2 . Get the thread dump <p> After obtaining the process i 'd ( **$PID** ) , - the next step is to generate the thread dump . There are multiple ways to obtain the thread dump . <p> kill -3 $PID - From Unix Terminal only . It will NOT kill the process , but instead generate a thread dump . This- NOT generate any output which is normal . The output of this command is sent to system err/out logs . <p> jstack $PID - From Unix Terminal or Windows Cmd with the JDK installed into the OS . It prints Java thread stack traces for a Java process , core file , or remote debug server . This commands need to be run with the same user as jenkins . For instance : <p> sudo -u $JENKINSUSER jstack -F $PID &gt; jenkins-threadump.txt <p> jcmd - The release @ @ @ @ @ @ @ @ @ @ Recorder , and jcmd utility for diagnosing problems with JVM and Java applications . It is suggested to use the latest utility , jcmd instead of the previous jstack utility for enhanced diagnostics and reduced performance overhead . This commands need to be run with the same user as jenkins <p> sudo -u $JENKINSUSER jcmd $PID Thread.print &gt; jenkins-threadump.txt <p> jconsole - From Unix Terminal or Windows Cmd with the JDK installed into the OS . The JConsole graphical user interface is a monitoring tool ( real time ) that complies to the Java Management Extensions ( JMX ) specification . JConsole uses the extensive instrumentation of the Java Virtual Machine ( JVM ) to provide information about the performance and resource consumption of applications running on the Java platform . <p> Generating a few of these- thread dumps during the performance issue would be required. - Attach the output generated from these commands to a cloudbees support ticket , so we can help diagnose further . <h> Notes <p> Some of these commands might require admin permissions . <p> When JDK is required ( it does not mean JRE @ @ @ @ @ @ @ @ @ @ run them from $JDKPATH/bin or from anywhere by including $JDKPATH/bin into your System $PATH . On the other hand , since JDK7 Update 21 , the server JRE includes these tools IIRC as well . 
@@21562183 @1562183/ 66502 @qwx266502 66505 @qwx266505 <h> Using an SSH agent to authenticate SSH connections <h> Issue 66501 @qwx266501 <h> Resolution <p> DEV@cloud 's default configuration is- designed for the convenience and simplicity of small / new users where a single shared credential is shared by all jobs . Typically this configuration is suitable where the Jenkins is used by a small team of trusted users . <p> DEV@cloud exposes a single shared idrsa or iddsa SSH private-key as a file to all jobs . <p> This SSH private-key is transferred directly to remote slaves for use in jobs . <h> Security / Compartmentalisation <p> For customers who require a higher level of compartmentalisation and control , the job administrator can configure SSH keys at a folder level using the Credentials plugin . <p> This will help mitigate risks of the SSH private-key being compromised intentionally or unintentionally by a job administrator . <p> Using the Credentials plugin allows the user to <p> configure an SSH key in a folder - and allow access to all jobs contained within that folder or below <p> configure the job to pass the SSH @ @ @ @ @ @ @ @ @ @ to securely provide access to remote resources ( using SSH authentication ) without exposing the SSH private-key material to the job . <p> Note : while the SSH private-key content is not directly exposed to the job , this key ( via the agent ) can be used to authenticate to any remote resource while the agent connection is open ( i.e. the job is running ) <h> Recommendations <h> Separate your environments into folders <p> You can create a folder " deploy-app " , and then sub-folders for production and staging . <p> The production folder will have production credentials , and the staging folder will have staging credentials . <h> Passphrase protect your SSH keys <p> Due to how the Credentials plugin works , your SSH private key can be copied back out of the credential configuration - while the passphrase can not . This provides an extra layer of protection . <p> It is possible for a suitably motivated Jenkins administrator to recover the passphrase . <h> Generate a 4096 bit key <p> ssh-keygen -t rsa -b 4096 -f test-key <h> Generating an SSH key <p> The @ @ @ @ @ @ @ @ @ @ scope for this article.Note : To ssh successfully , SSH Agents needs the public key ( matching with the SSH private keys which injects ) included into the /. ssh/authorizedkeys in the remote server to connect . <h> Configuring an SSH Agent <h> 1 . Select Folder <p> Navigate to the top level folder that requires SSH keys . <h> 3 . Select " Credentials " <p> On the bottom left navigation , select the " Credentials " link . <h> 4 . Select " Folder " <p> On the bottom left navigation , select the " Folder " link . <h> 5 . Select " Global credentials " <p> On the main display , select the " Global Credentials " link . <h> 6 . Select " Add credentials " <p> On the left navigation , select the " Add Credentials " link . <h> 7 . Select " SSH Username with private key " <p> From the dropdown , select " SSH Username with private key " <p> Fill in all the required settings . Use globally unique names for simplicity in configuring jobs . <p> Consider a @ @ @ @ @ @ @ @ @ @ 8 . Navigate back to folder <p> Select the main folder from the breadcrumb bar at the top of the page . <h> 9 . Create a new job <p> Add a new " item " <h> 10 . Add freestyle job <p> Note that you will need to configure each job separately - the SSH agent is not automatically added to each of the contained jobs . 
@@21562186 @1562186/ 66502 @qwx266502 66505 @qwx266505 <h> How to setup HTTPS within Jetty with Intermediate certificates ? <h> Introduction <p> The following concepts are needed to fully understand this article . <h> Intermediate Certificate <p> An intermediate certificate is a subordinate certificate issued by the trusted root specifically to issue end-entity server certificates . The result is a certificate chain known as Chained Root Certificates or Chain of Trust . <p> The client sends a request to the SSL server . <p> The server responds with the Identity and Intermediate certificates . <p> The client confirms authenticity of the Intermediate certificate by decrypting the digital signature using the Root CA public key . <p> Next the client confirms the authenticity of the Identity certificate by decrypting the digital signature using the Intermediates public key . <p> The client then clarifies that the URL that is being requested by matching the DN ( Distinguished Name ) within the Identity Certificate . <p> Traffic is then encrypted/decrypted by a ) the client using the public key b ) the server using the private key . <p> On the other hand , . key @ @ @ @ @ @ @ @ @ @ certificate and is merely a conventional name and not a standardized one . It is . pem formatted . <h> Issue <p> Installing SSL certificate chains in Jetty . <p> How to publish Jenkins using HTTPS with an intermediate certificate . <p> The Chained Root Certificates or Chain of Trust is broken . 66501 @qwx266501 66503 @qwx266503 <p> CloudBees Operation Center <p> Jenkins and the embedded Jetty HTTPS <h> Resolution <p> ##- Requirements : <p> An exiting SSL cert for Jenkins - As example , $MYJENKINS.pfx but other formats are also possible . <p> Identity Certificate files also known as Domain Certificate - $IDENTITY.crt . <p> Intermediate Certificate should have the same class as your Domain Certificate - $INTERMEDIATE.crt . <p> Root Certificate - $ROOT.crt <p> Notes : <p> a . Any of the certificates ( 2 , 3 and 4 ) start with " " BEGIN CERTIFICATE " " . Please , make sure there is an end-of-line at the end of the file . <p> b . Certificates 3 and 4 should be available to download from your SSL Issuer . <p> ##- Steps : <p> 1 . @ @ @ @ @ @ @ @ @ @ a . key file . By default , it is in . pem format so it needs to be converted into PKCS#12 because it is the format required by Jetty Winstone container . <p> a . If you have set different Jenkins environments ( for instance TEST , DEV and PROD ) , steps from 2 to 5 should be repeated in each of those environments.b . The resulting $MYJENKINS.keystore file must then be copied to each of machines to the path specified by **44;1254;TOOLONG parameter of the Jenkins Arguments . 
@@21562187 @1562187/ 66502 @qwx266502 66505 @qwx266505 <h> How to Install Several Windows Slaves as a Service ? <h> Issue <p> You want to connect multiple Windows slaves , each installed as a service . 66501 @qwx266501 66503 @qwx266503 <p> Windows <h> Resolution <p> Java Web Start offers the possibility to connect multiple slaves on the same machine . In addition , it is possible to install a JNLP slave as a service in Windows . Thus , this article is aimed to explain how to install multiple Windows slaves as services . <h> Install Several Slaves <p> 1 ) Create a slave to launch via Java Web Start <p> 2 ) There are different ways to launch the slave agent : <p> The easiest way is to access Jenkins from the slave machine , go to the node page **25;1300;TOOLONG and click on the Launch button . This downloads the file slave-agent.jnlp and runs it . <p> Another way is to run the command java -jar slave.jar -jnlpUrl LONG ... -secret &lt;my-secret&gt; described at **25;1327;TOOLONG <p> You can download slave-agent.jnlp from the client master , copy it to the slave machine @ @ @ @ @ @ @ @ @ @ is launched , you should see a popup in Windows . To install this slave as a service , click on File/Install as a service . <p> 5 ) The service appears in the services popup. ( run servcies.msc to see windows services ) . You can double click on the service to show its name : <p> 6 ) All slaves are installed with the same service display name in Windows : " Jenkins Slave " . In order to be able to install several slaves , the displayname needs to be modified . Run the following command as an administrator to change the display name of the service . <p> $ sc config displayname= " jenkins-slave-1 " <p> 7 ) For each slave you want to add and install as a service , reproduce steps 1 to 6 . <h> Configure Slave User <p> Although it is recommended to run master/slaves with a single jenkins user , it is possible to run each slave as a different user . This can be configured in the slave service properties , in the logon tab . For example , the @ @ @ @ @ @ @ @ @ @ Further Information <p> Further documentation can be found on the wiki regarding Windows slave . 
@@21562188 @1562188/ 66502 @qwx266502 66505 @qwx266505 <h> How to create a new node ? <h> Issue 66501 @qwx266501 <h> Resolution <p> If you would like to add an existing computer to your Jenkins master the first step is to go to Manage Jenkins &gt; Manage Nodes : <p> Next click on the " New node " option which will allow us to create a new node : <p> The next step is to set the node name ( can be any value ) : <p> After setting the value you should be taken to the nodes configuration page : <p> Please enter all the required values.There are also multiple ways to launch a Jenkins slave machine.Please select one of the methods for launching a new node.We recommend Windows to use JNLP , and SSH for linux machines . <p> After clicking the save button it should try to launch the slave machine , or prompt you for next steps for creating the machine . <p> Technically , it copies the XML configuration of the source node ( stored under- LONG ... Them redirect to the node configuration page in case you @ @ @ @ @ @ @ @ @ @ " , the node is launched . 
@@21562189 @1562189/ <h> Folders Plugin <h> Challenge : <p> As the number of projects and teams grow , so does the corresponding number of jobs running on Jenkins . Users find that they need to organize their projects and jobs to make management of them easier . Jenkins does not provide built-in functionality that addresses this- need . <h> Solution : <p> The Folders plugin allows you to organize jobs into hierarchical folders , much like how you organize files in directories in your file system . This allows you to group related jobs together - you can then group on things like department , projects and jobs in a specific folder . Folders can also define properties that are visible to jobs inside , enabling you to simplify branch and/or workflow- management . <p> Folders allows you to set security permissions ( with the- Role-based Access Control plugin ) on a per folder basis . Roles can be inherited ( or filtered out ) within the nested folder hierarchy . For example : the engineering department folder can give broad permissions to all engineers , but the project Foo sub-folder @ @ @ @ @ @ @ @ @ @ then allow you to rapidly clone a folder with its children intact . So you can create , for example , a template folder that can be copied and allocated to a new group coming onboard , yet it retains the same folder- hierarchy . <p> Finally , folders are namespace-aware . Therefore , you can have jobs with the same name that sit under different- hierarchies . 
@@21562190 @1562190/ 66502 @qwx266502 66505 @qwx266505 <h> Migrating from On-Premise Executors to standard agents <h> Issue 66501 @qwx266501 <h> Resolution <p> On-Premise Executors feature is going to be removed in favor of the standard Jenkins way of creating agents.After 24th April 2017 , only agents created from the standard Jenkins UI will be available in DEV@cloud.Former On-Premise Executors , launched using on-premise-executor or customer-managed-slave commands of the CLI , will not be able to connect to your instance anymore . <p> As a user of OPE , you have to convert your OPEs to standard agents.Thankfully , migrating is quite a simple process . You need to do the following steps : <p> follow Build Executor Status link on the left of Jenkins homepage to go to the agent management page <p> follow New Node link <p> choose a Node name and select Permanent Agent <p> select a launch method . We advise you to use Launch agent via Java Web Start , which creates a JNLP agent . Even if it is now supported to use SSH agents , JNLP agents work like former OPEs from a network perspective , @ @ @ @ @ @ @ @ @ @ You do n't  need to configure firewalls to let SSH traffic in , simplifying the migration from OPE . <p> connect the agent you 've just created . Refer to the following section for JNLP agents . <p> If you were using ephemeral OPE , you will to create a dedicated agent for each agent to connect.It is mandatory to use Java 8 to launch the JNLP agent process . <h> Connecting a JNLP agent <p> Like for former OPEs , there 's a extra configuration step involved to connect to the JNLP port in DEV@cloud.In a recent change to secure DEV@cloud network infrastructure , we removed the possibility to connect to the JNLP port directly.To allow using this port this while still keeping things secure , we 've added a proxy service.When starting an JNLP agent , you need to specify **44;1354;TOOLONG -Dhttp.proxyPort=3128 on the command line to tell the agent to use that hostname/port as a proxy for connecting to the actual Jenkins instance.Omitting this proxy setting will result in a connection failure . <p> Assuming you created a agent called agent1 , you will start it with the following @ @ @ @ @ @ @ @ @ @ require setting the HTTPS proxy of the JVM agent to our proxy service , you might encounter issues to connect to other HTTPS services like SVN.In that case , you should add a proxy exclusion by adding the JVM property -Dhttp.nonProxyHosts.Say you want to use the Apache Foundation SVN server and access https : **31;1400;TOOLONG , you would add **35;1433;TOOLONG to the JVM arguments.This would turn the complete command line to launch the JNLP agent to : 
@@21562197 @1562197/ 66502 @qwx266502 66505 @qwx266505 <h> What is a Jenkins Executor and how can I best utilize my executors <h> Issue <p> I 'd like to understand what is a Jenkins executor , and how to best manage executors 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> A Jenkins executor is one of the basic building blocks which allow a build to run on a node/slave ( e.g. build server ) . Thinkof an executor as a single " process I 'd " , or as the basic unit of resource that Jenkins executes on your machine to run abuild . Please see Jenkins Terminology for more details regardingexecutors , nodes/slaves , as well as other foundational pieces of Jenkins . <p> CloudBees Jenkins Operations Center ( CJOC ) has six licensing options.In most cases , the " License ( no dedicated executors ) " option is recommended , as this allows CJOC to manage the total pool ofexecutors , allocating to each of the CloudBees Jenkins Enterprise ( CJE ) instances as needed . <p> Using CJOC is the most efficient approach to making the most use of your available @ @ @ @ @ @ @ @ @ @ Slaves orShared Cloud resources aredefined at the parent CJOC level , the children CJE instances can scale up/down as needed to make the best use of the totalresources . It is a more efficient approach to define Shared slave resources using a total allocation of 40 executors at theCJOC level , than it is to define local slaves attached to 4 JE instances with each consuming 10 executors - a scenario thatis much more likely to result in queued builds due to Executor Starvation . 
@@21562198 @1562198/ 66502 @qwx266502 66505 @qwx266505 <h> Linux slave offline or unable to connect <h> Issue <p> Jenkins slave offline <p> Jenkins slave unable to connect 66501 @qwx266501 <p> CloudBees Jenkins Enterprise ( CloudBees Jenkins Platform ) <h> Resolution <p> A slave offline or connection issue may be caused by various network-layer issues , including a proxy setting defined on the slave ( but not the Jenkins master ) , or vice versa . Please ensure the server running the Jenkins master is able to connect to the slave/agent server by establishing an SSH session , or another configured means of connecting to it ( outside of Jenkins ) . Once connected , please confirm you are able to run the uname , java -version , and which java commands successfullyto validate a correct configuration . The Java version on the agent should match the version installed on the Jenkins master - please see CloudBees Jenkins Platform Supported Java Versions.If the slave/agent goes offline , it could also be due to an expired password . <p> If the above troubleshooting does not yield positive results , it may be necessary to @ @ @ @ @ @ @ @ @ @ 
@@21562200 @1562200/ 66502 @qwx266502 66505 @qwx266505 <h> RBAC : Limit the access in subfolders <h> Issue <p> Yo want to limit the access in- sub-folders <p> You have a folder structure similar to LONG ... and you want some users to have access to all the folders but only some of them access to- **33;1571;TOOLONG 66501 @qwx266501 66503 @qwx266503 <p> RBAC plugin <p> - <h> Resolution <p> Let 's say your folder structure looks like- LONG ... and you have the following groups imported from LDAP/AD or MockSecurity realm on your Jenkins instance . <p> For this- firstly we will create an admin role with admin permission so admin-group can access everywhere in the instance . You can do it by clicking in Roles-&gt;Manage once you are in the main Jenkins dashboard so outside of any job of folder . <p> And then we will give admin permission to this role . <p> Now , it is time to create an internal admin group and assign this role . So we need to click on Groups &gt; New Group from there main Jenkins dashboard . We create an internal group called admin-group-internal @ @ @ @ @ @ @ @ @ @ the admin role we created before at current level propagating . <p> You will assign admin-group as a member to this internal group <p> So finally you should have a group configuration- like the snapshot below : <p> Allow only read access to sub-folders- folder-child-1 and folder-child-2 . <p> The first thing we need to do is a team-A role which has Overall/Read and Job/Read access . <p> After this , at folder-parent level we need to create a- team-A-group-internal to map- team-A-group . For this , you need to click on Groups once you are situated at folder-parent level . <p> Assign the role team-A-group current level but not propagated . <p> You will assign admin-group as a member to this internal group <p> So at the end the team-A-group-internal configuration should look like : <p> Doing this you allow to access to the parent-folder but without watching anything inside . For this reasons , we need know to grant permission at- folder-child-1 level . <p> - <p> So at folder-child-1 you need again to map team-A-group-internal with- team-A-group . <p> However , in this case we will granted @ @ @ @ @ @ @ @ @ @ assign admin-group as a member to this internal group <p> So at the end the team-A-group-internal configuration should look like : <p> Doing this , members of- team-A-group will have only access to parent-folder to access to folder-child-1 and folder-child-2 , but they will not be able to see any job inside parent folder . Here is the overall group setting 
@@21562201 @1562201/ <h> Role-based Access Control Plugin <h> Challenge : <p> You need to have a sophisticated authorization strategy to control access to Jenkins jobs . At the same time , you desire flexibility in setting permissions that go beyond just the job level . For example , you may want to set permissions at a project or department level . You may also want to define secret projects that are only visible to the people permitted to view- them . <p> There are multiple authorization plugins available today but each comes with some limitations . The Role-based Access Control ( RBAC ) plugin provided with- CloudBees Jenkins Platform- provides a very sophisticated authorization strategy that exceeds the functionality of other available- options . <h> Solution : <p> The Role-based Access Control plugin gives a Jenkins administrator the ability to define various security roles that will apply to the system they administer . Once roles have been defined , the Jenkins administrator can assign those roles to groups of users . The assignment of roles can take place either at the global level or can be limited to specific objects within @ @ @ @ @ @ @ @ @ @ delegate the management of groups for specific objects to specific- users . <p> The Role-based Access Control plugin combines with the- Folders plugin- to provide a powerful solution for managing a Jenkins installation that is shared by multiple teams of users . The Jenkins administrator can create folders for each of the teams and then create groups in those folders for each of the roles that team members are assigned . By delegating the management of the group membership ( but not the management of the roles assigned to groups ) to the team leaders , the Jenkins administrator can empower the team leads to manage the permissions of their team , while reducing the administrative- overhead . <p> You can learn more in the- Role-based Access Control webinar . The Role-based Access Control plugin allows the administrator to create a role , which is a set of permissions , then leave it up to team leads and other authorized people to control who gets those roles on any given project . This separation makes it easier for teams to set the right access control , without the tediousness of @ @ @ @ @ @ @ @ @ @ picking up group information from external systems , such as Active Directory , the- CloudBees Jenkins Platform let 's you define groups locally , even at the folder level . This allows each team that shares the same CloudBees Jenkins Platform instance to rapidly add/remove members of the team , without requiring coordination with either the corporate IT or the Jenkins- administrator . 
@@21562202 @1562202/ 66502 @qwx266502 66505 @qwx266505 <h> Issue <p> I would like to populate a Choice Parameter drop-down with artifact information from Nexus , using the Nexus REST API . This is an alternative approach to using the Repository Connector Plugin . Some customers have reported having issues using this plugin . I would investigate using this plugin first before reading on . <p> For example - LONG ... will return artifact information for group i 'd jboss , artifact i 'd jboss-j2ee and type jar , from the JBoss Nexus Repository https : **29;1606;TOOLONG . You can test the query in your browser to see the XML results returned by the API . <p> Now we are going to use some simple Groovy to query the API using the HTTP query we just described , extract the results and populate the drop-down . The code goes in the Groovy System Script field that the System Groovy Choice Parameter provides . <h> Pipeline Integration ( Optional ) <p> Let 's assume that when setting up a new parameter using the Extensible Choice Parameter Plugin that you gave the parameter you created the Nametest . @ @ @ @ @ @ @ @ @ @ in your Pipeline . <p> The fetching of the URL content failed . The path section is wrong . You need to figure out if you are using the right URL. - You can try to open it in the browser to see if it resolves to the expected thing . If it does , it is likely that your local environment is different from Jenkins , e.g. corporate DNS or Proxy servers . <p> I altered the URL to suit our needs and it just does not work . When i checked the network traffic in chrome i see in most cases the url includes- " service/extdirect " and do not see the " service/local/lucene " . Should it not be the same ? I am using Repo Manager Nexus 3. x 
@@21562203 @1562203/ 66502 @qwx266502 66505 @qwx266505 <h> Step 2 : Assign Security Group <p> Choose a security group that allows access to the desired groups of users <h> Step 3 : Configure Security Settings ( optional : read below ) <p> Needed if HTTPS / SSL is enabled.Note : It is required to use SSL certificates that are by default trusted by the JVM . Using a self signed certificate or a certificate generated by an enterprise Certificate Authority requires a better understanding of HTTPS / SSL and more configuration . <h> Step 4 : Configure Health Check <p> Ping Protocol : HTTP <p> Ping Port : 8888 ( the HTTP endpoint of Operations Center ) <p> Ping Path : /ha/health-check <p> Response timeout : 5s <p> Interval : 30s <p> Unhealthy Threshold : 2 <p> Healthy Threshold : 10 ( this default value can be lowered to 4 in most use cases ) 
@@21562206 @1562206/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Related Issues <h> Resolution <p> IMPORTANT : The following approach is a workaround and should not be used once JENKINS-37658 has been fixed <p> For MultiBranch Pipelines , the source code can be checked out with a simple checkout scm in the Jenkinsfile . In some cases , a different behavior needs to be defined for specific branches . For that , there is a pipeline-as-code solution . <p> The checkout step accepts the scm variable . This variable references an Object which means that attributes of this object can be accessed via scm. $attributeName . Therefore the checkout scm can be customized . <p> With one difference though : in the latter the access to scm. * attributes need to be whitelisted by an administrator in Jenkins <h> Some Explanation <p> In the context of Pipeline Multibranch , for each branch the SCM configuration is " injected " in the variable scm . <p> This variable is an object implementation of an SCM . For example with Git , the scm references a GitSCM Object . You can see that in @ @ @ @ @ @ @ @ @ @ By default , the snippet generator for checkout &gt; git will generate something like the following : <p> This object contains attributes , for example branches , extensions , userRemoteConfigs . Inside the Jenkinsfile , these attributes can be accessed via scm.branches , scm.extensions , scm.userRemoteConfigs . Some attributes are mandatory , some are optional or have a default value and therefore do n't  need to be specified . <p> Note : While the Snippet Generator gives a pretty good idea of the attributes accessible , it is sometimes required to have a look at the source code to understand how to map them to the constructor . <h> Implications <p> When the Pipeline is read from SCM - like for Multibranch Pipelines - it is sandboxed ( see Script Security Plugin ) . This means that any access to scm attributes need to be approved by an Administrator in Jenkins . This can be controlled under Manage Jenkins &gt; In-process Script Approval . <h> Example <p> So we have seen that it is possible to customize our checkout scm step . Here is a simple scenario : for all @ @ @ @ @ @ @ @ @ @ carry on with my workflow whereas for the release/* branches I want to Clean before Checkout - which is a Git additional Behavior : <p> For all branches , my Jenkinsfile looks like this : <p> node checkout scm //Build , Test , Stage , Deploy ... <p> In my feature/* branches , I want to Clean After Checkout so I am gon na change the Jenkinsfile . I use the Snippet Generator for checkout &gt; Git and add the the Additional Behavior Clean After Checkout . <p> I need to add the $class : ' CleanCheckout ' to extensions . Attributes other than branches and userRemoteConfigs do n't  need to be specified in my case . So I modify the Jenkinsfile and append this attribute to the scm.extensions that are passed to the flow : 
@@21562207 @1562207/ 66502 @qwx266502 66505 @qwx266505 <h> Configuration in Bitbucket Server side <p> Go to the Settings of a repository . Then go to the section Webhooks and click on Add Webhook : <p> Give it the name you want and specify the Bitbucket Branch Source endpoint **27;1637;TOOLONG : <p> Ensure that the webhook is created and enabled : <p> From now on , Push events to the repository notifies the Git plugin and triggers a new build . <h> Pull Requests <p> ( We strongly encourage to use Pipeline Multibranch for such scenario ) <p> There is currently no simple solution to trigger jobs on Pull Requests for BitBucket Cloud . There is some work in progress in the Bitbucket Plugin to make this possible . This is tracked by JENKINS-23685. 
@@21562208 @1562208/ 66502 @qwx266502 66505 @qwx266505 <h> 2 Comments <p> Does the fixed port number matter ? When there is more than one master does each master need a unique fixed port number or should- all of- the fixed port numbers be the same . Is the fixed port number used in HA setups ? <p> No , it should not , - unless it conflicts with any other service on the host . <p> We recommend unique ports . <p> Fixed port is necessary- largely to support firewalls. - In HA setup we recommend- avoiding proxying the JNLP- port with a reverse proxy but configure Jenkins in such way that enables direct communication of agents to- the primary node . Please refer- to- How to set-up a CJP HA environment with HA Proxy . <p> If you experience any issues with connection between Operations Center and Client Master please consult the Troubleshooting section of the knowledgebase 
@@21562209 @1562209/ <h> Templates Plugin <h> Challenge : <p> You have common configuration scenarios that are replicated in multiple places . Making changes to any of the scenarios requires you to go to each configuration and change it manually . The manual process is error-prone and can not be replicated easily . Thus , you can not easily share best practices within various projects or- jobs . <h> Solution : <p> The Templates plugin , available with the- CloudBees Jenkins Platform , captures the sameness of configuration in multiple places . Administrators define templates of jobs/build steps/publishers and replicate them while creating new jobs . Changes are made in one central location and are reflected in all dependent- configurations . <p> The Templates plugin let 's you define four types of- templates : <p> Builder Usually , developers have to create build steps as shell scripts to address enterprise requirements , such as those for : custom deployments , packaging , notification and QA integration . These scripts are used for a large set of jobs and only differ by a few attributes . Maintaining such scripts and avoiding copy/paste mistakes can @ @ @ @ @ @ @ @ @ @ creates a new type of builder and avoids the need for users to copy scripts from one job to- another . <p> Job In many enterprise contexts , it is common for two projects to differ only by- the project name . Similarly , source code management , repositories or QA servers only differ by a sub-directory in a URL . For example , code may be hosted at **31;1666;TOOLONG , a dedicated Maven repository may be set at **40;1699;TOOLONG , a QA Sonar instance may run at **28;1741;TOOLONG , and so forth . Job templates can be used to represent this model in an enterprise development environment by letting projects only define the minimal variable configuration to apply to the model . Thus , a job template offers a higher level of abstraction as it templates the definition of a whole- job . <p> Folder Administrators can configure a folder template that sets specific properties on a particular type of folder . Every time a new folder is created , it inherits those properties . Thus , the folder template is a way to define a standard structure for @ @ @ @ @ @ @ @ @ @ and in a simplified configuration . <p> The folder template can be used to define a set of jobs ( that can themselves be defined by templates ) to follow enterprise rules and best practices . Such a template defines the activities that a user will have to follow when using the template . You can then create a full wizard for a user to create the adequate folder and jobs structure for a new project . <p> Some examples of jobs might include : <p> an SCM continuous integration- job <p> a continuous inspection nightly job to populate a Sonar QA- server <p> a continuous deployment job to push successful builds on a demo- server <p> Auxiliary Auxiliary templates only define attributes . They are not expected to be used by end-users , but are useful to encapsulate a reusable set of attribute definitions that can used by other- templates. 
@@21562210 @1562210/ 66502 @qwx266502 66505 @qwx266505 <h> How to have the embedabble-build-status from my secured instance ? <h> Issue <p> When I configure the role anonynous to have the permission Job/ViewStatus on my instance , I still get a 404 error page when I try to access the unprotected build status provided by the Embeddable Build Status plugin . How do I need to configure my instance to have this status icon ? 66501 @qwx266501 <h> Resolution <p> Due to the DEV@cloud context , giving the anonymous role the permission Job/ViewStatus is not enough . Users still have to authenticate through our log in page . However , it is possible to change that by activating an option in the global configuration of your instance . The option is Enable read-only access for anonymous users : <p> This is not authorizing anonymous users to see your jobs , configurations or anything . But it is mandatory to be able to get access to the /buildStatus ? job=** URL for the unprotected Embeddable Build Status image . 
@@21562212 @1562212/ 66502 @qwx266502 66505 @qwx266505 <h> How to add a user to a CloudBees account ? <h> Issue 66501 @qwx266501 <h> Resolution <p> You can have multiple users on one account ( of course never share login details with anyone ! ) . To add users you must be an Admin . If you 're a User you should contact an Admin on the account to promote you or modify the account as needed. - <h> How to add a user to a CloudBees account <p> 1 . Go to " Account Settings " by clicking on the gear in the top right-hand corner of the Console : <p> 2 . Scroll down to the " Account Users " section : <p> 3 . Click on the " Add " button in the top right-hand corner of that section . <p> 4 . Enter user details <p> For existing CloudBees user , you just have to enter the email and assign them a role ( user or admin ) : <p> For a new user , you 'll have to fill in all of the fields and assign them a username for Forge + a password : 
@@21562214 @1562214/ 66502 @qwx266502 66505 @qwx266505 <h> How to check out subversion to a specific revision ? <h> Issue <p> I would like to checkout a project to a specific SVN revision <p> I would like to checkout a project to a specific branch or tag 66501 @qwx266501 <p> CloudBees Jenkins Enterprise ( CJE ) <p> Subversion Plugin <h> Resolution <p> Specify the subversion repository URL to check out , such as " http : **31;1771;TOOLONG " . You can also add " @NNN " at the end of the URL to check out a specific revision number , if that 's desirable . <p> Key concepts : <p> Revision numbers in Subversion are pretty straightforward " integers that keep getting larger as you commit more changes to your versioned data . <p> Subversion has no internal concept of a branch or tag , it knows only how to make copies . When you copy a directory , the resultant directory is only a branch or tag because you attach that meaning to it . Branch or tag is just an ordinary directory that happens to carry some extra historical information . @ @ @ @ @ @ @ @ @ @ the repository . The location of the directory does n't  matter to Subversion . Most teams follow a convention of putting all branches into a " /branches " or " /tags " directory , but you 're free to invent any policy you wish . <h> Case A : Checking out to the " revision 3 " of the " trunk " <p> Started by user ... Building remotely on ... in workspace ... Checking out a fresh workspace because there 's no workspace at ... Cleaning local Directory . Checking out https : **36;1804;TOOLONG at revision 3 A README.md At revision 3 ... Finished : SUCCESS 
@@21562215 @1562215/ 66502 @qwx266502 66505 @qwx266505 <h> How to Configure SonarQube plugin for HTTPS Sonar Server ? <h> Issue <p> I have a Sonar server configured with HTTPS and want to configure the SonarQube plugin in Jenkins to use it <p> My job fails to build because of the following exception with the Sonar Scanner : <p> 10:05:19.726 ERROR : Error during SonarQube Scanner execution LONG LONG ... Caused by : **31;1842;TOOLONG : Fail to download libraries from server at LONG ... at LONG ... at LONG ... at LONG ... ... 8 more Caused by : **35;1875;TOOLONG : **41;1912;TOOLONG : PKIX path building failed : LONG ... unable to find valid at LONG ... ... 11 more Caused by : **41;1955;TOOLONG : PKIX path building failed : LONG ... unable to find valid ... at LONG ... ... 34 more Caused by : LONG ... unable to find valid certification path to requested target at LONG ... at LONG ... at LONG ... at LONG ... ... 40 more 66501 @qwx266501 <h> Resolution <p> You need to import the SonarQube certificate into the JVM that runs the SonarQube Scanner . <p> In Jenkins , when you want to trigger a SonarQube analysis you need to define a SonarQube Scanner ( in the tool configuration ) . The SonarQube Scanner runs on the node that is assigned to the build and it runs in a forked JVM process . The certificate should be available to that JVM process . <p> In @ @ @ @ @ @ @ @ @ @ <p> Import the SonarQube SSL certificate in the keystore <p> Configure SonarQube plugin in Jenkins so that the keystore is passed to the Sonar Scanner <p> There are 2 ways of configuring this in Jenkins , globally or per project : <h> Global Configuration <p> In the global configuration under Manage Jenkins &gt; Configure System &gt; SonarQube servers , you can add Additional arguments that will be used by all jobs using that server : <h> Project Configuration <p> In the project configuration , under Build &gt; Execute Sonar Scanner , you can add Additional arguments . This is where you can specify the truststore that will be passed to the JVM process : <p> Note : In both cases , the keystore location should be available to all node that runs the Sonar Scanner . <h> Troubleshooting Tips <p> Additionally , you can add other flags to debug SSL issues for the Sonnar Scanner : <p> -X : Activate debugging of the sonar execution <p> -Djavax.net.debug= " ssl , handshake " : Activate debugging of the SSL Handshake between JVM process running the scanner and the Sonar Server 
@@21562218 @1562218/ 66502 @qwx266502 66505 @qwx266505 <h> Why do agents show as suspended while jobs wait in the queue ? <h> Issue <p> Operation Center agents show as suspended while jobs wait in the client master queue . <p> Why are my agents showing up as suspended ? <p> How to switch to a different strategy for my JOC agents ? 66501 @qwx266501 <p> CloudBees Jenkins Operations Center ( JOC ) <p> Shared Agent and/or Shared Cloud <p> Client masters ( CMs ) and/or Managed Masters ( MMs ) <h> Resolution <h> Starting points <p> Under the described environment , CM can share agents which means that they will be competing for the same agents <p> The pattern seen is that the JOC agent(s) get picked up by the first CM . The first CM has jobs being queued at a rate sufficient that the agent(s) is/are always in use . <p> Once a JOC agent serves its executors to a CM , the rest of the CMs/MMs do not have access to that JOC agent until is released . Under the executing service , one JOC agent can just each @ @ @ @ @ @ @ @ @ @ that JOC agent goes back under the JOC control recover all its defined executors , ready for the next or the same CM . <p> Each CM has its own queue and JOC does not know the size of the queue that it is being requested to provision against . Most critically of all , each CM is unaware of the needs of the other CMs/MMs . <p> There are a number of different factors that come into play : <p> The number of executors per agent <p> The rate of jobs arriving <p> The length of time that each job takes to complete <p> The strategy for retaining agents on a master <h> Strategies <p> Four different strategies have been tested against a variety of conditions . <p> Single shot - where the agent is retained until at least one build has completed . <p> Single shot ( multi-executor ) - where the agent is retained until at least one build has completed and at most one build per executor has completed . <p> Multi shot - where the agent is retained until at least one build has completed @ @ @ @ @ @ @ @ @ @ completed . <p> Monopolising - where the agent is retained until there are no jobs in the queue for the agent to execute builds on . <p> JOC 1.0 was released with Single-shot retention strategy and the recommendation to configure shared agents for one executor only . Single-shot gives very good and consistent behaviour . The key metric ( average time between entering the queue and starting execution ) would behave as you would expect based on experience with a standalone master . i.e. it is purely a function of the size of the work pool , the rate of jobs arriving and the length of time jobs spend executing ( with some modification for the provisioning delay required as the length of time executing nears 0 ) . <p> Obviously , it can be tricky to configure many agents ( there are some techniques to make it easier ) , so in response to requests to support more than one executor per agent , Single shot ( multi-executor ) comes to action . This , unsurprisingly , gave the highest throughput of builds when looked at as a cluster @ @ @ @ @ @ @ @ @ @ this strategy as our default . <p> When you have a single CM , the overhead of lease and release means that the Monopolising strategy is the best . As soon as you have more than one CM ( and the whole point of JOC is that you have more than one CM ) , is there is any contention at all for the agents that the CM need then the Monopolising Strategy leads to queue explosions this is especially the case where the agents have more than one executor . As mentioned , once JOC agents serves to a CM , other CMs/MMs never get a chance to use that agent ( hence why it is called Monopolising strategy ) . What you then see is that the number of jobs in the queue on the other masters explode and the key metric ( average time between entering the queue and starting execution ) across the cluster skyrockets . <p> Switching to Multi-shot counteracts this issue . Multi-shot has been tested with the count at 100 , 50 and 20 builds . What has been found was that the @ @ @ @ @ @ @ @ @ @ the queue and starting execution ) across the cluster skyrocketing increased as the count increased , IOW 20 was less likely than 50 to go rouge , 50 was less likely than 100 . <p> None monopolising strategies keep a count of the number of builds that have started on the agent . As soon as that count goes above the strategies limit , it marks the agent as suspended ( which is how you tell Jenkins not to assign any more work to that agent ) . <h> How to switch to a different strategy ? <p> By default , JOC comes with **28;1998;TOOLONG , then depending on # of executors <p> Single shot - # of executors = 1 . <p> Single shot ( multi-executor ) - # of executors &gt; 1 . <p> To leave Single **30;2028;TOOLONG property needs to be updated in the Client Master side 
@@21562219 @1562219/ 66502 @qwx266502 66505 @qwx266505 <p> On the other hand , . key is a file containing just the private-key of a specific certificate and is merely a conventional name and not a standardized one . It is . pem formatted . <h> Issue <p> You want to use a SSL certificate in your Jenkins server . <p> You want to have Jenkins using HTTPS with the Jetty container . 66501 @qwx266501 66503 @qwx266503 <p> CloudBees Operation Center <p> Jenkins and the embedded Jetty HTTPS <h> Resolution <p> Jenkins is built with an internal web container called Jetty.Jetty has the ability to serve HTTPS as one of the methods of authentication . <p> Note : At the time of writing this article , the jetty container currently does not support PKCS#8 format.If you are using another format like PKCS#8 format it is required to convert the format for Jetty to understand.If you already have the certificate in a different format , then it is safe to skip this step.The first step is to convert the certificate file ( crt ) to a pem file : <p> openssl x509 -in jenkins-cert.crt @ @ @ @ @ @ @ @ @ @ to PEM , then the certificate should be converted to PKCS#12.Note Please make sure to use a password . Having a certificate without a password throws exceptions later on . <p> The next step is to create a Java Keystore.In this part we will be creating an empty keystore.The values used for the keystore can be anything as we will be deleting the certificate leaving it a blank keystore:Note Please make sure to set a password for the keystore also . <p> keytool -genkey -alias jenkins -keystore jenkins.jks <p> Next step is to delete the certificate which was genearted from the above step : <p> keytool -delete -alias jenkins -keystore jenkins.jks <p> The final step is to take the certificate and import it into the java keystore.This command will look different depending on the format of certificate : <p> The final step is to add the certificate to the list of Jenkins arguments . This will tell the jetty container which certificate to use . Depending on how Jenkins was installed , the JENKINSARGS variable needs to be altered to contain the following : <p> The httpPort=-1 will tell the @ @ @ @ @ @ @ @ @ @ switching from an already existing Jenkins instance using https it is recommended to leave the httpPort alone and play with the https port only . Once the Jenkins instance looks good rendering https then the http port can be set to -1 . The httpsKeySore and httpsKeyStorePassword are variables which were set when creating the empty keystore.The httpsPort will tell the jetty container to use https on any port ( no default value ) . 
@@21562221 @1562221/ 66502 @qwx266502 66505 @qwx266505 <h> Host Key Verification for SSH Agents <h> Issue <p> I upgraded the SSH Slaves plugin to the latest and I see the following warning in Manage Jenkins : SSH Host Key Verifiers are not configured for all SSH slaves on this Jenkins instance . This could leave these slaves open to man-in-the-middle attacks . Update your slave configuration to resolve this <p> My agents fail to connect to my Jenkins master with one of the following stacktrace : <p> 04/03/17 10:03:51 SSH Opening SSH connection to AGENTHOSTNAME:22. 04/03/17 10:03:51 SSH WARNING : No entry currently exists in the Known Hosts file for this host . Connections will be denied until this new host and its associated key is added to the Known Hosts file . Key exchange was not finished , connection is closed . java.io.IOException : There was a problem while connecting to AGENTHOSTNAME:22 <p> 04/04/17 08:45:39 SSH Opening SSH connection to AGENTHOSTNAME:22. 04/04/17 08:45:39 SSH WARNING : The SSH key for this host does not match the key required in the connection configuration . Connections will be denied until until the host @ @ @ @ @ @ @ @ @ @ finished , connection is closed . java.io.IOException : There was a problem while connecting to AGENTHOSTNAME:22 66501 @qwx266501 <h> Related Issues <h> Resolution <p> Until now , SSH Agent were launched without using any Host Key verification which was a security concern . The release of SSH Slaves plugin1.15 fixes this by introducing a Host Key Verification strategy to SSH Agents . This new feature is designed to prevent man-in-the-middle attack as explained in the Jenkins Security Advisory 2017-03-20 . <p> Note : The Man-in-the-middle attacks happens when a server pretend to be the remote Host , between you and the server you intend to connect to . In that case you are connecting to the " man-in-the-middle " that can intercept the information you transmit when you try to authenticate and use them to establish connection with the remote host . <h> What is SSH Host Key Verification ? <p> Host Keys are stored on the SSH Server under /etc/ssh/ and are used to identify the server ( Jenkins agents acts as SSH Servers ) <p> The SSH Client keeps a list of Host keys that he trusts under @ @ @ @ @ @ @ @ @ @ ) <p> The purpose of Host key verification is to ensure that you are connecting to the right remote host - the host you intend to connect to . Host keys are stored in the Known Hosts file ( usually under /. ssh/knownhosts ) . When the SSH Client initiates a connection to a remote host , the remote host ( *SSH Server* ) sends its Host Key . The SSH Client then goes through this Known Hosts file and looks for existing host keys for this host . If one is found , it checks if the host key send by the remote host matches the Known host key . <p> The verification can fail for different reason . For more details , have a look at the Troubleshooting section below . <h> How to fix the Warning ? <p> It is recommended to use an Host Key Verification strategy when configuring an SSH Agent . If none is selected - because you just upgraded - you will see the warning SSH Host Key Verifiers are not configured for all SSH slaves on this Jenkins instance . This could @ @ @ @ @ @ @ @ @ @ slave configuration to resolve this . <h> Manually trusted Verification Strategy <p> With this configuration , an authorised Jenkins user with Computer.CONFIGURE need to manually approve/disapprove the remote host key in Jenkins if it has changed . Once approved , the host key will be marked as trusted . <p> The host key received on the initial connection will be automatically trusted . You have the option to enable Require manual verification of initial connection so that even the first connection requires approval from an authorised Jenkins user . <p> Example : Approval on initial connection : <p> Example : Approval after change of remote Host Key : <p> Note : You need to relaunch the agent manually after approving the host key <h> Non verifying Verification Strategy <p> This is the legacy behavior . It does not perform Host Key Verification and is considered unsafe . <h> Considerations for Shared Agents <p> Some strategy are not suitable for Shared Agents . <p> A Shared Agent is meant to be provisioned to Client Masters and therefore only connects when provisioned . The shared agent item on the CJOC is simply @ @ @ @ @ @ @ @ @ @ the Client Master master that requests it . The connection - and therefore the Host Key verification - only happens between Client Master and Provisioned agent . <p> In this regards , some strategy might be more appealing and suitable than others : <p> Manually provided Verification Strategy : No configuration on the master . Provide the Host Key once in the Shared Agent configuration . <p> Manually trusted Verification Strategy : No configuration on the master . Note that if Require manual verification of initial connection is ticked , every time the node is provisioned an authorised user of the Client Master will have to manually hit Trust SSH Host Key . So this option is not really suitable for Shared Agent . <h> Troubleshooting <p> If the agent logs shows the IOException The server hostkey was not accepted by the verifier callback , then the Host Key verification fails when connecting the agent , and you need to fix it . You can troubleshoot this from masters machine logged in as the jenkins user with the command : 
@@21562222 @1562222/ 66502 @qwx266502 66505 @qwx266505 <h> On the Jenkins Side <h> Install the Jenkins Slack plugin <h> Slack Notification Plugin configuration <p> 5 . Go to Manage Jenkins &gt; Configure System &gt; Find the Global Slack Notifier Settings section and add the provided values in the instruction for Team Domain and Integration Token . The other fields are optional . Press the Save button . <p> 6 . Click on Test Connection to verify that your settings are correct . <h> For each job you wish add Slack Notification <p> 7 . For each Project that you would like receive notifications for , choose Configure from the projects menu . For instance " example " . <p> 8 . Once , you are in the job configuration add a Slack Notifications to the Post-build steps . <p> 9 . In the Slack Notifications section . Choose the events youd like to be notified about . <p> 10 . Click on Advance to enter a custom message that will be included with the notifications . Include build variables in the form Jenkins Environment Variables by putting $VARNAME where you want it @ @ @ @ @ @ @ @ @ @ On the Slack Side <p> Expected output : After building the job ( " example " ) on the chosen Slack channel ( " #jenkins-builds " ) a similar output like this will be shown 
@@21562223 @1562223/ 66502 @qwx266502 66505 @qwx266505 <h> How to manage offline slaves using groovy ? <h> Issue <p> I have some slaves connected via ssh and some slaves ( windows ) connected via swarm plugin . Many times these slave go offline and can not recover . I manually remove them by going to node &gt; slave &gt; delete slave . <p> How can I do this via groovy ? Basically get a list of offline slaves , check the slave log for some text , if text matches some string delete this slave . 66501 @qwx266501 66503 @qwx266503 <p> Swarm plugin <p> Windows <h> Resolution <p> Were- not aware of a- script that has already coded this for exactly what you 're looking for . However , in the Jenkins Script Console- you can- find some examples similar to what you want . 
@@21562229 @1562229/ 66502 @qwx266502 66505 @qwx266505 <p> Here we are keeping track of which stages have passed already . When the build is first run , we try them all , recording successes , and just setting the build status to failed in case any fail ( but proceeding ) . The last if-block is skipped . If you resume from the checkpoint , the whole sequence is run again ( from the last if-block ) , but skips over anything which passed earlier . <p> This works around CJP-1621 for a single resumption . If something fails again the second time around , and you resume from checkpoint again , the third build will retry the same stages , even ones that did pass in the second build . I am not currently seeing a way to fix that . 
@@21562230 @1562230/ <h> Birds of a Feather Session : Perfecting Your Development Tools : Updates to the Helix Plugin for Jenkins <p> Considering a mono repo that can manage all your source code , binary and other assets ? Join us at the Perforce Birds of a Feather Session for updates and discussions around the Helix Plugin for Jenkins ( or P4- plugin ' ) . <p> This session will look at the latest DSL PipeLine support in the P4 plugin ' for Jenkins and will include a live demo . We will show you how to map your Branches and Streams into a Jenkins Workspace , publish assets back into Helix , and more . You may even get a sneak preview at the latest P4 plugin ' for Jenkins that allows you the freedom to query and run commands from within Jenkins directly against your Helix- connection . <p> Paul AllenSenior Integration Engineer Perforce <p> Paul Allen joined Perforce in September 2008 as a technical support consultant . Paul has worked with Perforce customers throughout Europe on a variety of consulting projects , as well as conducted both public @ @ @ @ @ @ @ @ @ @ senior design engineer for Renesas , in the automotive infotainment sector . Paul is an experienced embedded C developer and has worked with both Tier 1 manufacturers and their customers to develop prototype solutions for product development . In his spare time , you will find him hanging off a rock face or anything else that has climbing potential . 
@@21562232 @1562232/ 66502 @qwx266502 66505 @qwx266505 <h> Jenkins fails to start due to Multi-Branch Project Plugin in Windows <h> Issue <p> Jenkins fails to start with the following stacktrace : <p> **30;2060;TOOLONG : **41;2092;TOOLONG : java.lang.Error : **43;2135;TOOLONG at **44;2180;TOOLONG Caused by : **41;2226;TOOLONG : java.lang.Error : **43;2269;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at **44;2314;TOOLONG Caused ... at LONG ... at **37;2405;TOOLONG Caused by : **43;2444;TOOLONG at LONG ... Method ) at LONG ... at LONG ... at LONG ... at LONG ... ... 8 more Caused by : java.io.IOException : Tried to treat ' D : **31;2489;TOOLONG ' as a directory , but could not get a listing at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... ... 13 more 66501 @qwx266501 <h> Related Issues <h> Resolution <p> This is related to the latest version 0.5.1 of the Multi-Branch Project Plugin . It @ @ @ @ @ @ @ @ @ @ go recursively through the $JENKINSHOME/jobs folder , looking for config.xml files . Unfortunately in Windows this process fails when it encounters symbolic links . It is captured by JENKINS-36896 . <p> If you already have Multi-Branch projects or want to use Multi-Branch project , you must downgrade to the specific version 0.5 . Otherwise the workaround is to uninstall the plugin. 
@@21562239 @1562239/ 66502 @qwx266502 66505 @qwx266505 <h> 1 Comments <p> Use-case : when running this Sonar Analysis build on a distributed build-node ( and not the master itself ) - If you see an error related to JDBC source or db connection failure , then provide additional args for jdbc source and make sure the build-node is able to connect with that jdbc source ( IP/port ) . try with this additional arg ( sample values shown ) - LONG ... ( replace with actual jdbc url ) 
@@21562240 @1562240/ <p> Many of us have already experimented with Docker - for example , by running one of the pre-built images from Docker Hub . It is possible that your team might have recognized the benefits that Docker provides in building microservices and the advantages the technology could bring to development , testing , integration and , ultimately , production . However , you must create a comprehensive build pipeline before deploying any containers into a live environment . Integrating containers into a CD pipeline is far from easy . Along with the benefits Docker brings , there are challenges both technically and process-related . This presentation attempts to outline the steps you need to take for a fully-automated Jenkins pipeline that continuously builds , tests and deploys microservices into a Docker Swarm- cluster . <p> - <p> Viktor FarcicSenior Consultant CloudBees <p> Viktor Farcic is a senior consultant at CloudBees . He codes using a plethora of languages starting with Pascal ( yes , he is old ) , Basic ( before it got the Visual prefix ) , ASP ( before and after it got the . Net @ @ @ @ @ @ @ @ @ @ , Visual Basic , C# , JavaScript , Java , Scala , etc . He never worked with Fortran . His current favorite is Go . His big passions are microservices , CI , CD , continuous deployment and test-driven development . He often speaks at community gatherings and conferences . He has published two books : The DevOps 2.0 Toolkit : Automating the Continuous Deployment Pipeline with Containerized Microservices and Test-Driven Java Development . 
@@21562244 @1562244/ 66502 @qwx266502 66505 @qwx266505 <h> How to set up a F5 Load Balancer for HA ? <h> Issue 66501 @qwx266501 <h> Resolution <p> The F5 Load Balancer needs to be configured to load balance HTTP(S) traffic to the CloudBees Jenkins Instances which form the HA singleton . <p> The F5 Load Balancer needs to performance a health check on the Jenkins Instances on /ha/health-check <h> Route HTTP(S) Traffic <p> Configure the " frontend " of the F5 Load Balancer to route incoming HTTP(S) requests to the two CloudBees Jenkins Instances " alpha " and " beta " in the " backend " . <p> The combination of Hostname / VIP / Port must be unique for each of the cluster : that is , if the port is fixed ( 443 usually if using HTTPS ) the VIP can be shared in the different clusters if the hostnames are different . The VIP is used to select the correct " backend " based on the Host header . <p> You can run the following script from Manage Jenkins-&gt;Script Console to check if headers are set properly : <h> Perform @ @ @ @ @ @ @ @ @ @ health check by issuing a HEAD HTTP request on the nodes on /ha/health-check . <h> OneConnection <p> If you are using a feature called OneConnection or something similar to improve the networking performance , please deactivate it for this environment as we have the experience it makes the connection to break . 
@@21562247 @1562247/ 66502 @qwx266502 66505 @qwx266505 <h> How to configure Jenkins config-history Directory Change ? <h> Issue <p> We are planning to move config-history directory and its contents from JENKINSHOME to a new locaion . How do I configure the change in config-history after moving the directory and data to a different directory ? 66501 @qwx266501 66503 @qwx266503 <h> Resolution <p> Job config history global configuration let 's you define path to the history directory . If this path is absolute ( /some-path or X : some-path ) then the plugin do append config-history . If this path is relative it will be computed from JENKINSHOME and also append config-history . <p> So as a resume you cant prevent the plugin to use config-history as last level for history root directory , but can move it to another place . As a workaround you can just rely on symlinks. 
@@21562248 @1562248/ 66502 @qwx266502 66505 @qwx266505 <h> How to manually obtain logs of a tenant <h> Issue <p> It is not possible to create a CJE support bundle and we need to review the logs from a tenant . 66501 @qwx266501 <p> CloudBees Jenkins Enterprise ( CJE ) <h> Resolution <p> First of all we have to know where the tenant is running , to know that we have to run this command cje run find-worker-for TENANTNAME where TENANTNAME is the name of the tenant ( cjoc , castle , palace , elacticsearch , name of the master ) , then we can access to the worker and compress the log files into a tar.xz file . <p> download the generated file with scp , you have to replace INSTANCE with the instance name of the worker , and USER with ec2-user on RedHat AMIs and ubuntu on Ubuntu AMIs , you can obtain the INSTANCE of a worker you have to run cje run list-workers 
@@21562249 @1562249/ <h> 9 Ways to Dominate Development with Jenkins <p> Jenkins is the most popular open source continuous integration tool , enthusiastically embraced by developers , QA engineers , project managers , release engineers , DevOps teams , and managers alike . While it 's super-easy to set up , you 'll get superior results , support more projects and save administration time with your Jenkins deployment if you know a few key tips , tricks and optimal settings . This webinar , presented by Mike Lester , director of training , WANdisco , and Ryan Campbell , elite developer and architect , CloudBees , will teach you nine best practices you can easily implement that will make your life " and the life of your whole team " a lot easier . Apply these tips to make sure Jenkins moves at lightspeed and is set up to expand quickly enough to meet your continuous integration- needs . 
@@21562252 @1562252/ <h> So , You Want to Build the World 's Biggest Jenkins Cluster ? <p> How can we do it ? We start with some real world results realized by Jenkins users who have built large clusters and review how they got there . Next , we will do experiments scaling some individual sub-components of Jenkins in isolation and see what challenges we will face when integrated . The famous large , distributed systems undoubtedly faced problems scaling - and we can learn from them , too . The result will be recipes for building Jenkins clusters with different scaling capabilities . After all of this , you can build the biggest Jenkins cluster in the worldor maybe just make your own Jenkins cluster more- efficient . <p> - <p> Stephen ConnollyElite Developer and Architect Jenkins Project <p> Stephen has been a Jenkins core committer for almost 10 years . He is the creator of the weather icon column in Jenkins and many Jenkins plugins including : SSH-Slaves , Credentials , Multi-Branch and Cobertura . He is currently the technical lead for CloudBees Jenkins Operations Center . 
@@21562253 @1562253/ 66502 @qwx266502 66505 @qwx266505 <h> How do I install newer versions of gradle ? <h> Issue <p> The Jenkins Gradle plugin is installed but not using the correct version of gradle for builds . 66501 @qwx266501 66503 @qwx266503 <h> Resolution <p> Jenkins will let you use the latest version of gradle but it needs to be configured through " Configure System " first . Follow these 4 steps and you 'll have the appropriate tools provisioned . <p> 1 ) Gradle Plugin <p> First make sure that the gradle plugin is installed in your copy of CloudBees Jenkins Enterprise . From the home page , navigate to : <p> Manage Jenkins -&gt; Manage Plugins -&gt; Available <p> Use the filter box in the upper right corner and search for the word gradle . <p> If nothing shows up in the list , then it should already be installed and you can confirm this by selecting the available tab and searching for the word gradle again . <p> 2 ) Configure Gradle Plugin <p> With the gradle plugin installed , it now needs to be configured . You can do this @ @ @ @ @ @ @ @ @ @ x ) or to " Global Tool Configuration " ( Jenkins 2. x ) . From the home page navigate to : <p> Scroll down a little bit and you should encounter a small section for gradle with a single button labeled " Gradle installations " . Click on that button to expand the configuration panel . <p> The gradle configuration panel will ask for a few parameters . Here you can set the tool to a static path , or let Jenkins handle the installation for you . We recommend using " Install automatically " for ease of use . Below is an example of an automatic installation of gradle 2.5 . <p> You can always add more versions by using this panel <p> 3 ) Click on " Check Now " <p> There is a problem where builds will indicate that they cant find the installation I 'd of gradle at build time . To workaround this problem , you need to click on a " check now " button that is under the advanced tab in " Manage Plugins " at the very bottom right corner of the page : 
@@21562254 @1562254/ 66502 @qwx266502 66505 @qwx266505 <p> In particular , there is an option --confirm-def-push , which makes Docker ask for a confirmation before pushing to a public registry . The default value is true . <p> When trying to push a docker image to a public registry , the user is prompted with the following message : Do you really want to push to public registry ? . This prompt makes the build fail when using the Docker Build and Publish plugin : <p> In order to fix this , you need to configure the docker deamon . Add the option --confirm-def-push=false to the OPTIONS variable when starting the docker deamon . The simplest way is to edit the OPTIONS vaiable in the docker configuration file /etc/sysconfig/docker . If the configuration file does not exists , create it and add the following : 
@@21562256 @1562256/ 66502 @qwx266502 66505 @qwx266505 <h> How to set up a Jenkins agent to have the same path as the user when connected via Remote Desktop ? <h> Issue <p> A SSH connected agent does not have the same PATH when connecting as that user via remote desktop <p> PATH for jenkins user when connected via remote desktop <p> PATH for jenkins agent when ssh agent is launched from CloudBees Jenkins UI 66501 @qwx266501 <p> CloudBees Jenkins <p> Jenkins <h> Resolution <p> The reason for the difference in the PATH environment variable is due to the remote desktop connection using a interactive shell , while the jenkins agent is using a non-interactive shell . <p> In order to resolve this issue , please do the following : <p> Make a note of the echo $PATH output when connected to the slave agent machine via remote desktop as shown in the PATH for jenkins user when connected via remote desktop screen shot above or from any connection that uses an interactive shell . <p> You will need to edit the etc/ssh/sshdconfig file to enable and PermitUserEnvironment to yes on the slave @ @ @ @ @ @ @ @ @ @ shot below : <p> Next you will need to create a . ssh directory for the user that the Jenkins connects as to launch the ssh agent if it does not already exist . Then create an environment file in the . ssh directory . Theenvironment file will contain an entry for PATH and its value ( taken from step 1 ) . Please note that the syntax for the environment file is Variable=Value and any additional environment variables can be added on a separate line in this manner . In the example below the jenkins user is used : <p> Restart the sshd service for the change in step 2 to be picked up . Stop the agent from the Jenkins UI if it is currently connected and relaunch it . The PATH environment variable will now match the output shown in the the PATH for jenkins user when connected via remote desktop screen shot above . 
@@21562258 @1562258/ 66502 @qwx266502 66505 @qwx266505 <h> How to configure Update Center Upstream Sources ? <h> Issue <p> I have several version of Jenkins in my CJP cluster , how to manage my update centers ? 66501 @qwx266501 66504 @qwx266504 <p> Operations Center Update Center Plugin <p> CloudBees Update Center Plugin <h> Resolution <p> The CloudBees Update Center Plugin provides the ability to host and manage your own Update Center(s) . In order to best manage your update center , you need to ensure that you track the correct upstream source : <h> Version Configuration <p> In the Upstream Source configuration , you can specify the Jenkins version to track . <p> If you leave the version blank then the version of the Jenkins instance that is hosting Custom Update Center is used by default . <p> If you leave the version with a two segment version number , e.g. 1.642 , then the core updates will be the OSS HEAD line <p> If you leave the version with a three segment version number , e.g. 1.642.1 , then the core updates will be the OSS LTS line and plugin updates @ @ @ @ @ @ @ @ @ @ is not greater than the current OSS LTS line . <p> If you leave the version with a four segment version number , e.g. 1.642.1.1 , then the core version will be the CJE version and plugin updates will be restricted to those declaring a core dependency that is not greater than this CJE version . <p> Note : If you are running CJE , in most cases you want to define a specific version <h> Multiple Masters / Different Versions <p> In the case where you have a CJP cluster with Client Masters running different version , what you want to have is an update center for each CJE version line that you have client masters in . The version you specify should be the lowest version in that line . <p> So if you have any CJE 15.11 client masters , that is the 1.625. . line , so their update center should be pulling with the version specified as 1.625.1.1 even though the CJE masters are running a mix of say 1.625.2.2 or 1.625.3.1 . <h> How it Works <p> When Jenkins requests the update center data @ @ @ @ @ @ @ @ @ @ a query parameter added to the update center URL . That query parameter will be ? version= ... where the ... is the version of Jenkins . 
@@21562259 @1562259/ 66502 @qwx266502 66505 @qwx266505 <p> I could n't get this to work in my scenario . - Will this work if the build has already been kicked off from a multibranch pipeline script ? I want to reset the build back to 1 if the version is greater than the previous version . - I posted a Jira ticket for Jenkins : LONG ... 
@@21562260 @1562260/ 66502 @qwx266502 66505 @qwx266505 <h> What happened to free plugins from CloudBees <h> Issue 66501 @qwx266501 <h> Resolution <p> Remove CloudBees Free Enterprise plugin ( including cloudbees-registration and/or nectar-licensing ) and install Folders from the community update center on its own . Alternatively you can purchase a subscription to access them as is and the additional enterprise plugins . <p> The CloudBees Free Enterprise Plugins was released when we were providing FREE instances in our DEV@cloud offer . However , since the end of the last year we moved from a FREEMIUM to a TRIAL strategy . It means that right now the plugin are absolutely free but can not be used unless you have a TRIAL/PAID CloudBees account . <p> Taking a look at the free plugins : <p> Folders : easily organize your jobs <p> Backup to Cloud : backup your Jenkins into CloudBees cloud <p> Wasted Minutes : find out if you are short of slaves and need to add capacity to speed up builds <p> CloudBees Status : find out how much of the free CloudBees Jenkins capacity in the cloud is available for your @ @ @ @ @ @ @ @ @ @ Folders is not relevant for most installations . The Folder plugin is now free and you can download it from the Update Center of the community or wiki. 
@@21562263 @1562263/ 66502 @qwx266502 66505 @qwx266505 <h> Can not be authenticated with jenkins-cli <h> Issue 66501 @qwx266501 66503 @qwx266503 <p> jenkins-cli <h> Resolution <p> Failed to authenticate with your SSH keys . <p> suggests that the public key was not added into the users account ( http : ///user//configure ) , and/or did not pass the private key to the CLI command ( using -i ) . Also , ensure that you are not specifying the username as this is not required for SSH . <p> 1.419 and later If your Jenkins requires authentication , you should set up public key authentication . Login from the web UI and go to http : **29;2522;TOOLONG , then set your public keys in the designated text area . When connecting to the server , the CLI will look for /. ssh/identity , /. ssh/iddsa , /. ssh/idrsa and use those to authenticate itself against the server . Alternatively , the -i option can be used to explicitly specify the location of the private key . See the middle of this guide for how to generate SSH key pair , if you do n't @ @ @ @ @ @ @ @ @ @ generate your keys , you will have to convert them to openssh format . Otherwise Jenkins might silently ignore your keys and you will be Authenticated as : anonymous . To use the -i option the syntax is as follows : java -jar jenkins-cli.jar -s JENKINSURL -i PRIVATEKEY command options ... arguments ... 
@@21562264 @1562264/ 66502 @qwx266502 66505 @qwx266505 <h> How to provide a network dump ? <h> Issue <p> There is apparently a connectivity issue between two components ( Be it CJOC , a Client Master , an agent , or anything requiring connectivity ) . Looking at the support bundle and informations provide can lead to think the issue could be coming from something in between those components . <p> So we need to gather dumps from each side to understand where the connection might have be reset or cut down , for example . 66501 @qwx266501 <p> Linux <h> Resolution <h> Preamble <p> On each node requested by support , run the following commands in background . <p> For example , if you have issues between a CJOC , a Client Master and one agent , you want to run this 3 times . <h> What do you I do when this has occurred again ? <p> You will most probably need that documentation ( How to send a file that is too large for zendesk.md ) to send us big files . <h> VERY IMPORTANT <p> Make sure to tell @ @ @ @ @ @ @ @ @ @ occur again . This is required for us to be able to correlate the dates between network dumps , support bundles data and any information you may have provided us with . <p> IMPORTANT : machines must be synchronized in time for us to be able to analyze them . <p> Please also provide a new support bundle per each node when the next issue occurs . That may help us correlate network packets to potential error logs . 
@@21562266 @1562266/ 66502 @qwx266502 66505 @qwx266505 <h> How to generate a PSE Support Bundle ? <h> Issue <p> What is a PSE Support Bundle ? <p> How to generate a PSE Support Bundle 66501 @qwx266501 <p> CloudBees Jenkins Enterprise ( CJE ) <h> Resolution <p> PSE Support bundle is a feature introduced in version 1.1.1 of Private SaaS Edition.It is a key element to help CloudBees engineers to get a diagnostic of customer issues when running a PSE environment . <p> A PSE Support Bundle includes : <p> Logs of all PSE service applications running in the cluster . <p> Access logs <p> Support bundle of the CJOC instance in the cluster ( if it is available ) <p> To generate a support bundle , you need to be in the PSE workspace used to generate the cluster . <p> If you have any operation ongoing , please complete it or cancel it before generating the PSE support bundle . <p> $ cje prepare pse-support pse-support is staged - review pse-support.config and edit as needed - then run ' cje apply ' to perform the operation . <p> You may review @ @ @ @ @ @ @ @ @ @ it can . <p> $ cje apply <p> The support bundle will then be collected by connecting to all controllers and workers in your cluster , as well as CJOC if it is running . <p> Once completed , you can retrieve the archive in the PSE workspace . It will be named LONG ... 
@@21562270 @1562270/ 66502 @qwx266502 66505 @qwx266505 <h> How to troubleshoot client master connections ? <h> Issue 66501 @qwx266501 <h> Resolution <p> These are the steps you should follow to understand why your client master does n't  connect correctly with the CJOC instance . <h> CJOC Ensure that Jenkins URL is correctly set-up <p> In the CJOC instance ensure that under Manage Jenkins -&gt; Configure System the Jenkins URL is the right one . In case CJOC is accessible from a F5 or an ha-proxy ensure that this is correctly configure to forward the packages to CJOC from an external machine . <h> CJOC Ensure that a JNLP port is configured <p> In the CJOC instance ensure that under Manage Jenkins -&gt; Configure Global security a JNLP port is configured . If your CJOC instance is running behind a F5 or ha-proxy then a fixed port is required . In any case , a fixed JNLP port is recommended . <h> CJE Ensure that the JNLP port is different <p> In the CJE instance ensure that under Manage Jenkins -&gt; Configure Global security if a JNLP port is configured it is different @ @ @ @ @ @ @ @ @ @ , a fixed JNLP port is recommended.Note : Use a different JNLP port for each of the CJE instances connected to the CJOC . <h> CJE Check the HTTP Proxy configuration <p> Go to $CJEURL &gt; Manage Jenkins &gt; Plugin Manager &gt; Advanced tab &gt; HTTP Proxy Configuration section and check if there is any Server and Port configured . In the case they have been set up , FQN of the URL ( without the port ) must be included into No Proxy Host field . <p> Note : Alternatively , No Proxy Host can be configured by the JAVA property http.nonProxyHosts of the CJE instance . <h> CJE Check if CJOC instance is reachable through HTTP/ ( S ) <p> In case you have access to the groovy console you need to go to http : ///script and run : <h> CJE Check if CJOC instance JNLP port is open for CJE <h> CJE Check if CJOC can answer to CJE instance through jenkins-cli <p> In the CJE instance download LONG ... Then , on the client master execute the following command - depending if CJOC is or @ @ @ @ @ @ @ @ @ @ correctly executed.As an example , for Linux OS : wget LONG ... <h> In case you are running behind a F5 or an ha-proxy <h> CJOC In case your CJOC instance is a TLS end-point <p> Notice that this is not needed in case you are running oc-server 1.7.17+ / 1.8.5+ and oc-client 1.7.6+ / 1.8.5+ <p> In those cases , you ensure that the Jenkins Location for CJOC is configured as an URL using https and then add the certs to the global security settings on CJOC . Once you do that , CJOC will generate connection details with the cert embedded and the clients will connect using that cert <p> For the rest of the cases : <p> If the CJOC instance is deployed on a TLS end-point , you must import the SSL certificate in the Java Keystore of the Client Master . In case the Client Master is deployed on a Tomcat web container , you might need to tell what keystore Jenkins is using . This should verify that Tomcat is using the correct keystore.If it is not in the standard location ( **34;2553;TOOLONG ) @ @ @ @ @ @ @ @ @ @ 
@@21562272 @1562272/ 66502 @qwx266502 66505 @qwx266505 <h> Shared slaves are not leased to Client masters when Controlled Slaves are online <h> Issue <p> Shared slaves are not leased to Client masters when Controlled Slaves are online 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <p> Folder Plus plugin <h> Resolution <p> If you are using the controlled slave functionality to restrict only trusted jobs to a specific slave then you need to assign a unique label to that slave and set the slave to only run jobs specific to that label . <p> If you do not make that change then Jenkins node provisioning ( which can not have any awareness of the controlled slave restriction ) will just see that there are executors available and not provision nodes . <p> The purpose of the controlled slaves functionality is to provide a last shot restriction on slaves so that a user can not just configure a job to run on the controlled slave by knowing the label , they must also have got approval , but the restriction presupposes that you have tied the jobs to the slave using labelling restrictions . 
@@21562273 @1562273/ 66502 @qwx266502 66505 @qwx266505 <p> Running either of the above scripts in the Script Console ( Manage Jenkins-&gt;Script Condole ) will shelve the jobs itfinds . <p> Please note at the time of this writing , the most recent version of the Shelve Project Plugin , v1.5 does notsupport pipeline jobs . <p> If you have several Jenkins Masters connected to your CJOC you can create a new cluster operationto run the groovy script on each of the connected Jenkins Masters as shown in the screen shots below . The <p> Project Plugin <p> should be installed on each of the Jenkins Masters that the cluster operation will run on : <p> Put either of the groovy scripts from above in the script section . <p> Run the cluster operation . You will need to navigate to the console output for the build and click on log as shown in the screen shot below to see the output of the groovy script : 
@@21562274 @1562274/ 66502 @qwx266502 66505 @qwx266505 <h> Symptoms <p> Client master can not be connected with Operations Center <h> Diagnostic/Treatment <p> Pre-condition : Initial connection CJOC -&gt; CM <p> Most of the connectivity issues related to CJOC-CM are related to a wrong HTTP or TCP configuration . To diagnosis such kind of issues the best approach is to Push the Connection Details from CJOC to CM from Manage in CJOC . <p> Now , we need to copy/paste the CM URL to finally Push the Connection Details . <h> OC-CM healthy status <p> This is the expected output when we try to connected a CM to CJOC <h> OC-CM apparent healthy status <p> In case the connectivity table shows everything is fine but the connectivity still fails , it is surely there is a Proxy set-up in the CM under Manage Jenkins -&gt; Manage Plugins Advanced section and the OC hostname was not added in the Non Proxy Host . i.e If the URL to access OC is http : **26;2589;TOOLONG , then it is expected to have just cjoc.jenkins.example.com in the No Proxy Host section at CM level . <h> @ @ @ @ @ @ @ @ @ @ connectivity issue between CJOC-CM . <p> CJOC is not reachable from CJE at HTTP level <p> There is a proxy configured in CJE and CJOC is not added as No Proxy Host . Ensure that if under Manage Jenkins G Manage Plugins G Advanced Tab there is a proxy configured , then CJOC hostname is added to No Proxy Host . i.e cjoc.jenkins.example.com . <p> CJOC is not reachable from CJE at HTTP level . From CJE host try to curl CJOC instance : curl -I http : **32;2617;TOOLONG <p> The header X-Jenkins should appear on the output , i.e : X-Jenkins : 2.7.19.0.1 ( CloudBees Jenkins Operations Center 2.7.19.0.1-fixed ) . If this header does not appear it means CJOC is not reachable from CJE , which means you need to talk to your network administrator to resolve this issue . <h> OC-CM issue at TCP level <p> There is a TCP connectivity issue between CJOC-CM . Usually this happens because an intermediate elements like haproxy , firewall or ELB is blocking the connection . CloudBees recommends to use the System Property LONG ... on the instance to bypass @ @ @ @ @ @ @ @ @ @ the JNLPPORT advertised by CJOC is incorrect . Most likely because the System Property LONG ... has been set in CJOC but the &lt;JNLPPORT&gt; points to an application that is not Jenkins . 
@@21562276 @1562276/ 66502 @qwx266502 66505 @qwx266505 <p> download the generated file with scp , you have to replace INSTANCE with the instance name of the controller/worker , and USER with ec2-user on RedHat AMIs and ubuntu on Ubuntu AMIs , you can obtain the INSTANCE of a controller with cje run display-outputs , to obtain the INSTANCE of a worker you have to run cje run list-workers 
@@21562277 @1562277/ 66502 @qwx266502 66505 @qwx266505 <p> Please keep in mind that some configuration in your ancient jobs will have to be modified in order to work on DEV@cloud . To mass correct the biggest quirks , like JDK or Maven tooling configuration , you can use the Configuration Slicing Plugin . <p> Migrate jobs with the Jenkins CLI <p> Jenkins CLI is distributed inside jenkins.war as a jar file . See http : //yourserver.com/cli for where to download the CLI jar file . In theory , the CLI jar is dependent on the version of Jenkins , but in practice , we expect to be able to retain compatibility between different versions of Jenkins . <p> Given that you have downloaded jenkins-cli.jar , you can launch theses commands in a terminal to duplicate a job from your old instance to your new one . <p> You must setup a ssh key in your GrandCentral account to authenticate yourself . If the key you want to use is not /. ssh/idrsa or /. ssh/iddsa , then you must add the -i option and give the path of your private key . @ @ @ @ @ @ @ @ @ @ 
@@21562280 @1562280/ 66502 @qwx266502 66505 @qwx266505 <h> How to use the Enterprise Backup plugin on DEV@Cloud ? <h> Issue 66501 @qwx266501 <h> Resolution <p> This plugin should be automatically exposed on the DEV@cloud Update Center for all the customers independently of their tier . However , the build of a backup job will not work if it the job is not saved by a CloudBees Support Engineer - you need to open a support ticket to request this . <p> Before requesting to save the Backup job ensure that : <p> The build is restricted to hi-speed nodes . <p> You are only doing a backup for job configurations and build records <p> You are doing the backup on a remote SFTP or WebDAV server - we don-t allow to use a local directory . <p> The format backup is tar.gz - tar.gz is streaming so if you use . zip you might run out of heap memory on the slave . <p> Notice that you are not allowed to backup System Configurations , neither to backup on a local directory . 
@@21562282 @1562282/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <p> CloudBees Operations Center v 2.46.2.1 + <p> CloudBees Jenkins Enterprise v 2.46.2.1 + <p> Ubuntu 14.04 LTS <h> Resolution <p> Newer versions of CJP require Java 8 to work , be OpenJDK or Oracle JDK . The Ubuntu 14.04 official repositories do not contain any version of Java 8 , hence the system is unable to install all needed dependencies and the installation fails . <p> To fix this you need to add a repository with the required packages or manually install the required Java 8 package . <p> Disclaimer If you have manually installed Java 8 in your system , for example via a zip file and update-alternatives you may still need to install the Java 8 packages as described above 
@@21562283 @1562283/ 66502 @qwx266502 66505 @qwx266505 <p> Apache Maven 3.3. x requires a minimum of Java 7 and your build is configured to use Java 6 . <p> Either- install and configure your job to use a- version of Maven &lt; 3.3 or install and configure your job to use a version of JDK &gt; 6 to solve the issue . The Configuration Slicing Plugin will help you to- easily change the version of Apache Maven or the JDK used in several- jobs in one step . <p> DEV@cloud specificity : By default you can find on your instance configuration a default Apache Maven installation called " Maven ( latest ) " . This one is available for testing purposes only and can be upgraded- at any time . It is recommended to not use- them for- " production " . You should- install- your own- version that you 'll control over the time to ensure the reproducibility and stability of your build . 
@@21562287 @1562287/ 66502 @qwx266502 66505 @qwx266505 <h> Issue <p> The latest docker image available in the dropdown of Managed Masters is not the last version available for CloudBees Jenkins Enterprise . 66501 @qwx266501 <p> CloudBees Jenkins Enterprise ( CJE ) <h> Resolution <p> When you upgrade CJE , it adds the new Docker Images to your CJE environment to upgrade your Managed Master , only on exceptional occasions . For example , if we want jobs configured on one Master to make use of new CBJ version , when it is detected a security issue , or we want to resolve an urgent bug , in that cases you could add Manually the new images to be possible to upgrade Managed Masters without upgrade CJE . <p> You can add new Manage Master Docker Images on Manage Jenkins/Configure System , then go to Docker images and add a new one 
@@21562291 @1562291/ 66502 @qwx266502 66505 @qwx266505 <h> Only set-up the minimum configuration <p> When working for first time with LDAP plugin you should not configure any field more than the ones represented on the image below . Notice that an incorrect User filter might produce the user not be able to login . <p> The only options which should be filled are : * Server* root DN* User search filter : Here depending on your LDAP set-up might be three different options which might work - if you do n't  know how your LDAP tree is configured , then you might want to test all of them . * cn=0 * uid=0 * sAMAccountName=0 This is the option you want to use if you are configuring the LDAP plugin to work with an AD server* Manager DN : Some times LDAP servers allow Anonymous binding so to configure a Manager DN is not needed. * Manager password : Some times LDAP server allow Anonymous binding so to configure a Manager Password is not needed . <p> After this , go to http : ///whoAmI/ - once you are log-in and check @ @ @ @ @ @ @ @ @ @ Group membership filter <p> In order to improve the performance of the LDAP query , you should include one of the following values on the text section that appears when you select the option Search for groups containing user : * ( member=0 ) * ( uniqueMember=0 ) * ( memberUid=1 ) * ( memberOf=0 ) Only for Active Directory servers <p> The reason for that is related to the way we are building our LDAP query . Firstly , we are using the default group membership filter . The default filter is ( ( member=0 ) ( uniqueMember=0 ) ( memberUid=1 ) ) . Such a filter is a default that catches most LDAP schemas . However , it is at least three times slower that whatever is the correct filter for your LDAP schema . The correct filter for your schema will be one of ( member=0 ) or ( uniqueMember=0 ) or ( memberUid=1 ) . <p> Changing to the correct filter will have a threefold increase in performance . <p> To check if the filter is correctly working you might want to access to http : @ @ @ @ @ @ @ @ @ @ groups are correctly retrieved . 
@@21562292 @1562292/ 66502 @qwx266502 66505 @qwx266505 <h> Unable to connect Linux Shared Agent using JNLP <h> Issue <p> Linux Shared Agent using JNLP connection problem <p> We installed and connected a Shared Agent using JNLP to the OPC . All good , it shows it connected . Then started a job on the master . The OPC shows the Linux Shared Agent is in use . But the Master can not connect to it as it says its offline . 
@@21562295 @1562295/ 66502 @qwx266502 66505 @qwx266505 <p> In case that the Test is failing , try to specifically add a server as a Domain controller - see the example of the screenshot below . Then , again use Test Domain Name and Test Domain Controllers to check if the configuration works or not correctly . <h> Multiple Domains <p> For multiple domains , the only restriction is that the Bind DN user must exist on both domains with the same password . On Jenkins side you need to represent it with the displayeddName such as bindUser and NOT other representation types like CN=bindUser , DC=support-cloudbees , DC=com . <p> If this configuration does not work , it means that your AD set-up might not be correctly exposing the Global Catalog . You can test this by launching nslookup -q=SRV gc. tcp. &lt;DOMAIN&gt; . <p> On the case below , the Domain LONG ... is a member of the **27;2651;TOOLONG 
@@21562296 @1562296/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Resolution <p> The BitBucket Branch Source plugin provide support for integration of Bitbucket with multibranch projects such as Pipeline Multibranch . The API listens for notification to the endpoint **32;2680;TOOLONG . <h> Configuration in Jenkins <p> Multibranch Project <p> To track a single repository , create an item of type Multibranch Pipeline and use the BitBucket branch source : 
@@21562299 @1562299/ 66502 @qwx266502 66505 @qwx266505 <h> Resolution <p> Our documentation explains how to assign a folder to a slave step by step . <p> By default , Jenkins triggers all the builds as SYSTEM user , so in order to configure projects to run with specified authorization you need to install the Authorize Project plugin . <p> Once the plugin is installed , you need to go to http : ///configureSecurity/ and enable Access Control for Builds -&gt; Configure Build Authorizations in Project Configuration -&gt; Run as User who Triggered Build <p> Now , for each project the following property needs to be enabled : <p> After this , only users with Slave-&gt;Build permission will be able to build on this particular project for a particular slave . Only users with Slave-&gt;Build permission will have access to build on any controlled slave . <p> If you want to isolate the user who has access to a particular job so they can not build other jobs inside folders with controlled slaves , you might want to declare this user at folder level and then assign the Slave-&gt;Build permission . <p> NOTE @ @ @ @ @ @ @ @ @ @ that the Authorize Project plugin will need to be installed and configured at client master level . 
@@21562303 @1562303/ 66502 @qwx266502 66505 @qwx266505 <h> All masters except one connect to CJOC <h> Issue <p> All of my Jenkins masters except for one are connecting to CloudBees Jenkins Operations Center <p> Several of my Jenkins masters connect to CJOC . <p> No logs on CJOC as to why a connection can not be established . 66501 @qwx266501 66504 @qwx266504 66503 @qwx266503 <p> Jenkins <h> Resolution <p> One reason why CJE will not be able to connect to CJOC is because of the proxy configurations in the plugins page.On the Client Master which is not able to connect to CJOC go to Manage Jenkins &gt; Manage Plugins &gt; Advanced tab . <p> If there is proxy configuration defined in this section , then please make sure to set the no host proxy for the CJOC url.The client master will use this proxy configuration to connect to CJOC initially.If this is configured , it will use the proxy ( potentially leaving the network ) , and try to run HTTP GET operation.By setting the no proxy host option , this would make sure that for connecting to CJOC it does not use the proxy configurations. 
@@21562304 @1562304/ 66502 @qwx266502 66505 @qwx266505 <p> Java Launched ( using JVM ) : Add to your JVM arguments at either command line or launcher script <p> LONG ... <p> Note : The Jenkins instance will need to be restarted for these changes to take effect <p> Note that increasing this value could be potentially the source of DDOS attacks if your instance is open . <p> Form content sent to the server is processed by Jetty into a map of parameters to be used by the web application . This can be vulnerable to denial of service ( DOS ) attacks since significant memory and CPU can be consumed if a malicious clients sends very large form content or large number of form keys . Thus Jetty limits the amount of data and keys that can be in a form posted to Jetty . <p> The default maximum size Jetty permits is 200000 bytes and 1000 keys . You can change this default for a particular webapp or for all webapps on a particular Server instance . 
@@21562305 @1562305/ 66502 @qwx266502 66505 @qwx266505 <h> Examples <p> For these examples , we have configured a hosted Update Center ( Custom Update Center ) , uploaded and promoted one Jenkins war . Please , be aware that any war version deployed on a Client Master should be compatible with the corresponding Operations Center version ( as defined here ) . Additionally , be aware that , if the same or newer version is already running , the update will be skipped . <p> In your custom Update Center , you have the opportunity to upload different core wars , and select a promoted version . That version will be the one selected to be sent as " upgrade war " to selected masters . <h> Update all Client Masters using a custom Update Center . <p> Step 1 . Create new Cluster Operation . <p> Step 2 . In the Source section , select the option Using a specified Update Center this will perform the cluster operation over all the masters that have the selected Update Center set as their updates source . <p> Step 3 . In the Filters @ @ @ @ @ @ @ @ @ @ filter the previously selected set of Masters to be updated so that only those that can actually be upgraded appear as valid targets for the operation . <p> Step 4 . In the Steps section , select the option Upgrade Jenkins that will bring up a section where you can specify the minimum version that the war should have . If you leave it blank , the version used will be the one defined in the Client Master Update Center . <p> Step 5 . You build the job . <h> Update all Client Masters connected to Operations Center root <p> Step 1 . Create new Cluster Operation . <p> Step 2 . In the Source section , select the option From Operations Center Root this will perform the cluster operation over all the masters that have the selected Update Center set as their updates source . <p> Step 3 . In the Filters section , select the option Upgrade Jenkins Supported that will filter the previously selected set of Masters to be updated so that only those that can actually be upgraded appear as valid targets for the operation @ @ @ @ @ @ @ @ @ @ select the option Upgrade Jenkins that will bring up a section where you can specify the minimum version that the war should have . If you leave it blank , the version used will be the one defined in the Client Master Update Center . 
@@21562306 @1562306/ <h> Rock-solid Jenkins distribution <h> Access to Jenkins support <p> CloudBees enables your success with access to a deep bench of Jenkins experts . If your Jenkins pipelines falter or your team gets stuck , we 're here to train , support and guide you every step of the- way . <h> Peace of mind <p> Jenkins is powerful . CloudBees makes it trustworthy . Our CloudBees- Assurance Program provides a tested- and verified- Jenkins core and community plugins , allowing you to focus on delivering great software - not- troubleshooting. 
@@21562307 @1562307/ <p> For Jenkins engineers , earning certification helps you prove a level of Jenkins proficiency and skill . For managers , hiring Jenkins-certified personnel provides assurance of a documented level of expertise for roles that require Jenkins- skills . <p> To understand what you will be tested on and to prepare for the exam , please carefully review the relevant study guide for the exam you will be- taking . <p> AS OF MARCH 1 , 2017 , - please use the following study guides to prepare for the- exam : <p> Tests can be taken at hundreds of Prometric test centers around the world . Choosing the Prometric location , date and time is part of the registration- process . <p> On the day of the exam , go to the test center , sign in and show your photo I 'd . No laptop will be required , computers are provided at the test centers. - You will not be be allowed to use any personal electronic devices during the exam , nor will you be able to access the Internet or refer to- notes . <h> FAQ @ @ @ @ @ @ @ @ @ @ The 2017 certification exams will be available as of March 1 , 2017 . They include several new topics , - such as questions related to Jenkins 2 and a broader focus on Jenkins Pipeline . For a complete overview of the changes , please download the CJE 2017 or CCJE- 2017 Study Guides made available on this page , - above . <p> I have already passed a 2016 certification exam . Do I now have to take the 2017 exam to maintain my certification ? No . Your certification never expires . Your certification indicates the year your certification was obtained . It is up to you to decide if/when you would like to get a more current Jenkins certification . Please note that the 2017 exams are an evolution from the 2016 certification exams , not a completely new set of exams . A significant number of questions are common to exams from both years . Therefore , your 2016 certification is still a valid indication that you have mastered core knowledge , skills and Jenkins best- practices . <p> Who should take the certification exam ? @ @ @ @ @ @ @ @ @ @ delivery/DevOps best practices and is able to leverage Jenkins features to implement continuous integration and continuous delivery . For more details , see this job- profile and check out the above study guides . The study guides are essential to fully prepare for either- test . <p> How was this job profile defined ? The job profile definition is the result of a collaborative effort by the Certification Advisory Board . The board is comprised of six members , made up of representatives from the Jenkins community , CloudBees customers and partners as well as CloudBees management , including Kohsuke Kawaguchi , founder and lead of the Jenkins- project . <p> How can I prepare for the exam ? Depending on which certification you are interested in testing for , please read the relevant study guide carefully . See links for the study guides , above . You can also sign up for free at go.cloudbees.com and click on Training . You 'll see a list of categories on the left panel . If you click on certification , you will see detailed documents related to certification plus a certification @ @ @ @ @ @ @ @ @ @ are free while the course is- not . <p> Do I need to take both exams to prove expertise on open source Jenkins and CloudBees Jenkins Enterprise ? No , taking and passing the CloudBees Jenkins Engineer certification exam ( CCJE ) means you have proven expertise in both- areas . <p> Will I be certified if I pass ? What will determine my passing or failing ? Will I be notified ( pass/fail ) on the day of the exam ? Candidates taking the exam who achieve a passing score will be notified at the end of the exam . Therefore , you will know right away if you passed or not . Once you complete the exam , it is immediately scored and you will receive your result- at the test location . Every- Monday , we send certificates via email to all candidates who successfully passed the previous week . The email includes- a link to your official certificate ( pdf ) . You will be able to use that link on your personal website or social media network accounts . For Linkedin , we will actually @ @ @ @ @ @ @ @ @ @ create a new entry in your resume's- certification- section. - <p> How long is the certification valid ? There is no expiration date . It is up to each individual to define when they should update their certification . We plan to maintain exam questions on an annual basis . Therefore , each certificate includes the year of certification with its corresponding study guide . It will be clear when the certification exam was taken and what topics were covered at that- time . <p> Where can I find Prometric 's test locations ? You can find a list of test locations here . Selecting the closest Prometric test center is part of the registration process . Once you click on Register , you will be redirected to the CloudBees registration page on the Prometric website . On this page , simply follow the instructions . At the end of the registration process , you will be able to search for a test center near you and pick a date and time that work for- you . <p> How long will I need to wait to retake the exam if @ @ @ @ @ @ @ @ @ @ will be a wait time of three months before you are able to retake the- exam . <p> What is the duration of the exam ? You will have 1.5 hours to answer the Certified CloudBees Jenkins Engineer exam questions and two hours for the Certified CloudBees Jenkins Engineer questions . Please be sure to arrive at the test site 15 minutes before the start time of your- session . <p> How do you track the test duration ? When your exam starts , a timer will show up on your screen , indicating how much time is left . Once the time is up , the system will lock down preventing you from continuing past the allotted- time . <p> How much time do I need to schedule at the test center ? Please make sure you arrive at least 15 minutes prior to the exam 's start time . See above for test- duration . <p> What is the cost ? The customary certification exam fee is- $150 . <p> Do I need to bring my laptop ? You do n't need to bring your laptop , computers will be provided by the test- center . 
@@21562308 @1562308/ 66502 @qwx266502 66505 @qwx266505 <h> The error message java.lang.Exception : Timed out waiting on license to install occurs when connecting a client master to a CJOC <h> Issue <p> java.lang.Exception : Timed out waiting on license to install occurs when attempting to push a license to a client master from a CJOC. 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> Verify that the hostname for the client master is correct by navigating to Manage Jenkins . - Verify that there is not an error saying the HA proxy setup is broken at the top of the screen . <p> If not , continue to Configure System and look at the- **Jenkins URL- **under the section- **Jenkins Location**. - If running HA , make sure this URL is pointing the HA frontend. - If running SSL , make sure it includes https , otherwise it should include http. - <p> If all of this looks correct , and the JOC server can access the client master server ( via curl -v from command line ) , please create a logger- for LONG ... on the JOC. - Attach a @ @ @ @ @ @ @ @ @ @ attempting to push the license . <p> What changes were made on the load balancer/DNS to make this work ? I am having the same issue and my network team ca n't seem to figure out what is being blocked and how to unblock the connection going back. - Please help ! 
@@21562310 @1562310/ 66502 @qwx266502 66505 @qwx266505 <p> However , with the previous script , Jenkins will not mark the build as FAILURE as it ignores any failure . Another way of not stopping on a failure is to add true to your command or add **28;2714;TOOLONG if you want to do something on failure : <p> #Do something that might fail but we do n't care . Loop is completed . while ... do command true done # Do something that might fail but we care . Loop is completed . If there was an error , the variable error is created and set to true while ... do command error=true done #Fail the build if there was an error if $error then exit -1 fi 
@@21562316 @1562316/ 66502 @qwx266502 66505 @qwx266505 <h> Convert Jenkins Enterprise by CloudBees into Jenkins Open Source <h> Issue 66501 @qwx266501 <h> Resolution <p> Case A : Using the- CloudBees Jenkins Enterprise plugin on the top of a Jenkins installation <p> - <p> Before your license expire , you will only need to uninstall or disable all the cloudbees-and nectar- plugins which are part of the CloudBees Jenkins Enterprise plugins . <p> After this , when you start your instance again , your Jenkins instance will be automatically transformed into Jenkins . Notice , that now any of the CloudBees Jenkins Enterprise plugins ca n't be used , so do the corresponded- job/pipeline/ .. modifications before disabling the Enterprise plugins. - <p> Finally , you will just need to re-configure the Jenkins Update Center you want to use under LONG ... Update Site , which usually is : 
@@21562319 @1562319/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Resolution <p> The BitBucket Branch Source plugin provide support for integration of Bitbucket with multibranch project such as Pipeline Multibranch . The API listens for notification to the endpoint **32;2744;TOOLONG . <h> Configuration in Jenkins <p> Multibranch Project <p> To track a single repository , create an item of type Multibranch Pipeline and use the BitBucket branch source : <p> Once a project is saved , it automatically listens for events on the **32;2778;TOOLONG . <p> Further Configuration <p> Since Bitbucket Branch Source 2.1.1 and Post Webhooks for Bitbucket 1.4.1 ( bitbucket add-on ) , you can enable the option Auto-register webhook to let Jenkins automatically register a webhook for your repository/ies . This is the recommended , quicker , easiest configuration . 
@@21562322 @1562322/ 66502 @qwx266502 66505 @qwx266505 <h> How to migrate from a legacy war to a CloudBees Jenkins Team ? <h> Issue <p> The user wants to migrate from an old legacy war ( CloudBees Jenkins Enterprise Client Master ) or a new CJE war to the new CloudBees Jenkins team product . 66501 @qwx266501 <p> CloudBees Jenkins Enterprise war <p> CloudBees Jenkins Team ( CJT ) <p> Jenkins <h> Resolution <p> To migrate from a Legacy war with a Legacy per Executor License with Enterprise plugins to a CloudBees Jenkins team with OSS plugins only you need to perform the following steps : <p> 1 ) Stop your Jenkins instance2 ) Remove the license.xml file in your JENKINSHOME3 ) Remove the cb-envelope folder inside your JENKINSHOME4 ) Start the CJT war file pointing to the same JENKINSHOME5 ) When asked for a license , disable unlicensed plugins first using the UI ad-hoc button . <p> 6 ) Let Jenkins restart and prompt for a license7 ) Install the new Team License either by inserting the license or by requesting a trial . 
@@21562328 @1562328/ 66502 @qwx266502 66505 @qwx266505 <h> Issue 66501 @qwx266501 <h> Resolution <p> This goal can be achieved with the SSH Agent plugin . Instead of writing the ssh key to a file , using this plugin allows you to expose a SSH agent . This agent will provide SSH keys stored in Jenkins . SSH client will connect to the agent and will be able to use the key to authenticate . Note that the private key is never written to the build slave , neither in the build container , the Agent plugin creates a special socket which let 's SSH client communicates with Jenkins master and authenticate with the private key . <p> Here is an example of using the SSH agent inside a docker pipeline build : 
@@21562330 @1562330/ <h> How to Build Nightly When There is No Night with Electronic Arts <p> For software developers or engineers game development is strange but familiar. - Straddling the worlds of software and entertainment , games development regularly encounters unexpected situations and trade-offs ; bugs can improve the gaming experience and QA checks for fun and authenticity. - At Electronic Arts , our biggest projects leverage hundreds of team members located around the world , in nearly all time zones. - This presents interesting challenges , like when to do nightly builds or take an outage. - Come see how EA handles CM , CI , CD and Release Engineering and how Jenkins fits in to the picture. - Marvel at the scale of game development , shake your head at our problems/solutions and learn something in the process. - Come one , come- all . <p> Joshua NixdorfTechnical Director Electronic Arts <p> Josh Nixdorf is a Technical Director at Electronics Arts in Burnaby , BC . He has worked on numerous games including NBA , FIFA , NHL , Madden and SSX in varying roles such Build Engineer , @ @ @ @ @ @ @ @ @ @ Technical Director of the Development and Release Engineering team , Josh oversees a worldwide team of Automation and Build Engineers working on most of the Electronic Arts catalog . 
@@21562333 @1562333/ 66502 @qwx266502 66505 @qwx266505 <h> How to get a support bundle when Jenkins will not start ? <h> Issue <p> Jenkins wo n't start <p> Ca n't get a support bundle because I ca n't login 66501 @qwx266501 66503 @qwx266503 <h> Resolution <p> When the CloudBees Support Plugin is installed , it automatically stores a bundle every hour in $JENKINSHOME/support . These bundles are purged using an exponential retention strategy so that they do not overflow disk space . <p> Root Cause <p> If your Jenkins instance is not starting correctly , this is usually due to some class-loading conflict among the set of plugins that you have installed in your instance . Normally such class-loading conflicts will just result in one of your plugins failing to load , however in some extreme cases a plugin failing to load can cause a second plugin to render the UI of your Jenkins instance inaccessible . <p> In such cases , the latest support bundle ( and some representative historical versions ) can be very helpful for CloudBees in ensuring a rapid response and restoration of your Jenkins to an accessible state . <p> @ @ @ @ @ @ @ @ @ @ and hh.mm.ss are the UTC date and time respectively when the bundle was generated . <p> You can inspect the contents of these file(s) to assure yourself that they do not contain information you do not want to share with CloudBees . You can even unpack and repack bundle(s) if there is some specific piece of information that you need to remove from some bundle(s). 
@@21562336 @1562336/ 66502 @qwx266502 66505 @qwx266505 <h> **30;2812;TOOLONG <h> Issue <p> Could I create a credentials and append it to a folder through a groovy script ? 66501 @qwx266501 <p> CloudBees Jenkins Enterprise &gt; 1.609.1.1 <p> Jenkins LTS &gt; 1.609.1 <p> Jenkins &gt; 1.600 <h> Resolution <p> It is possible to manipulate credentials using groovy script , you could create/edit credentials and add it to Jenkinss global scope or add it to a domain into a folder . Here there are two examples of how to do it . <h> 5 Comments <p> The folder example will only work if the folder already has a- **26;2844;TOOLONG ( e.g. , because some credentials were defined from- GUI side before ) . Newly created folders do not have that , and the example will fail . 
@@21562339 @1562339/ 66502 @qwx266502 66505 @qwx266505 <h> Jenkins fails to start with JNA error <h> Issue <p> Attempting to start CloudBees Jenkins Enterprise or CloudBees Jenkins Operations Center results in a stacktrace similar to the one below : <p> Starting CloudBees Jenkins Enterprise Exception in thread " main " **43;2872;TOOLONG at LONG ... Method ) at LONG ... at LONG ... at LONG ... at Main. main(Main.java:140) at Main.main(Main.java:98) Caused by : **30;2917;TOOLONG : LONG ... LONG ... failed to map segment from shared object : Operation not permitted at LONG ... Method ) at LONG ... at LONG ... at LONG ... at **40;3033;TOOLONG ... 6 more 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> The issue is being caused by the noexec settings for the /tmp directory . These settings are preventing the Jenkins process to launch the JNA library from the /tmp directory . <p> To resolve the issue , please do either of the following . <h> Option @ @ @ @ @ @ @ @ @ @ change the temporary directory that Jenkins uses , you need to : <p> append **33;3075;TOOLONG into JENKINSJAVAOPTIONS variable in either /etc/sysconfig/jenkins or /etc/default/jenkins file depending on your OS <p> create /var/lib/jenkins/tmp using the Unix user that runs the Jenkins process 
@@21562340 @1562340/ 66502 @qwx266502 66505 @qwx266505 <h> Issue <h> Related Issue(s) 66501 @qwx266501 66503 @qwx266503 <p> Artifactory <p> Docker <h> Resolution <p> The error message Unsupported docker v1 repository request for ' &lt;repo&gt; ' is produced by Artifactorys Docker support when using the Docker Registry API v1 which is no longer supported . It is most likely because you are running an older version of Docker that tries to pull from v1 registries ( or fallback using this version ) even though it not supported . <p> Check the version of your docker client using docker version and docker info <p> Sometimes , an hidden mirror registry may be configured . If this mirror is using v1 API , it can be the cause . You can view this by checking the value of the flag registry-mirror using docker run --rm --pid=host alpine ps aux grep dockerd <p> The V1 registry have actually been deprecated since Docker 1.9 ( see Deprecated Engine Features ) . Pull , push and login operations against V1 registries are now prevented by default . This can be controlled via the flag **25;3110;TOOLONG which is false by default . 
@@21562341 @1562341/ 66502 @qwx266502 66505 @qwx266505 <h> **29;3137;TOOLONG <h> Issue <p> Could I create a new unix node in Jenkins ? Could I create it with environment variables defined ? 66501 @qwx266501 <p> CloudBees Jenkins Enterprise &gt; 1.609.1.1 <p> Jenkins LTS &gt; 1.609.1 <p> Jenkins &gt; 1.600 <h> Resolution <p> It is possible to manipulate nodes using a groovy script , you could create/edit nodes and add it to Jenkins , also you could define environment variables , tools , and other properties available from UI. 
@@21562343 @1562343/ 66502 @qwx266502 66505 @qwx266505 <h> How to add Custom build tools in DEV@cloud ? <h> Issue 66501 @qwx266501 <h> Resolution <p> Our platform supports many build tools . You may take a look at the- the official documentation to find some help on how to configure Jenkins to use your build tool . <p> Or you can look at the following pages : <p> Use MySQL version 5.6 <p> Use a specific version of Firefox <p> You may want to install the Custom Tools Plugin to simplify configuring the tool on multiple jobs . <p> If you cant find anything in the previous linked pages , chances are its just a lack of documentation and its supported on our platform anyway . You will need to figure out how to configure it by yourself . You can also post a support request if you need help . 
@@21562349 @1562349/ <h> The Need For Speed : Building Pipelines To Be Faster <p> Response time is paramount for a CI/CD system . In this session , you will see how a few best practices in constructing pipelines can yield faster turnaround times and reduced resource use . We 'll also run through plugins and tools to analyze and visualize performance , including the Pipeline Stage View plugin . If time permits , we may briefly discuss some of the computer science theory behind different aspects of- performance . <p> Sam Van OortSoftware Engineer CloudBees <p> Sam Van Oort is a software engineer with CloudBees and a Jenkins contributor . His work focuses on the Pipeline ( formerly Workflow ) plugin , Docker , Jenkins native packaging ( maintainer ) , and its Dockerized package test automation ( author ) . He previously worked at Red Hat with significant production exposure . In his spare time , he is also active in open source . He is a Certified CloudBees Jenkins Platform Engineer and Red Hat Certified System Administrator . 
@@21562350 @1562350/ 66502 @qwx266502 66505 @qwx266505 <h> How to filter users which belong to a specific group on Active Directory ? <h> Issue <p> Configure the security **28;3168;TOOLONG so that to access your Jenkins Enterprise instance , you HAVE to be a member of a specific Active Directory group 66501 @qwx266501 66503 @qwx266503 <p> LDAP plugin <p> Active Directory plugin <h> Resolution <p> There are two way to achieve this goal . <h> With RBAC plugin and ldap/ad plugin <p> You just need to configure your Security Realm and then use the RBAC plugin to map the AD group -&gt; Jenkins group and finally apply the corresponded role to this group . Below , there are two videos which show how to achieve this . <h> Filtering directly with LDAP plugin <p> However , you might want to filter groups at Security Realm level and not Authorization level . In this case , since the AD plugin does not allow to customize your user filter , your only way is to use the LDAP plugin . <p> Let 's say that on your AD server you have a group called group1 with @ @ @ @ @ @ @ @ @ @ perform should look something like this : 
@@21562352 @1562352/ 66502 @qwx266502 66505 @qwx266505 <h> Create drop down list selection of files populated from git repository in Pipeline <h> Issue <p> I would like to create a drop-down list selection of files populated from a GIT repository . 66501 @qwx266501 66503 @qwx266503 <p> Pipeline <h> Resolution <p> The following Pipeline example populates a drop down list selection step using property files ( by name ) found in a git repository . The selected value is passed to a parameterized downstream job as a String parameter . 
@@21562358 @1562358/ 66502 @qwx266502 66505 @qwx266505 <h> Can not launch jobs even after upgrading to 1.5.3 from 1.5.0 <h> Issue <p> After upgrading to PSE 1.5.3 and starting a job , the Jenkins master , in trying to launch an executor , launches too many executors at once and build worker runs out of resources . The result is that all of the executor instances keep restarting repeatedly , indefinitely . 
@@21562360 @1562360/ 66502 @qwx266502 66505 @qwx266505 <h> How to fix an instance having an invalid identity.key.enc file ? <h> Issue <p> Slave starting log contains this exception : <p> &lt;===JENKINS REMOTING CAPACITY===&gt;channel started Slave.jar version : 2.53.2 This is a Unix slave Evacuated stdout ERROR : Unexpected error in launching a slave . This is probably a LONG ... at LONG ... 66501 @qwx266501 66503 @qwx266503 <p> SSH slave plugin <h> Resolution <p> This issue can happen when identity.key.enc is corrupted , empty or deleted . <p> To resolve it , follow this procedure : <p> stop the Jenkins instance <p> on the Jenkins server , remove **29;3230;TOOLONG and LONG ... files <p> start the Jenkins instance <p> These files will be recreated automatically upon startup on recent Jenkins version . If its not the case , you can force that by running this Groovy script in Script Console : 
@@21562363 @1562363/ 66502 @qwx266502 66505 @qwx266505 <h> Restricting the ability for users to create projects at the Jenkins top-level vs inside Folders <h> Issue <p> We would like to allow users to only create folders at the main Jenkins level , and inside existing foldersbut not create jobs ( for instance Freestyle job , Pipeline , etc ) at root . This would be primarily for organizational purposes , etc . Would it be possible to setup security in New Item so that we can control what a user can create and what they can not ? 66501 @qwx266501 66503 @qwx266503 <p> Folders <p> Role-Based Access Control Plugin ( RBAC ) <h> Resolution <p> It is not possible to restrict the type of children for a client master . The Item/Create permission does not distinguish Folders from other items and that is why you have this limitation . <p> The only way to restrict item creation is to create a Folder and use the Restrict the kind of children in this folder option . <p> You could create a Top folder at the root of Jenkins Enterprise , and restrict it @ @ @ @ @ @ @ @ @ @ be managed by administrators . Other users should only have Item/Read at root level . 
@@21562367 @1562367/ 66502 @qwx266502 66505 @qwx266505 <h> How to send a file that is too large for zendesk ? <h> Issue <p> Ca n't attach a support bundle to Zendesk because the file is too large 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> When you need to send a file that is larger than 20 MB to CloudBees Support Engineers , there are three solutions . <p> Recompress the file <p> Using an additional compression with a different algorithm like xz can also help you to reduce the size of the archive . For exemple , on linux/macos after having installed xz with the package manager you are using for your system ( aptitude install xz , yum install xz , brew install xz , ) you can use it like this : <p> Another way is to split the archive file into separate smaller files and send them to us . The following command split the file mybundle.zip into several files named mybundle.zip.part-01 , mybundle.zip.part-02 , and so on and whose the size does not exceed 20 MB : 
@@21562370 @1562370/ <h> Intuit 's Road to Healthy and Secure Releases <p> With customers constantly demanding new features in the products and services that they use , Intuit Inc. , - " like many others in this domain " is faced with the challenge of developing and releasing features faster . Releasing faster allows Intuit to not only meet the demand head on but to also stay ahead of the- game . <p> At Intuit , customer benefits and well-being are of the utmost value. - While it is highly desirable to get a feature to our customers as quickly as possible , it is absolutely necessary that there be no compromise in the quality or security of the products and services- provided . <p> The shift in the industry towards using open source components opens up a world of possibilities toward developing features faster . While this helps speed up development and reduces costs , there are hidden costs that come in the form of- risk . <p> The security and licensing violations associated with using open source components exposes Intuit and its customers to unwanted risk. - It is @ @ @ @ @ @ @ @ @ @ better , prevent it- altogether . <p> Attendees of this session will learn more about Intuit 's journey to healthy and secure releases using Nexus Repository Pro and Nexus Lifecycle across the CI/CD pipeline " which also includes Jenkins , GitHub , SonarQube " and what the future looks- like. - <p> Varsha RajuPrincipal DevOps Engineer Intuit ( on Behalf of Sonatype ) <p> Principal DevOps Engineer at Intuit 15+ years in the Software Industry Passionate about Quality and DevOps 
@@21562372 @1562372/ 66502 @qwx266502 66505 @qwx266505 <h> How to save RBAC configuration when a Client Master needs to be renamed ? <h> Issue <p> I need to rename a Jenkins Master but I have RBAC setup on the master that needs to be deleted <p> I want to backup RBAC configuration of my client master 66501 @qwx266501 66504 @qwx266504 66503 @qwx266503 <h> Resolution <h> Background <p> The RBAC configuration of the root of a Jenkins instance is defined in the **28;3261;TOOLONG file . <p> The RBAC configuration of items of a Jenkins instance is defined in the config.xml of the corresponding item . <h> Client Masters <p> If the Jenkins instance is attached to an Operations Center that enforces the Authorization Strategy , the nectar-rbac.xml is maintained by the CJOC . In that case the RBAC settings are actually defined in the config.xml of the Client Master item on CJOC . CJOC pushes the configuration by overriding the Client Masters nectar-rbac.xml whenever changes are detected . <p> So in order to backup the RBAC settings of a Client Master with RBAC managed by CJOC , what is important is the config.xml @ @ @ @ @ @ @ @ @ @ a Client Master <p> You need to purge the CJOC configuration attached to your CJE instance and recreate the client master from scratch following these steps : <p> This guide is for when you want to rename the Client Master . If it just goes down all the configs should remain . They should have been persisted to disk the moment you clicked Save on the configuration page . 
@@21562374 @1562374/ 66502 @qwx266502 66505 @qwx266505 <h> Swarm disconnection due to already connected slave <h> Issue 66501 @qwx266501 <h> Resolution <p> The swarms PluginImpl.doCreateSlave method will assign a node an alternative name if there is a name conflict , but it never tells the swarm client about the name change . <p> This means that the swarm client tries to connect using the name that it thinks it has , and then that connection gets rejected as there is already a slave connected with that name . <p> If you encounter- swarm slave disconnects one place to look is the name of the swarm slave after generating a support bundle. - In nodes/slaves folder you will see : <p> SLAVE1-10.0.0.1 ( **31;3291;TOOLONG ) <p> SLAVE1-10.0.0.2 ( **31;3324;TOOLONG ) <p> SLAVE1-10.0.0.3 ( **31;3357;TOOLONG ) <p> while , <p> SLAVE1 ( **31;3390;TOOLONG ) <p> is already connected and is the one with the actual connection . This can confused the Jenkins instance because the- new slave name is not properly being returned to the swarm client . <p> In order to prevent this from happening the slave machines need to have a unique @ @ @ @ @ @ @ @ @ @ the swarm client will not be able to properly determine the- difference in slave names . 
@@21562377 @1562377/ 66502 @qwx266502 66505 @qwx266505 <h> How can I convert an existing Jenkins jobs to DSL Script ? <h> Issue <p> We are in process of taking backup of all existing jobs and we want to convert all existing jenkins jobs to DSL Script to save them in SCM- <p> Is there a way we can convert all existing jenkins jobs to DSL Script ? - 66501 @qwx266501 66503 @qwx266503 <h> Resolution <p> If you just want to backup the Jenkins Job configuration , you can use the SCM Sync configuration plugin . It automatically commits every job modification to a SCM . <p> For DSL scripting , there is either : <p> Jenkins Pipeline : A suite of plugins that let 's you orchestrate automation , simple or complex . <p> JobDSL plugin : a Groovy DSL to create and configure job programmatically . JobDSL scripts can be stored in a SCM and job reconfiguration can even be triggered on commit on this repository . The plugin has a extensive documentation on Github wiki . It can be difficult to start with but its very powerful . <p> Literate plugin @ @ @ @ @ @ @ @ @ @ to explain on how to build the project . <p> Unfortunately , none of theses plugins can automatically convert existing job configuration to a script . The YAML Project Plugin can do that but the plugin is at its early stage . 
@@21562378 @1562378/ 66502 @qwx266502 66505 @qwx266505 <h> How to generate a heap dump ? <h> Issue <h> Resolution <p> A heap dump is a snapshot of the memory of a Java process at a certain point of time . There are different formats for persisting this data , and depending on the format it may contain different pieces of information , but in general the snapshot contains information about the java objects and classes in the heap at the moment the snapshot was triggered . Usually a full GC is triggered before the heap dump is written so it contains information about the remaining objects . <h> 1 . Get the PID of the Java process where Jenkins is running <p> To generate a head dump the first part is to obtain the process i 'd ( or PID ) . - There are multiple- methods to obtain the PID : <p> jps -- From Unix Terminal or Windows Cmd with the JDK installed into the OS . Lists the instrumented Java Virtual Machines ( JVMs ) on the target system . <p> ps -efgrep java - From Unix Terminal only . @ @ @ @ @ @ @ @ @ @ java processes . <p> Process explorer - There are- task manager UI applications ( System Tools ) which can be used to obtain the process i 'd . Find the process and view its PID in the corresponding column . <p> On Windows and Linux ( Ubuntu ) is named as Task manager <p> On Mac OS is named as Activity Monitor <h> 2 . Get the head dump <p> After obtaining the process i 'd ( **$PID** ) , - the next step is to generate the heap dump : <p> jmap -dump:format=b , file=$FILENAME.bin $PID - From Unix Terminal or Windows Cmd with the JDK installed into the OS . It prints shared object memory maps or heap memory details for a process , core file , or remote debug server . Please , change the $FILENAME for any of the heap dumps you would like to send to us . <p> At Cloudbees , we have our own scripts that we would attach to the ticket in case we consider is relevant for diagnosing your issue . <p> Generating a few of these- heap dumps during the OOM issue @ @ @ @ @ @ @ @ @ @ commands to a cloudbees support ticket , so we can help diagnose further . <h> Notes <p> Some of these commands might require admin permissions . <p> When JDK is required ( it does not mean JRE ) . To run the proposed commands you need to run them from $JDKPATH/bin or from anywhere by including $JDKPATH/bin into your System $PATH . On the other hand , since JDK7 Update 21 , the server JRE includes these tools IIRC as well . 
@@21562380 @1562380/ 66502 @qwx266502 66505 @qwx266505 <p> Is a common error message reported by the Java Virtual Machine . This is caused when the Java environment does not have information about the HTTPS server to verify that it is a valid website . Sometimes the certificate is provided by an internal Root CA or is a Self-Signed Certificate . This sometimes can confuse the JVM as it is not one of the ones on the Java " trusted " list who can provide these certificates . <p> Because we know that the certififcate is " valid " we can import this certificate directly into the JVM . In doing so , we tell the JVM that this is is a " trusted " certificate and to " ignore " any issues with it . <p> Note In this example I will be using firefox . Similar steps are available for all other browsers . <p> To begin we first need to navigate via the browser to the URL where the certificate is located . Clicking on the green lock will show us information about the certificate . After clicking on the @ @ @ @ @ @ @ @ @ @ click on the green lock , then a new box will appear with more information about the certificate . Click " View Certificate " : <p> Click the " Details " tab which will provide detailed information about the certificate : <p> Click on the " Export " to export this certificate to local disk . Note Please make sure to maintain the PEM format : <p> After the certificate is saved to disk then please open up a terminal and it is time to import the certificate into the JVM . To do that please execute the following command : <p> $ALIAS - This can be any value . It is a value to distinguish this certificate from others . Example would be " svn-repo " , or " artifact server " . <p> $JAVAHOME - This should be the location of where your current java home is . If you only have the Java Runtime Environment ( JRE ) installed , then you can replace $JAVAHOME/jre with the $JREHOME . Note : Windows users should verify that they are importing the certificate into the JRE Jenkins runs in @ @ @ @ @ @ @ @ @ @ uses the version of Java defined in $JENKINSHOMEjenkins.xml . This can be a different version of Java than the one which gets invoked by running java or keytool from the command line . <p> $PATHTOPEMFILE - This should be the location of the PEM file we downloaded from above . <p> Once the command is executed , then the final part is to make sure that the JVM uses the correct cacert file . To do this please add the following arguments to your Jenkins Java startup process : 
@@21562381 @1562381/ <h> Resolution <p> You need to use JNLP slaves for the connection of external nodes to PSE that it will connect them to the Jenkins masteror declare them as shared JNLP slaves in CJOC . <p> In order to be able to use JNLP slaves , you have to open JNLP ports on the workers to those EC2 slaves.If you can not open the JNPL ports for each IP address , then you can either recreate the cluster or put those JNLP slaves within the VCP. 
@@21562385 @1562385/ 66502 @qwx266502 66505 @qwx266505 <h> Why is connecting to our LDAP server taking so long ? <h> Issue <p> We experience too long time to connect to Jenkins via our corporate LDAP . Is there a way to use a group filter to speed this up ? 66501 @qwx266501 <p> Jenkins <p> LDAP Plugin <h> Resolution <p> The default filter applied when membership filter field is empty is ( ( member=0 ) ( uniqueMember=0 ) ( memberUid=1 ) ) . Such a filter is a default that catches most LDAP schemas . However , it is at least three times slower that whatever is the correct filter for your LDAP schema . The correct filter for your schema should be one of ( member=0 ) or ( uniqueMember=0 ) or ( memberUid=1 ) . Changing to the correct filter will have a threefold increase in performance . 
@@21562387 @1562387/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Resolution <p> The SSH Agent Plugin bundles a few ssh-agent implementation . When Pipeline enters the sshagent step , it will print out the selection process into a Console Output . If the implementation was selected successfully and the misconfiguration is ruled out , there are two possible causes . <h> 1 . Version of SSH Agent Plugin does not support Docker Pipeline <p> Version 1.10 adds the support for the Docker Pipeline . This this the minimum version you should use for the sshagent step to work inside the Docker container . <h> 2 . Selected ssh-agent implementation does not consistently work with Docker <p> If the version of the plugin is greater than 1.10 but less than 1.14 , you are most likely affected by the issue JENKINS-36997 , see the root cause analysis bellow.You can fix the problem by upgrading the SSH Agent Plugin to 1.14 or newer and installing ssh-agent command inside Docker container.If ssh-agent is not available inside the container , the plugin will fallback to the earlier implementation , which is still affected.If you can not @ @ @ @ @ @ @ @ @ @ around by changing the location of the workspace to avoid deep nesting which leads to a long absolute file path of the socket . <h> Root cause <p> Jenkins Agent running on the node that serves as a Docker host itself acts as an SSH Agent.By default , it creates the Unix socket in the Workspace temp directory to enable communication with the processes that require access to the keys.However , if the length of the absolute path of the socket file inside Workspace temp is greater than 108 ( max path length restriction on the Unix domain socket , ref ) , it is instead created in the default system temp directory . <p> Processes inside the docker container communicate with the same SSH Agent described above.This is made possible by the automatic mounting of the Workspace and Workspace temp **25;3423;TOOLONG , this means that if the Jenkins Agent was forced to create the socket in the system temp instead of the Workspace one , processes inside the container are not able to access it . 
@@21562394 @1562394/ <p> Delivering value to the business fast is the mantra of most enterprises today . While- many technical teams are coming to grips with continuous integration ( CI ) , they are now being challenged to extend CI to continuous delivery . To get there , teams need enterprise-grade automated testing , CI and automated- deployments . <p> They will discuss the challenges of continuous integration and continuous delivery . They will utilize CloudBees Jenkins Enterprise to demonstrate how you can ensure Jenkins uptime , increase governance/oversight and improve productivity for developers and Jenkins administrators . They will also introduce the Jenkins Deployit plugin . With Deployit , you can add continuous deployment to Jenkins , reducing application time to market and enabling a smooth transition to private , hybrid and public- clouds . 
@@21562396 @1562396/ 66502 @qwx266502 66505 @qwx266505 <h> CSRF protection prevents a plugin to work <h> Issue <p> A webhook or a plugin is not working properly . You get a 403 HTTP error page containing HTTP Status 403 - No valid crumb was included in the request <p> CLI/OPE fails to connect with this error message : <p> Exception in thread " main " **31;3450;TOOLONG : connect timed out at **45;3483;TOOLONG Method ) at LONG ... at LONG ... at LONG ... at LONG ... at **40;3530;TOOLONG at LONG ... at hudson.cli.CLI. &lt;init&gt; ( CLI.java:126 ) at LONG ... at hudson.cli.CLI. main(CLI.java:471) at **33;3572;TOOLONG Suppressed : java.io.IOException : Server returned HTTP response code : 403 for URL : https : **35;3607;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at **43;3644;TOOLONG at hudson.cli.CLI. &lt;init&gt; ( CLI.java:130 ) ... 3 more <p> an API call using POST fails with a 403 HTTP error page containing HTTP Status 403 - No valid crumb was included in the request 66501 @qwx266501 <h> Resolution <p> For API calls using POST , please look at CSRF section of remote access API wiki @ @ @ @ @ @ @ @ @ @ to POST an API request . <p> We can temporarily disable CSRF protection on your instance the time a fix is published if a plugin is not compatible with CSRF protection . This can only be a temporary measure , as CSRF protection is very important for your security . 
@@21562397 @1562397/ 66502 @qwx266502 66505 @qwx266505 <h> How can I copy jobs from one folder to another ? <h> Issue <p> I 'm trying to copy jobs from one folder to another . I cant find a way to do that . 66501 @qwx266501 66503 @qwx266503 <p> Folders <p> Folders Plus <h> Resolution <p> To move folders you need either Folders or Folders Plus installed . <p> Let 's say I have two folders : my-folder and my-folder-2 and have a Jenkins job under my-folder/my-job . If would like to move this job from one location to another one , just need to click in the dropdown menu that you can see below and click on move option . <p> The question was how to " copy " not " move " . So unless " move " is really a copy ... then this does n't answer the question . - However . the missing bit of information is that the pulldown is " Move/Copy/Promote " and once you get the target named , you have three options " Move " , " Copy " and " Promote " . - I @ @ @ @ @ @ @ @ @ @ though it took a long time . - Apparently it first analyzes the job to see if the plugins on the from are compatible with the " To " . Then it took a very long time to transfer . - Perhaps because it also copies all the build results.Above is the set up to copy from one of our Jenkins to another in the Jenkins Operation Center . 
@@21562401 @1562401/ 66502 @qwx266502 66505 @qwx266505 <h> What firewall ports are necessary for JOC communication to masters and slaves ? <h> Issue <p> CloudBees Jenkins Operations Center- negotiates a different port for master and slave communication . Can you tell us what ports are involved ? <p> We are trying to connect a client-master outside of a firewall to the JOC which is inside the firewall . What firewall ports should be open . 66501 @qwx266501 66504 @qwx266504 <h> Resolution <p> What you will need to ensure is the following : <p> All potential users of a client master can access the master over HTTP(S) <p> All JNLP slaves that a client master may be leased can access the master over HTTP(S) and over that masters JNLP port <p> All JNLP slaves that OC will be leasing can access OC over HTTP(S) and over OCs JNLP port <p> All client masters can access OC over HTTP(S) and over OCs JNLP port <p> Each- of those connections needs to be able to use the same hostname to resolve the connection . The hostname can resolve different IP addresses if you have different @ @ @ @ @ @ @ @ @ @ needs to be the same for users , client masters , shared slaves , etc <h> Root Cause <p> Some operating systems do not install a firewall by default , and when using those operating systems it can be trivial to connect masters to OC ( or connect JNLP slaves to either OC or a regular Jenkins ) because the - by default - randomly selected JNLP port will be open . <p> In a production environment you will need to fix the JNLP port ( i.e. the Figure 4.7 ) ( or else you would need to have some trickery that auto-detected the random port and opened up the firewall for that port given that such trickery would be hard to maintain , we recommend the simplest thing that can possibly work , i.e. a fixed port ) <p> A common problem we have seen is where people are setting up HA and just forward the HTTP port and fail to forward the TCP/IP port for the JNLP connections ( a more subtle problem being where they do forward the TCP/IP port but do not set up the correct port forwarding options ) . 
@@21562402 @1562402/ 66502 @qwx266502 66505 @qwx266505 <h> What happens with the license of the Client Master attached to JOC ? <h> Issue <p> Do n't  know the way I should manage the license when attaching a CloudBees Jenkins Enterprise instance to a JOC instance . 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> The recommended option is to let JOC manage the license for all the instance running as client masters . However , when you configure a client master in JOC there are several license strategies you can use. - <p> You can read more about the different licenses strategies you can use here . 
@@21562405 @1562405/ 66502 @qwx266502 66505 @qwx266505 <h> How to remove maven repositories on DEV@Cloud ? <h> Issue 66501 @qwx266501 <h> Resolution <p> Mounting the Repository Locally <p> Because your repository is exposed over WebDAV , you and all of your developers can mount your Maven repositories as WebDAV drives , allowing you to interact with it just like a local drive ( drag and drop operations , etc ) . - - <p> The user name you use will be the one you setup when you created your account - if you click on the account details icon ( a little cog up the top right ) then you will be able to see your current user name - use this - NOT your email that you logged in with . <p> How to mount this depends on your operating system , but here are some pointers on how to do this : 
@@21562406 @1562406/ 66502 @qwx266502 66505 @qwx266505 <h> How to select the correct agent to build my job <h> Issue <p> How can we specify the agent to use to build a job ? 66501 @qwx266501 <p> Jenkins OSS 66503 @qwx266503 <h> Resolution <p> When you have multiple agent available , whether you are using a classic job type ( Freestyle , Maven , etc ) or a Pipeline ( even MultiBranch Pipeline ) , you can select a specific agent to build your project . <p> In a classic job type , you will find a Restrict where this project can be run checkbox and text field in the properties of the job : <p> In a ( MultiBranch ) Pipeline , you can specify this in the parameter of the node block : <p> node ( 'foo ' ) <p> The value of both the text field and the node parameter are the same : it can be the agent name , or a Groovy boolean expression . <p> Using the agent name , you make the job tied to this specific agent . This can be problematic when the @ @ @ @ @ @ @ @ @ @ available . <p> The best solution is to use the labels . When you configure your agents , you can put a space-separated list of labels on your agent . Those can be used to describe what the agent can be used for : maven , npm , etc . It can also describe what the agent is running on : windows , linux , x64 , etc . This will create pools of agents based on the labels . Then , on your job configuration , you can use those label in a Groovy boolean expression to select the correct agent for your job : 
@@21562408 @1562408/ 66502 @qwx266502 66505 @qwx266505 <h> Why am I unable to login to Jenkins when using RBAC and Crowd 2 Plugin ? <h> Issue <p> Jenkins starts , but now I am unable to log in . We are using crowd2.hpi . With authentication against Atlassian Crowd . 66501 @qwx266501 <p> CloudBees Jenkins Enterprise 1.580.2.1 <p> Crowd 2 Plugin 1.8 <p> RBAC <h> Issue <p> To be able to log on you must be member of a group defined for restrict groups in Crowd2 config . This filed could be empty before but is needed now , then log on works , and RBAC can be enabled and seems to work too . 
@@21562410 @1562410/ 66502 @qwx266502 66505 @qwx266505 <h> How to configure swarm to use it with Operations Center Server Docker Cloud ? <h> Issue <p> Do n't  know how to configure swarm to use it with Operations Center Server Docker Cloud . <p> - 66501 @qwx266501 66504 @qwx266504 <p> - <h> Resolution <p> The Operations Center Server Docker Cloud provides you the ability to create a Docker cloud in CJOC . From there , there is nothing special to be done on CJOC side . <p> Basically , the way you configure it is the same you would configure it in case you are running a Standard Jenkins instance + Docker plugin . Docker itself provides you the ability to use swarm . <p> In- this link- you can see that the swarm is actually done in Docker side . Docker plugin , and Operations Center Server Docker Cloud just provide the ability to work with this Docker feature , but this is transparent from the user point of view . <p> - <p> The way the Operations Center Server Docker Cloud plugin needs to be configured is documented on our documentation webpage. 
@@21562411 @1562411/ <h> Jenkins World to Offer Multiple Opportunities to Expand Jenkins and DevOps Knowledge <p> SAN JOSE , CA . " August 16 , 2016 " - The Jenkins community , the community of practitioners using open source Jenkins , and lead organizing sponsor CloudBees , Inc. , the enterprise Jenkins company and continuous delivery ( CD ) leader , - today announced a full program of add-on training , workshops and the ability to take a Jenkins certification exam for free at the upcoming Jenkins World conference , to be held September 13 " 15 in Santa Clara , - CA . <p> Jenkins Certification Training and Free Certification Exam : September 12-13This course , delivered by experts from opensourcearchitect and- Nebulaworks , will prepare attendees for the Jenkins certification exam . It will cover all exam topics and there will also be a series of labs on several subjects addressed throughout the course . Attendees- will : <p> Learn from Jenkins experts : Both opensourcearchitect and- Nebulaworks are certified to deliver Jenkins- training and both teach courses about Jenkins on an ongoing- basis . <p> Take the training @ @ @ @ @ @ @ @ @ @ Jenkins World offers 50 sessions across a variety of topics and skill- levels . <p> Take a free certification exam : Offered at convenient times throughout the conference , and free , as long as you sign up for it at the time of conference- registration . <p> Fundamentals of Jenkins Pipeline and Docker Training : September 12This course is an introduction to the Pipeline plugin , used in combination with Docker . Following an overview of Pipeline and Docker , participants- will : <p> Introduction to Plugin Development This workshop will introduce developers to the Jenkins plugin ecosystem and terminology , as well as identify the developer resources- available . <p> CD and DevOps Maturity Workshop for Managers In this workshop , we will review the definition of DevOps , its relationship to continuous delivery ( CD ) and explore a simple , lightweight model for measuring organizational DevOps- maturity . <p> About Jenkins and the Jenkins CommunityJenkins is the leading open source automation server supported by a large and growing community of developers , testers , designers and other people interested in continuous integration , continuous delivery and @ @ @ @ @ @ @ @ @ @ Virtual Machine ( JVM ) , it provides more than 1,200 plugins that extend Jenkins to automate with practically any technology software delivery- teams- use . <p> The Jenkins community advocates the use of Jenkins to the global development community , serving as a central source for tutorials , forums and other helpful resources for Jenkins users of all experience levels . By recognizing the numerous contributors to the Jenkins project , the project creates and fosters a community-powered infrastructure for maintaining and further developing Jenkins . You can follow the Jenkins community on- Twitter- ( @JenkinsCI ) . <p> About CloudBeesCloudBees ( www.cloudbees.com ) , the Enterprise Jenkins Company , is the continuous delivery ( CD ) leader . CloudBees provides solutions that enable DevOps teams to respond rapidly to the software delivery needs of the business . Building on the strength of Jenkins , the world 's most popular open source continuous delivery hub and ecosystem , the CloudBees Jenkins Platform provides a wide range of CD solutions that meet the unique security , scalability and manageability needs of enterprises . The CloudBees Jenkins Platform supports many of @ @ @ @ @ @ @ @ @ @ CloudBees on Twitter , - Facebook , LinkedIn- and- Google+. 
@@21562413 @1562413/ 66502 @qwx266502 66505 @qwx266505 <h> Pipeline - I would like to use Docker CLI inside of a Pipeline job <h> Issue <p> I would like to use Docker CLI inside of a Pipeline job 66501 @qwx266501 66503 @qwx266503 <p> Pipeline Docker Plugin <h> Resolution <p> Wrapping the section you want to use docker in with docker.withTool ( " default " ) will allow you to use the docker command line tool . This will install docker on that slave to have it running as a service . You need to make sure that " default " points to a docker tool inside of Manage Jenkins&gt; Configure System which will also run on the os of the slave . <p> Your pipeline script will go from this ( which does n't  work unless you have docker installed on the slave ) : 
@@21562420 @1562420/ 66502 @qwx266502 66505 @qwx266505 <h> How to Grant Folder Access to Group Intersections with RBAC ? <h> Issue <p> I want to restrict access to a folder for GroupA and for GroupB but I want to give access to users that are in GroupAAND in GroupB 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <p> Role-Based Access Control Plugin ( RBAC ) <h> Resolution <p> To have a full understanding of the concepts applied in the article , please have a look at the documentation of the RBAC Plugin . <h> Scenario <p> I have : <p> GroupA is a group that contains A users <p> GroupB is a group that contains B users <p> A Roles are roles assigned to GroupA <p> B Roles are roles assigned to GroupB <p> FolderAB is a the folder for which we want to restrict access to users of GroupA that are also in GroupB <p> GroupA and GroupB are defined above FolderAB in the Folder Hierarchy <h> Solutions <p> In the following solutions : <p> GroupAB is a group that contains users of GroupA that are also users of GroupB <p> AB Role @ @ @ @ @ @ @ @ @ @ B Roles <h> 1 . Solution <p> In the documentation of RBAC about Roles filter , there is an important concept : When a role is filtered , then the role is not available on that object to users unless there is a group defined within that object which the user is a member of and which has been assigned that role . <p> This is exactly what needs to be done to achieve our goal here : We need to restrict a folder and create a Group in that restricted folder to grant access to users that are in GroupA AND in GroupB . Hence we need to create a GroupAB containing users of GroupA that are also users of GroupB . <p> This solution is directly related to this concept : we filter A Roles and B Roles for FolderAB and we create GroupAB on that folder which joins A Roles and B Roles and contains user that are in GroupA as well as in GroupB : <p> In FolderAB : <p> Filter the A roles and the B roles <p> Create the group GroupAB that should : @ @ @ @ @ @ @ @ @ @ Group B <p> Be configured with A roles and B roles <p> Note : RBAC groups can be added to a Group just like normal users and therefore : <p> If the requirement is for several folder , you can create GroupAB at the root level and use that Group within the folder . <p> If the requirement is for only one folder or only a few , I would recommend to create the GroupAB within the folder <h> 2 . Solution with a Joined Role <p> Based on the fact that users that are in GroupA and also in GroupB have the joined set of permissions granted by both groups ( *A Roles* and B Roles ) , you can create an AB Role that combines these permissions and assigns it to a GroupAB that contains the users of GroupA that are also users of Group B. 
@@21562421 @1562421/ 66502 @qwx266502 66505 @qwx266505 <h> How to use Probe Command on a Node ? <h> Issue <p> I want to prevent my node to be allocated if Disk Usage is over 80% 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> First , Node Monitoring can be configured at Manage Jenkins/Manage Nodes/Configure . The default Free Space Threshold is set to 1GB which means that nodes are not allocated if the amount of Free Space is under 1GB . This is a setup for all slaves . <p> A way to monitor a specific thread is to use the Nodes Plus Plugin . A probe command can be specified to decided whether or not a node is able to accept tasks . If the command return an exit code different to 0 , the slave can not accep tasks . The best way to use this feature is to create a script on the slave machine and launch it as a probe command . <h> Example <p> I want to prevent my unix node from being allocated if the Disk Usage is over 80%. 
@@21562427 @1562427/ <h> CloudBees Jenkins Platform for AWS <p> The power of the Amazon Web Services ( AWS ) cloud platform with enterprise-level continuous delivery " all orchestrated by- Jenkins <p> Together , AWS and CloudBees help application development and operations teams implement continuous integration ( CI ) and continuous delivery ( CD ) . The powerful integration of the Amazon Cloud with the CloudBees Jenkins Platform enables enterprise teams to easily run the CloudBees Jenkins Platform on AWS and to seamlessly interact directly with AWS services from within- Jenkins . <h> Scale your CloudBees Jenkins Platform environments with Amazon- EC2 <p> Amazon EC2 makes it easy to run and scale Jenkins instances to meet your computing needs . The integration of the CloudBees Jenkins Platform and AWS enables enterprise customers to scale CD deployments by shifting Jenkins ' compute-intensive jobs and resources to AWS , thus leveraging the elasticity offered by the- cloud . <h> Continuous Delivery with the CloudBees Jenkins Platform for- AWS <h> CloudBees Jenkins Platform on AWS- Marketplace <p> The CloudBees Jenkins Platform components are available on the AWS marketplace . Available as a bring your own @ @ @ @ @ @ @ @ @ @ you to seamlessly provision your virtual machines of Jenkins masters and Operations Centers and interact directly with AWS services , including Amazon EC2 , Amazon S3 , AWS Route53 and AWS Lambda from within- Jenkins . <p> Use the CloudBees Jenkins Platform on EC2 and take advantage of shared elasticity with Jenkins and EC2 , or connect to other AWS services , leveraging the power of Jenkins for their software delivery- processes . <p> - <h> Get Started- Today <p> The CloudBees Jenkins Platform is distributed on the AWS Marketplace on a Bring Your Own License- model . <p> Provision your virtual machines with the AWS marketplace images and enter your license details , or start a free evaluation from the welcome screen of the created Jenkins- instance . <p> Install the EC2 Jenkins Plug-in ( two options ) : <p> EC2 Plugin : allows Jenkins to start agents on EC2 or Eucalyptus on demand or as Spot instances , and kill them as they go- unused . 
@@21562436 @1562436/ <h> How To Develop a Jenkins Plugin ( Session in French ) <h> Tuesday , 17 April 2012 - <h> 2:30pm 3:40pm <p> The number of plugins increases exponentially . This vast ecosystem of plugins enables Jenkins to cover a large number of needs . However , you are likely to create your own plugin to meet your specific needs or integrate your specific tools . I invite you to discover the Jenkins API to create your own plugin . This session will help you understand the prerequisites for the development of a Jenkins- plugin . <h> Gregory Boissinot <p> Senior Consultant , Architect and Trainer <p> Zenika <p> I 'm a senior consultant , architect and trainer at Zenika . I specialize in build tools and in continuous integration ( CI ) processes . I have set up cutting-edge CI processes for major banks and companies in other industries . I contribute actively to Jenkins and have developed almost 30 plugins such as the popular xunit , xtrigger and the envinject- plugins. 
@@21562438 @1562438/ 66502 @qwx266502 66505 @qwx266505 <h> Jenkins fails to startup **27;4066;TOOLONG <h> Issue <p> **30;4095;TOOLONG : **41;4127;TOOLONG : java.lang.Error : **43;4170;TOOLONG at **44;4215;TOOLONG Caused by : **41;4261;TOOLONG : java.lang.Error : **43;4304;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at **44;4349;TOOLONG Caused ... at LONG ... at **37;4440;TOOLONG Caused by : **43;4479;TOOLONG at LONG ... Method ) at LONG ... at LONG ... at LONG ... at LONG ... ... 8 more Caused by : **30;4524;TOOLONG at LONG ... ... 13 more 66501 @qwx266501 66503 @qwx266503 <p> CloudBees Fast Archiver Plugin &lt;= 5.3 <h> Resolution <p> A fix is in the works to prevent this error from appearing , however as a- *temporary* solution you can disable the- CloudBees Fast Archiver plugin . To do that : <p> I migrated Jenkins dir from one server to another and I got similar error but " touch **37;4556;TOOLONG " did n't work for me. - <p> Here @ @ @ @ @ @ @ @ @ @ java.lang.Error : **43;4670;TOOLONG at **44;4715;TOOLONG Caused by : **41;4761;TOOLONG : java.lang.Error : **43;4804;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at **44;4849;TOOLONG Caused ... at LONG ... at **37;4940;TOOLONG Caused by : **43;4979;TOOLONG at LONG ... Method ) at LONG ... at LONG ... at LONG ... at LONG ... ... 8 more Caused by : **30;5024;TOOLONG : **45;5056;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... ... 13 more Caused by : **32;5103;TOOLONG : **45;5137;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... ... 18 more 
@@21562441 @1562441/ <h> Mapping and Measuring your Journey to DevOps <p> Recorded on June 1 , 2016 <p> - <p> Speaker : Brian Dawson- <p> - <p> In this webinar , - we will build on the Four- Quadrants of DevOps maturity model introduced in part one- of the series , and walk though a real world example of using the model to assess the DevOps readiness of a leading financial services provider , and plan the steps for their DevOps transformation . <p> - <p> By attending this webinar , you will : - <p> Learn how to apply the four Quadrants of DevOps maturity model plan- journey <p> Gain practical guidance on how to start and drive a DevOps- transformation- 
@@21562443 @1562443/ <p> Services Partners provide expertise , consulting and integration services for companies using Jenkins on-premise or in the cloud and implementing continuous delivery practices . If you need an expert to help you deliver quality software , talk to our best-of-breed systems- integrators . <p> CloudBees Training Partners are certified by CloudBees as an authorized training partner . Engaging with our certified training partners ensures you receive the most current training available on the latest versions and solution- sets . <p> CloudBees Technology Partners deliver compelling services and application development tools that work with the CloudBees Jenkins Platform to help you easily develop , test and manage your apps on-premise or in the- cloud. - 
@@21562447 @1562447/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Resolution <p> For users you registered on console.cloudbees.com , - a users identity is based on email address . Other users in jenkins are extracted from SCM changelogs and dynamically populated . <p> Users registered on console.cloudbees.com are not immediately created on your Jenkins instance - a Jenkins user is created when they login , and our SSO service does a validation access to the web UI . So you wo n't see this user in the people UI until they connect . Also , this list is n't persisted ( until the user edits their profile to add additional informations ) 
@@21562463 @1562463/ 66502 @qwx266502 66505 @qwx266505 <h> Resolution <p> If you did a push and your job was not triggered , you should ensure that on BitBucket side you have configured your hook with an URL like this one : LONG ... Notice that last " / " , without it , the build will not be triggered . <p> You can- also check that Jenkins has received the trigger hook in the Jenkins access logs : - LONG ... <p> You can also enable some BitBucket logs under- Manage Jenkins -&gt; System Logs-&gt;New Log Recorder with a configuration like the one below : 
@@21562465 @1562465/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Resolution <p> CloudBees PostgreSQL binaries do n't  have extensions found in contrib directory of PostgreSQL sources . You will need to build your own PostgreSQL binaries to use it . <p> You should find everything you need to compile PostgreSQL on CloudBees slaves.If you require a missing dependency to build your own binaries , you can build PostgreSQL on your own Linux server and upload the archive in your private repository . You should use a Fedora 17 x64 to prepare binaries . <p> Building your own PostreSQL binaries should only be done once . The generated archive should be put in your private DEV@cloud repository . Jobs requiring it would download and extract the archive like custom binaries we offer . 
@@21562479 @1562479/ 66502 @qwx266502 66505 @qwx266505 <h> Can a pipeline be triggered from a post-build action of a freestyle project ? <h> Issue <p> I have a Jenkins Pipeline which I am able to run by clicking Build . But when I try to start it from the Build other projects post-build action of an ( freestyle ) project , I just get an error in the form <p> my-flow is not buildable <p> and the downstream flow is not run when the upstream project is built . 66501 @qwx266501 66503 @qwx266503 <p> Pipeline Plugin- <h> Resolution <p> The post-build action Build other projects does not simply do what it sounds like : build those projects when the step is run . In fact running the step does nothing at all . Instead , it causes the named projects to be included in an edge of the dependency graph , and downstream projects according to the graph are then run according to separate logic . And currently the dependency graph API is defined in such a way that Pipeline jobs can not participate . Long story short , that mode does @ @ @ @ @ @ @ @ @ @ ways to start downstream jobs . The nonblocking trigger works much like the Jenkins core trigger : it affects the dependency graph . There is also a blocking trigger ( which is a build step , not a post-build action ) , which just does what you probably expected : start the downstream build ( much like the build step in Workflow ) . Currently this plugin does not support Pipeline , though it would probably be easy to make it use more current APIs so that it would : JENKINS-26050 <p> What does work is to configure the relationship in the reverse direction : in the Pipeline job configuration , select Build after other projects are built and select your freestyle project . Now when the freestyle project finishes building , the Pipeline job is triggered . 
@@21562481 @1562481/ <h> How to Run Selenium Load Testing as Part of Your CI Process <p> Performance testing is no longer relegated to the QA team at the end of the development- process . <p> As testing cycles get faster and increasingly democratized , it 's crucial to integrate performance testing with other tools seamlessly within the CI process . In this session , BlazeMeter CEO Alon Girmonsky demonstrates how the open source tool Selenium can now be used to execute large scale load tests in the cloud - and easily added as a step in the Jenkins- pipeline <p> Alon GirmonskyCEO BlazeMeter <p> Alon brings over 20 years of technological expertise and innovation to the creation of BlazeMeter . Prior to founding BlazeMeter , he served as the CTO , VP Technologies for Taldor and was Co- Founder of iWeb Technologies ( acquired by Global Media Online , 2002 ) , a Young &amp; Rubicam backed New Media Company . Alon began his career in the technology sector as an officer in the software division of Israel 's Defence Force Intelligence unit . 
@@21562486 @1562486/ <h> Introduction to CloudBees Jenkins Platform ( Delivered in Russian ) <p> Recorded on September 5 , - 2016 <p> CloudBees Speaker : Oleg- Nenashev <p> This webinar is about CloudBees Jenkins Platform , one of the leading enterprise solutions for building reliable continuous integration and continuous delivery systems for software ( and other ) products . The platform is powered by Jenkins , which is one of the most popular open-source automation servers in the- world . <p> The target audience are automation engineers , system administrators and their- managers . 
@@21562495 @1562495/ 66502 @qwx266502 66505 @qwx266505 <h> How to add a Mac Slave as a service ? <h> Issue 66501 @qwx266501 66503 @qwx266503 <p> - MAC OSX <h> Resolution <p> For a MAC you can use either use- Java Web Start or just config- them as- Unix slaves with- launch method Launch slave agents on Unix machines via SSH . <p> If you decide to use Java Web Start , then the set-up is not straight forward as you will need to manually create the service . Moreover , when you upgrade Jenkins you will need to manually upgrade slave.jar , which is automatically upgraded in the case of the ssh slaves . For these reasons , we recommend to use the ssh approach for Mac slaves . 
@@21562501 @1562501/ 66502 @qwx266502 66505 @qwx266505 <h> Why does RBAC plugin fail to read LDAP group ? <h> Issue <p> You- use LDAP and RBAC and want to- match LDAP groups to roles . However , there are ldap groups which fails. - 66501 @qwx266501 66503 @qwx266503 <p> Ldap/AD <p> RBAC <h> Resolution <p> There are multi reasons but this usually happens because a case sensitivity issue . <p> Ensure that you provide the exact case of the group name as reported from the /whoAmI screen or else the group membership will not be correctly inferred . <p> There should be an " advanced " button for configuring case sensitivity in the LDAP plugin , you probably want to use that to set the strategy . <p> Additionally , there is- an open RFE against our RBAC plugin to use the case sensitivity strategy , that RFE is waiting for us to drop support for the Jenkins 1.554. x.y release line ( i.e. May 15 ) . Until that time you just need to be careful entering the names of groups or users 
@@21562502 @1562502/ 66502 @qwx266502 66505 @qwx266505 <h> Copying Jenkins home gives duplicate instance ids <h> Issue 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <p> Jenkins + Nectar License plugin <h> Resolution <p> If you need to- duplicate a Jenkins- instance by copying the entire JENKINSHOME it will lead to duplicate instance ids . You can re-create the instance i 'd for the new Jenkins installation by doing the following : <h> 2 Comments <p> It seems that some additional steps are required when copying a JENKINSHOME of a 2.7.19.1 CJEE master that 's connected to CJOC . I had to force-push a new clienst master connection from cjoc side to get the copy running properly . <p> I tried these steps with Jenkins 2.7.19 and it does n't work ( I 'm not using Operation center ) . - <p> I deleted the secrets.key file along with license.xml . When I restarted the Jenkins service on the test server , I got this fatal error : - " An error occurred : Default update site connectivity check failed with fatal error : Can not check connection status of the update site with ID='cje-offline ' . " - 
@@21562504 @1562504/ <p> Onsite training at Jenkins World provides an opportunity to get hands-on , in-depth skills , paired with practical strategies for accelerating software- delivery with Jenkins . Training will be delivered by CloudBees and Jenkins World Training Sponsors : Infostretch , OSA- and ECS Digital . Training and workshops- occur throughout the- two days ( August 28-29 ) before the conference sessions , allowing you to maximize learning opportunities throughout Jenkins- World . <h> Training <p> Jenkins Certification Training <p> This is a thorough , two-day training course to help you prepare for certification . We will cover all exam topics through a curriculum based on the various steps of the continuous delivery process . This course also features a series of hands-on- labs . <p> If that is n't enough to persuade you , here are a few more reasons to- sign-up : <p> This one-day training will be delivered- on August 29 , - before the conference sessions begin . It is an introduction to Jenkins Pipeline deployed with Docker . Following an overview of Pipeline and Docker , students will go through a real-life Jenkins Pipeline/Docker @ @ @ @ @ @ @ @ @ @ the context of a hands-on- lab . <p> Learn about the need for Jenkins Pipeline . Learn about key pipeline use cases , structure and syntax , and execution control . - <p> Get an understanding of how to prepare Docker environments . Learn about key Docker use cases , Docker tools and how to create a deployment lifecycle with Jenkins Pipeline and Docker. - <p> This training is an introduction to CloudBees Jenkins Enterprise . Following an architectural overview , students will go through a series of presentations and demonstrations , allowing them to discover the product 's main features . Learn how CloudBees Jenkins Enterprise enables enterprises to leverage Jenkins in ways not possible in open- source . <p> The training starts with a section on CloudBees Jenkins Enterprise general concepts and is followed by two main- sections : <p> We will conclude with a section highlighting specific aspects of CloudBees Jenkins Enterprise on several deployment platforms , such as AWS , OpenStack and- VMware . <p> - <p> Fundamentals of CloudBees Jenkins Enterprise At A Glance <p> Cost : $199 USD , add it during the registration @ @ @ @ @ @ @ @ @ @ 29 from 9am - 5pm - <p> Capacity : 50 attendees - <p> Instructors : Brent McGonnell and Darin Pope , CloudBees - <p> Room : Salon- 12-13 <p> Introduction to Jenkins <p> This training is an introduction to Jenkins and its environment . Learn how to easily create automated pipelines while putting in place best practices for continuous integration and continuous delivery . Learn how to get help from and contribute back to the Jenkins- community . <p> Following an overview of the Jenkins ecosystem and community , we will cover key concepts and tools related to continuous integration and continuous delivery , such as : source code management , build , test and deployment . The core part of the training will be based on practical examples of pipeline creation , using Jenkins ' Blue Ocean Visual Pipeline Editor . We will also leverage other key components of Blue Ocean such as pipeline visualization , troubleshooting and personalization . We will conclude by- introducing the powerful concept of Declarative Pipeline syntax and how it enables all- DevOps- team members , regardless of expertise , to participate in the @ @ @ @ @ @ @ @ @ @ Glance <p> Cost : FREE - <p> Day &amp; Time : Tuesday , August 29 - <p> Capacity : TBD - <p> Instructor : Patrick Wolf , CloudBees - <p> Room : - TBD <h> Certification <p> All attendees with a full conference sessions pass will receive a FREE certification exam voucher ( $150- value ) . 
@@21562505 @1562505/ 66502 @qwx266502 66505 @qwx266505 <h> Accessing graphs on a Build History page can cause Jenkins to become unresponsive <h> Issue <p> When accessing graphs on a Build History Trend page cause Jenkins to become unresponsive <p> This is being manifested on : * At Browser , it can been seen at HTTP 503 Service unavailable . * Jenkins is unresponsive but still running and can not login via browser. * At Thread Dumps , it can been seen Requests containing /timeline/data/ as BLOCKED . For instance something similar to : <p> " Handling POST **27;5483;TOOLONG from example.com : **30;5512;TOOLONG " Id=7549 BLOCKED on **28;5544;TOOLONG owned by " Handling POST **27;5574;TOOLONG from example.com : **30;5603;TOOLONG " Id=203 at LONG ... - blocked on **28;5635;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at **45;5665;TOOLONG ... 
@@21562508 @1562508/ <h> Graduating To Jenkins CI For Ruby-on-Rails Teams <h> Thursday , 17 May 2012 - <h> 5:00pm 5:45pm <p> We 're Ruby developers , we built our CI with CI Joe . We use- Heroku , to an open-source Heroku Bartender . If I had to do- this all over again , I would just start with Jenkins. - We corrected our mistake and graduated to Jenkins CI . We even- became plugin developers with the most useful plugin ever , - AnsiColor. - In this talk I 'll give a brief overview of our journey from three engineers with Ruby tools to a company of 30 people that rely- daily on Jenkins CI . I will also deliver details on what role Jenkins- plays during development , test and- production . <h> Daniel Doubrovkine <p> Art.sy <p> Daniel is the tallest engineer at Art.sy in NYC ! Besides standing tall , he- founded and exited a successful Swiss start-up in the 90s , worked for Microsoft in Redmond , dabbled in large scale social- networking and ran a big team that developed an expensive-looking- enterprise product . Daniel is an open source cheerleader and a- converted- Rubyist. 
@@21562511 @1562511/ 66502 @qwx266502 66505 @qwx266505 <h> After using a Windows shared folder to implement HA some icons are missed from Jenkins <h> Issue <p> After using a Windows shared folder to implement- HA some icons are missed from Jenkins . 66501 @qwx266501 <p> CloudBees Jenkins Enterprise &lt;- jenkins-1.598 <p> CloudBees Jenkins Operations Center- &lt;- jenkins-1.598 <p> CloudBees HA plugin <h> Resolution <p> Be sure that in both machines ( the one jenkins is running as a service and the one used for the network shared path ) you are using the same Windows user . Otherwise , it will not work . If you are using- USER1 to run Jenkins as a service , then in the network shared path windows machine , this USER1 should also exist with the same password . <p> The next step I did is to download Jenkins Operation centre/JEbC from this link and I installed it in the machine . <p> After it was installed I checked that everything was working without using the network share path . <p> After I checked this , I stopped the service from services . and I customized @ @ @ @ @ @ @ @ @ @ " value= " servershareddata " /&gt; <p> However , with Jenkins 1.580 there is an issue that we- fixed last December related to icons not being displayed due the UNC paths . You can see our- pull request fixing this issue in the link LONG ... <p> Unfortunately , you can not still beneficiate of this fix unless you are running at least- jenkins-1.598 , but you can create a symbolic link as workaround : <p> mklink /d " c : datanetwork docs " " servershareddata " <p> Then , to correctly visualise the icons you need to customise that line with : <p> &lt;env name= " JENKINSHOME " value= " c : datanetwork docs " /&gt; <p> After this , you can start the jenkins service again and see if- servershareddata was populated with the right information . <p> If this worked , you can now copy/paste your real JENKINSHOME you want to migrate into servershareddata 
@@21562513 @1562513/ <h> Challenge : <h> Solution : <p> The Backup Scheduling plugin , available with the- CloudBees Jenkins Platform , greatly simplifies the job of doing backups . You create a backup by simply creating a new type of job called Backup Jenkins . You can choose to backup job configurations , build records , system configurations or any combination thereof . In addition , since a backup job is a Jenkins job , you can easily relocate the configuration to a different system if required - no porting of shell- scripts ! - 
@@21562514 @1562514/ 66502 @qwx266502 66505 @qwx266505 <h> Best Practice For Using Jenkins REST API <h> Issue <p> Best Practice For Using Jenkins REST API 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> The Jenkins REST API should never be used without the tree parameter . Using the Jenkins REST API without the tree parameter , making a call to /api/json for example will run . However , making a call to /api/json will cause Jenkins by default to respond with some rather arbitrary collection of data , some of which might not be used and which may be work to compute . The practice of making /api/json calls can cause poor performance issues and high CPU issues . 
@@21562517 @1562517/ <h> Navigating the Path to DevOps Maturity in the Real-World <p> Continuous Delivery and DevOps are talked about everywhere you turn. - Implementing these approaches can bring market-leading innovation by accelerating the software delivery process. - But how ? ! You ca n't even get Dev and Ops to talk much less automate your entire process. - In this webinar , we will discuss real-world challenges encountered in implementing DevOps and show how a simplified four quadrant maturity model can be used to assess your current state and guide you in your- implementations . <p> By attending this talk attendees- will : <p> Hear from Forrester Research on the latest industry analysis of DevOps- maturity <p> Learn about the four quadrants of DevOps- maturity <p> Hear about some of the hurdles faced in implementing CD and- DevOps <p> Hear a real-world success story from a leading enterprise software- company <p> Discover how to use a simple DevOps maturity assessment to identify the right solutions for- you 
@@21562521 @1562521/ 66502 @qwx266502 66505 @qwx266505 <h> Avoid script approvals with a Jenkins Pipeline Groovy script <h> Issue 66501 @qwx266501 <h> Resolution <p> With- Groovy CPS DSL from SCM there is intentionally no option to disable sandbox mode ( though such a RFE is filed ) , i.e. , to use whole-script approval mode . <p> On the other hand , Groovy CPS DSL source , you have two modes : with or without sandbox . These are very different . Without the sandbox , the whole script must be approved , or this is done implicitly if the edit is done by an administrator . With the sandbox , every method call ( etc. ) must be approved , regardless of user . For Groovy CPS DSL from SCM , currently only sandbox mode is offered ; JENKINS-28178 tracks alternatives . LONG ... gives more context . 
@@21562523 @1562523/ <h> High Availability Plugin <h> Challenge : <p> When a Jenkins master fails ( due to software or hardware crashes ) , it results in- extended- downtime for the entire product team . Administrators detect these failures manually or through homegrown scripts . Once a failure is noticed , administrators scamper to get the master up as quickly as possible ; this process is often manual and easily takes more than a few hours . On larger projects , the downtime experienced from a failure can be the equivalent of several days of lost project- time . <h> Solution : <p> The High Availability plugin , offered within the- CloudBees Jenkins Platform , - eliminates downtime due to master failures . Multiple Jenkins masters act as backups waiting for a primary master failure . Once a failure is detected , a backup master automatically boots up and acts as a failover.The best part ? Project work- continues . <p> With this feature , failure detection and recovery is automatic and requires no intervention from administrators or their home-grown scripts . Additionally , this feature can be used to do rolling upgrades of- Jenkins . 
@@21562525 @1562525/ <h> Chapter- 17. - The torquebox Command <p> When you install TorqueBox you get a torquebox command line utility that can be used to deploy and undeploy applications , start and stop the server , and more . Running torquebox without any arguments displays the help screen . <h> 17.1. - torquebox deploy <p> Running torquebox deploy will deploy your current working directory as an application to TorqueBox . If provided with a ROOT path , such as torquebox deploy /path/to/my/app the command will deploy the application found at that path . <p> ROOT can be directory containing the application you want to deploy , a -knob.yml file , a . knob archive , or any Java deployable artifact ( . war , . ear , etc ) . <p> Table- 17.1. - torquebox deploy options <p> Option <p> Description <p> **26;5712;TOOLONG <p> The web context path for your application . ( e.g. / or /myapp ) <p> --env=ENV <p> The application environment . ( e.g. development , test , production ) <p> --name=NAME <p> The name of the deployment artifact. ( e.g. myapp ) <h> 17.2. - torquebox @ @ @ @ @ @ @ @ @ @ undeploy ROOT . This command will undeploy your application from TorqueBox . Similar to deploying , running this with no arguments , will attempt to undeploy an application with the same name as the current working directory . Providing a name or path , will cause torquebox undeploy to attempt to undeploy an application with that name . <h> 17.3. - torquebox run <p> The torquebox run command will run the TorqueBox server . In development , this is similar to rails server . <p> Table- 17.3. - torquebox run options <p> Option <p> Description <p> --clustered <p> Runs TorqueBox in clustered mode . <p> **31;5740;TOOLONG <p> Override the directory TorqueBox uses to store it runtime data . <p> --extra=EXTRA <p> Extra options to pass through to JBoss AS , you will to escape dashes with ( e.g. --help ) <p> --max-threads=N <p> Maximum number of HTTP threads <p> **27;5773;TOOLONG <p> IP address to bind to - do n't set this to 0.0.0.0 if used with --clustered <p> --node-name=NODE-NAME <p> Override the name of the node ( which by default is the hostname ) <p> --port-offset=N <p> Offset all port @ @ @ @ @ @ @ @ @ @ <p> Options to be passed to the JVM <p> The server will retain control of the console while it is running . To stop the server , simply send a SIGINT , typically by typing control-C. <h> 17.4. - torquebox rails <p> The torquebox rails ROOT command creates a Rails application at ROOT using the TorqueBox Rails template , or applies the TorqueBox template to an existing Rails application at ROOT . As with other commands that take a ROOT argument , if ROOT is omitted , the command will operate on the current working directory . <p> $ torquebox rails # Create a new Rails application in the current directory <h> 17.5. - torquebox archive <p> The torquebox archive ROOT command creates an application archive containing all of your application dependencies . The archive can be deployed to TorqueBox with the --deploy option or by hand after the archive file , known as a . knob , has been created by using torquebox deploy myapp.knob . If ROOT is omitted , the command will operate on the current directory . <p> Table- 17.4. - torquebox archive options <p> Option @ @ @ @ @ @ @ @ @ @ TORQUEBOXHOME <p> --packagegems <p> Include all Bundler gem dependencies in the archive . <p> --packagewithout=GROUPS <p> Package without these Bundler groups . <p> --precompileassets <p> Precompile all assets ( Rails-specific ) . <h> 17.6. - torquebox cli <p> The torquebox cli command runs the JBoss AS7 command line interface . <p> $ torquebox cli <h> 17.7. - torquebox env <p> The torquebox env VARIABLE command displays the TorqueBox environment variables TORQUEBOXHOME , JBOSSHOME and JRUBYHOME . The optional VARIABLE argument can be one of these three values and will cause the command to display only that value . 
@@21562526 @1562526/ 66502 @qwx266502 66505 @qwx266505 <h> How to configure Elasticsearch on HA mode for CloudBees Analytics ? <h> Issue 66501 @qwx266501 <h> Resolution <h> Highly-available Elastic Search Configuration based on haproxy <p> The image below represents the architecture of configuring Elasticsearh on ha mode for an Analytics environment . <p> On CJOC side under Configure Analytics you are asked to configure a multi-URL instance , however it actually does not create a cluster ( tracking this misunderstanding internally in CJP-2554 ) . In the latest CJOC versions such multi-URL specification does nothing , because Elasticsearch has its own clustering features . The cluster setup process is described in the Elasticsearch 1.7 installation guide . <p> On CJOC side you must always use the URL of the ha-proxy being the ha-proxy the one in charge of forwarding the data to the right instance/s . <p> Per our documentation it is critical that there is an odd number of nodes in your elastic search cluster due the split brain risk if a cluster gets network issues ( especially on 2-node cluster ) . Otherwise cluster corruption is likely in the event of @ @ @ @ @ @ @ @ @ @ done through an ha-proxy <h> ha-proxy configuration with non security enabled on ElasticSearch <p> Below ha-proxy configuration of the architecture presented on this KB article with non authentication method enabled on ElasticSearch. 
@@21562529 @1562529/ 66502 @qwx266502 66505 @qwx266505 <h> How to configure SPF , DKIM and DMARC to validate emails sent from DEV@Cloud with your e-mail domain ? <h> Issue <p> Several e-mail verification schemes like SPF , DKIM , DMARC exist to help prevent e-mail abuse such as spam or phishing . These schemes verify that e-mails from a given domain mycompany.com are sent from an authorized set of SMTP servers . <p> Problems arise as Jenkins can be configured to send e-mails as a developer/committer e-mail like someone@mycompany.com . <p> However , if you have activated SPF , DKIM , or DMARC these e-mails may be classified as spam or blocked completely because they are n't  sent from a SMTP server authorized by your domain but from our DEV@cloud platform . 66501 @qwx266501 <h> Resolution <h> SPF <p> To allow e-mails sent from SendGrid with SPF you have to add/update your DNS entry for SPF by adding include:sendgrid.net in it . For example , if you are already authorizing e-mails from mycompany.com to be sent from Google and your MX servers you will have something like : <h> DMARC <p> DMARC @ @ @ @ @ @ @ @ @ @ more controls like the ability to reject emails which did n't  pass these controls . You have no additional setup to do , you just need to ensure that SPF and DKIM controls are passing . 
@@21562533 @1562533/ 66502 @qwx266502 66505 @qwx266505 <h> How to use project-based matrix authorization strategy for Jobs created using a job template ? <h> Issue <p> I am using enterprise jenkins along with template plugin.I have created a job template and I want the jobs that will be created from this template to also have the option to enable project based matrix authorization Matrix Authorization Strategy Plugin.I do n't  know how this can be enabled . 66501 @qwx266501 <h> Resolution <p> The configuration of project-based matrix authorization strategy for jobs is similar to other job properties . So you need to declare the **43;5829;TOOLONG snippet in the proper location . The best way to get a sample configuration is to import it from an existing job using such control in Groovy Transformer . <p> In order to add the property conditionally , you can use conditional expressions in your template transformers . See Transformer Reference section in docs . There is an example for Conditional expression for groovy . <p> Please Note : The Jelly transformer is deprecated . Always use the Groovy transformer . <p> There is also an open RFE @ @ @ @ @ @ @ @ @ @ to be adjusted manually while the rest of the job definition is generated from the template transformer. 
@@21562535 @1562535/ 66502 @qwx266502 66505 @qwx266505 <h> How to Iterate Through the Last Successful Builds in Pipeline Job ? <h> Issue <p> Is there a way to get all the builds since the lastSuccessfulBuild in a Pipeline ? 66501 @qwx266501 <p> CloudBees Jenkins Platform <p> Jenkins <h> Resolution <p> This can be accomplished using the currentBuild and use the getPreviousBuild() linkage recursively . The following retrieves all the passed build since the lastSuccessfulBuild chronologically and add them to an array . 
@@21562536 @1562536/ <h> Jenkins Newsletter <h> Continuous Information <h> The Jenkins community newsletter <p> Welcome to Continuous Information , the newsletter containing all of- the latest interesting and useful happenings in the Jenkins community . <p> Subscribe below and the Jenkins Butler will serve up future newsletters directly to your inbox . Newsletters are sent monthly and , of course , you can unsubscribe at any time. - While you 're here , you can also enjoy previous issues ( linked to the- right ) . <h> The registered trademark Jenkins- is used pursuant to a sublicense from the Jenkins project and Software in the Public Interest , - Inc . <h> Jenkins Newsletter Request <p> Comments <p> First Name * <p> Last Name * <p> Company * <p> Email * <p> - <p> By submitting this form I agree that CloudBees may process my data in the manner described in CloudBees ' Privacy Policy . 
@@21562537 @1562537/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Related Issues <h> Resolution <p> If the Gerrit server has not started for some reason you may need to restart it manually . <h> 1 . Restart from the UI <p> First try to restart the server from the UI . Go to Manage Jenkins &gt; Gerrit Trigger and click on the red ball of the server : <p> This may take a few seconds during which you 'll see the red ball flashing . <p> If the server has successfully started you should see a blue ball ( or green if you have the GreenBalls plugin install ) like the following : <h> 2 . Restart with a Groovy Script <p> If for some reason the restart from the UI did not work , you can run the following Groovy script under Manage Jenkins &gt; Script Console ( replace $SERVERNAME by the name of your Gerrit server in Jenkins ) : 
@@21562538 @1562538/ 66502 @qwx266502 66505 @qwx266505 <h> Resolution <p> This will check if the last build was a failure and then echo that the last build failed . <p> WARNING : Groovy sandbox has to be disabled for this to work because it is accessing the filesystem . RawBuild will also have to be whitelisted by the script security plugin once the Groovy sandbox is disabled . 
@@21562539 @1562539/ 66502 @qwx266502 66505 @qwx266505 <h> Avoid to keep artifacts on the Jenkins master after were deployed via **30;5874;TOOLONG <h> Issue <p> Artifacts are stored on the Jenkins master after the artifacts were deployed to Nexus via the **30;5906;TOOLONG . <p> You are getting out of disk-space on the master . 66501 @qwx266501 66503 @qwx266503 <p> Maven plugin <h> Resolution <p> **30;5938;TOOLONG requires to archive artifacts . It is by design and was ( perhaps always is ) necessary to archive artifacts on master to re-deploy them from **30;5970;TOOLONG . <p> The only option is to use **30;6002;TOOLONG and to reduce the storage is to reduce the number of archived artifact to 1 LONG ... <p> Additional notes : <p> You can use the Slicing configuration plugin to update the value of artifactNumToKeep all jobs <p> The cleanup of old artifacts is done at the beginning or the end of each build thus you 'll have to wait to have the build launched to do the cleanup ( or you can manually trigger it if you have the simple disk usage plugin ) 
@@21562544 @1562544/ <p> Q&amp;A / Chat on #jenkins- IRC Channel- ( Reminder : Various discussions takes place on this channel at the same time , for questions specific to this event - mark your question with *O-JAM during the- event ) - <p> 8:00 - 8:15am Introducing Pipeline and the New Declarative Syntax- Patrick Wolf- - Pipeline allows users to define end-to-end delivery continuous delivery pipelines as part of their application code and was a major feature in the long-awaited release of Jenkins 2. x in early 2016 . The release of Declarative Pipeline syntax extends all of the benefits of Pipeline to every user in Jenkins regardless of- expertise . <p> 8:15 - 8:45am Building you First Pipeline- Andrew Bayer- An intro to Declarative and a step by step demo to guide you putting together a first Pipeline assuming basic knowledge of Jenkins and Freestyle builds . Highlights : - Agent , Stages , Steps , Tools , Environment and- Post- 
@@21562549 @1562549/ 66502 @qwx266502 66505 @qwx266505 <h> Template parameter to select tool installation or credentials is empty <h> Issue <p> You created a Job template with a parameter to select a tool installation or credentials but when you instantiate the job from the template the list of tools or credentials is abnormally empty ( This problem occurs only if you are located in a folder ) . <p> In your browser script console you can see a 400 error like here : 66501 @qwx266501 <h> Resolution <p> The problem occurs only on Apache Tomcat . To fix the issue , you need to define a system property LONG ... with the value true . This is documented in prerequisites- to deploy Jenkins on Apache Tomcat. 
@@21562550 @1562550/ 66502 @qwx266502 66505 @qwx266505 <h> Build Hang or Fail with Git for Windows <h> Issue <p> Started by user admin Building remotely on win-node in workspace LONG ... Cloning the remote Git repository Cloning repository https : **26;6034;TOOLONG &gt; git init LONG ... # timeout=10 Fetching upstream changes from https : **26;6062;TOOLONG &gt; git --version # timeout=10 using GITASKPASS to set credentials user-up &gt; git fetch --tags --progress https : **26;6090;TOOLONG **35;6118;TOOLONG ERROR : Timeout after 10 minutes ERROR : Error cloning remote repo ' origin ' **31;6155;TOOLONG : Command " git fetch --tags --progress https : **26;6188;TOOLONG **35;6216;TOOLONG " returned status code ... at LONG ... at **43;6253;TOOLONG Source ) at LONG ... Source ) at LONG ... Source ) at LONG ... at **28;6298;TOOLONG Source ) at ...... remote call to at LONG ... at com.sun.proxy. $Proxy95.execute ( Unknown Source ) at LONG ... at LONG ... at **37;6328;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at **39;6367;TOOLONG at LONG ... at LONG ... at **44;6408;TOOLONG ERROR : null Finished : FAILURE <p> Example of failed build <p> ERROR : Error cloning remote repo ' origin ' **31;6454;TOOLONG : Command " git -c core.askpass=true fetch --tags --progress https : **26;6487;TOOLONG **35;6515;TOOLONG " returned status code 128 : stdout : stderr : This application has requested the Runtime to terminate it in an unusual way . Please contact the application 's support team for more information . Assertion failed ! Program : C : Program LONG ... File : execcmd.c , Line 23 Expression : argv0path remote : Invalid username or password . fatal : Authentication failed for ... at LONG ... at **43;6581;TOOLONG Source ) at LONG ... Source ) @ @ @ @ @ @ @ @ @ @ Source ) at ...... remote at LONG ... at com.sun.proxy. $Proxy65.execute ( Unknown Source ) at LONG ... at LONG ... at **37;6656;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at **39;6695;TOOLONG at LONG ... at LONG ... at **44;6736;TOOLONG ERROR : null <h> Resolution <p> This option is enabled by default and set the git property credential.helper at a system level . This forces the git client to use the Git Credentials Manager for Windows instead of the local configuration provided by Jenkins . Consequently it makes your build either hang ( if running the node as an System Account ) or fail ( if running the node as a local User ) . <p> To workaround that behavior there are 3 different solutions : <p> Unset the system property via a terminal , run as administrator : <p> git config --system --unset credential.helper <p> If configuration exists for the account @ @ @ @ @ @ @ @ @ @ need to remove the system property for it . By editing the $USERHOME/.gitconfig file or running the following command : <p> git config --global --unset credential.helper <p> Note : It is best to reboot the Jenkins Agent machine to ensure no orphan " Windows Git Credential Manager " processes previously started by Jenkins are still running . <p> Uninstall/Re-install git-for-window and ensure to disable the option " Enable Git Credential Manager " during the installation . <h> 6 Comments <p> 1 . Edit the . gitconfig for the account used to run the Jenkins Slave process , removing the credential.helper setting . 2 . Reboot the Jenkins Slave machine to ensure no orphan " Windows Git Credential Manager " processes previously started by Jenkins are still running . 
@@21562555 @1562555/ <h> Orchestrating Continuous Delivery to Amazon ECS with Jenkins <p> Presented on August 17 , 2016 <p> - <p> CloudBees Speaker : Tracy Kennedy <p> - <p> Through the use of build pipelines , continuous delivery ( CD ) enables you to roll out features as quickly as possible . With more builds , you can test faster producing better quality apps . But how do you build CD pipelines in the real world ? This live webinar will walk you through coding a pipeline that builds a containerized application and deployed it to the Amazon Cloud . 
@@21562563 @1562563/ 66502 @qwx266502 66505 @qwx266505 <h> ClassNotFoundException on Jenkins startup due to Workflow API plugin <h> Issue <p> I did a couple of plugin updates and restarted from the GUI but Jenkins does n't  want to start anymore . <p> Seen on UI after restart : <p> Error **30;6782;TOOLONG : **41;6814;TOOLONG : java.lang.Error : **43;6857;TOOLONG at **44;6902;TOOLONG Caused by : **41;6948;TOOLONG : java.lang.Error : **43;6991;TOOLONG at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at LONG ... at **44;7036;TOOLONG Caused ... at LONG ... at **37;7127;TOOLONG Caused by : **43;7166;TOOLONG at LONG ... Method ) at LONG ... at LONG ... at LONG ... at LONG ... ... 8 more Caused by : **30;7211;TOOLONG : LONG ... at LONG ... ... 13 more Caused by : **32;7243;TOOLONG : LONG ... at LONG ... at LONG ... at LONG ... at LONG ... ... 14 more 66501 @qwx266501 <p> Jenkins : 1.625.3.1 <p> Pipeline API Plugin : 1.13 <h> Resolution @ @ @ @ @ @ @ @ @ @ are not disabled , so there should be no workflow-*. hpijpi.disabled file into the $JENKINSHOME/plugins directory . You must remove them in case of . <p> If not , here the steps that fixed the issue with the environment described above:1 . Download the workflow-api version 1.14 from the Jenkins plugins download site2 . Remove the workflow-api.jpi folder and file from the $JENKINSHOME/plugins directory3 . Copy the workflow-api.hpi file into the $JENKINSHOME/plugins directory4 . Create a workflow-api.jpi.pinned empty file into the $JENKINSHOME/plugins directory 
@@21562564 @1562564/ <h> Known issues <p> Credentials Binding plugin does not work if Git plugin is not installed . The workaround is to install the Git plugin . <p> MinorOSS-1350 <p> JENKINS-37545 - Dependencies to plugins which were previously bundled on Jenkins WAR ( detached plugins ) are not resolved automatically . These plugins will have to be manually installed . <p> MinorOSS-1074 <p> When renaming a folder , if clicking " Apply " instead of " Save " , a confirmation pop-up dialog is shown with duplicated header and footer . The workaround is to use the " Save " button . <p> MinorCJP-5598 <p> When configuring the license on the setup wizard , a forbidden error may be displayed if the Back button is clicked . If stuck in this situation , the Retry button will help to go back to the license configuration page . <p> MinorCJP-5573 <p> CloudBees Registration plugin ( and any plugin that depends on it ) , CloudBees Deployer plugin and CloudBees Back-up Cloud plugin are deprecated and can cause the Jenkins instance not to start up correctly . They should be removed/uninstalled . @ @ @ @ @ @ @ @ @ @ from a CJOC , the connection details are left behind . The workaround is to delete the CJOC connection details from the client master global configuration page . <p> MinorCJP-5528 <p> A second promotion of a job to a target instance which does not have RBAC configuration can fail with no replication permission . The workaround is to enable RBAC on the target instance or use groovy to remove the RBAC configuration from the promoted job . <p> MinorCJP-5508 <p> It 's possible to see a warning about an invalid license if PSE or cloud foundry plugins are installed but the instance has a regular EE ( Enterprise-Edition ) license . To remove the warning it 's necessary to disable/uninstall the offending plugins . <p> MinorCJP-5487 <p> At the very first startup , relocating a pipeline job may not work correctly due to the Move/Copy/Promote pipeline handler not being fully registered . Restarting the instance will solve the issue . <p> MinorCJP-5479 <p> There is a timing issue when connecting a Client Master to a CJOC for the first time , using a custom update center . The recommended workaround @ @ @ @ @ @ @ @ @ @ custom update center in a first step . Then , when done , configure the custom update center . <p> MinorCJP-5449 <p> CloudBees License Plugin must be updated to version 7.16+ to avoid an issue with Client Master license refresh failing . <p> MinorCJP-5331 <p> The Move/Copy/Promote feature does not work correctly when the UI auto-refresh option is enabled . It is recommended to disable auto-refresh . <p> MinorCJP-5232 <p> When pushing connection details from CJOC to a clean CJE ( along with SSO ) , the user gets logged in the client master as " admin " rather than as the user who started the configuration in CJOC . The workaround is to logout and login again . <p> MinorCJP-4979 <p> When CJOC is enforcing the Role Based Access Control authorization strategy on client masters , the Groups detail screens on client masters will include two " Inherited from Jenkins " sections . The top-most section refers to the current master ( which is a " Jenkins " but should be referred to as the connected master name shown in the breadcrumb bar ) and the lowest " Inherited @ @ @ @ @ @ @ @ @ @ a " Jenkins " ) . The visual display of the information is less confusing when the masters have been organized using folders on CJOC as then the two " Inherited from Jenkins " sections are visually separated by the folders <p> MinorCJP-4920 <p> GitHub Branch Source plugin may fail to load if an old version of **37;7277;TOOLONG is pinned . The solution is to unpin it and update it to the last version . <p> MinorCJP-4893 <p> When updating CJE from a previous version to 2.7.19. x , CloudBees Pipeline Stage View Extensions plugin and CloudBees Pipeline Template plugin may fail to load at first Jenkins startup . A second restart is needed to make the plugins work . <p> MinorCJP-4857 <p> The client master 's Move/Copy/Promote operations bar freezes showing an invalid path error message if the client master is in disconnected state . Workaround is either to wait for the client master to reconnect or , if the connection is broken , to release the client master from CJOC ( in this case the local Move/Copy/Promote operation will work ) . <p> MinorCJP-4821 <p> When using a @ @ @ @ @ @ @ @ @ @ a signature error , however the functionality works as expected . <p> MinorCJP-3832 <p> When running both CJOC and CJE on the same Windows instance , in certain circumstances HA can incorrectly prevent the instance from starting . ( Running CJOC and CJE on the same instance is not a recommended setup for a production instance ) 
@@21562565 @1562565/ 66502 @qwx266502 66505 @qwx266505 <p> In these examples , com.sun.rmi.EvilClass is a placeholder for a real class name . It is possible to customize the blacklist used by setting the LONG ... System property for the Jenkins master java invocation . It is expected to be set to the path to a file containing a complete , custom blacklist overriding the default one . The default blacklist is defined in ClassFilter.java in the remoting component . In a configuration file as used for LONG ... the default blacklist would look like this : <p> Removing or relaxing entries on this blacklist must be done carefully as to not open yourself up to known exploits . A possible alternative could be to disable the CLI via HTTP and JNLP agent port ( see below ) to prevent its unauthenticated use . <h> Disabling the CLI <p> Another change in the released versions is the new feature to disable the CLI over HTTP and JNLP by setting the System property jenkins.CLI.disabled to true . This is a more convenient alternative to run the LONG ... script provided as a workaround to @ @ @ @ @ @ @ @ @ @ allow unauthenticated access to the Jenkins CLI even with the security fix . <p> While the CLI can be used using the Jenkins integrated SSH daemon as well , this requires authentication , so its not a vector for unauthenticated attacks . To disable this feature as well , disable the SSH server port in Manage Jenkins -+ Configure Jenkins -+ SSH Server . 
@@21562566 @1562566/ <p> Continuous delivery is one of the most compelling IT trends . It accelerates software delivery , allowing your business to quickly respond to market and customer demands . <p> Join our three continuous delivery experts to explore how you can increase quality , break down silos and maximize productivity for developers , QA and operations teams . We 'll examine the business value of continuous delivery and look at the organizational , process and technology transformations it drives . We 'll show how continuous integration with Jenkins streamlines processes and automates testing and deployment , providing the foundation for continuous delivery . You 'll see how to reduce errors throughout the pipeline and dramatically improve time to market . <p> Attend and learn : <p> The business value of continuous delivery and why organizations must transform and embrace it 
@@21562571 @1562571/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Resolution <p> In order to find the real memory consumption you should look in the -/+ buffers/cache : used and free columns instead . In the above example the actual memory used is 4.23GB , while 3.93GB is free memory . <p> The Mem used column displays the sum of -/+ buffers/cache : used + disk cache ( cached column at end ) . The disk cache is a method used in *nix operating systems to prevent disk I/O and stores it in memory . This is used to cache things like jars , log files , text files , etc . <p> If you would like to clean up the disk cache you can run the command : echo 3 sudo tee /proc/sys/vm/dropcaches to see the Mem used and free column change ( but this is not required since the OS will do this over time for you ) . <p> Please check with your OS provider for other methods to more aggressively flush cache . 
@@21562573 @1562573/ 66502 @qwx266502 66505 @qwx266505 66501 @qwx266501 <h> Resolution <p> The major part of these parameters are useless if you deploy the war within Tomcat . They are useful only if you are using the embedded ( jetty ) web server . <p> httpPort , httpListenAddress , httpsPort , httpsListenAddress , ajp13Port , ajp13ListenAddress are all set in your server.xml at tomcat level . <p> prefix will be the war name ( /jenkins by default ) but you can change it like any other webapp in tomcat with a context.xml file ( or in server.xml ) <p> argumentsRealm. * are usable only with the embedded web server LONG ... and for tomcat you have to consider to use the Standard Security Setup LONG ... 
@@21562575 @1562575/ <h> Jenkins : Code Quality Analysis <h> Jenkins : Code Quality Analysis <p> Monitor FindBugs , Checkstyle , PMD , Warnings and TODOs Tracking the quality of your code is getting more and more important . Jenkins-- supports all the major code quality analysis tools in the market , such as findbugs , checkstyle , and PMD . It is also capable of picking up warnings from your compilers/tools , which otherwise can easily get ignored , and it can also keep track of TODO comments from your source- code . <p> Insights into Code Quality Compared to the offline execution of these code quality analysis tools , Jenkins will show you the trend of quality , which let 's you focus on newly introduced problems , instead of wasting time on the false-positives that have been around for a long time . You can also start from the summary and click your way through , into detailed views . Online reports with clean RESTful URLs also allow you to send URLs to your colleagues for review and- discussion . <p> Colored HTML Display of Source Files and Detected Problems @ @ @ @ @ @ @ @ @ @ to source code , making it very easy to assess the problems by providing contextual- information . <p> - <p> The registered trademark Jenkins- is used pursuant to a sublicense from the Jenkins project and Software in the Public Interest , - Inc. 
@@21562576 @1562576/ <h> Known issues <p> Security Advisory related to the favorite plugin . If you are using this plugin , please follow the instructions in the Security Advisory to get the fix . <p> MinorOSS-1350 <p> Dependencies to plugins which were previously bundled on Jenkins WAR ( detached plugins ) are not resolved automatically . These plugins will have to be manually installed . More information JENKINS-37545 <p> MinorOSS-1074 <p> When renaming a folder , if clicking Apply instead of Save , a confirmation pop-up dialog is shown with duplicated header and footer . The workaround is to use the Save button <p> MinorCJP-5556 <p> When a Client Master is straight deleted from a CJOC , the connection details are left behind . The workaround is to delete the CJOC connection details from the Client Master global configuration page <p> MinorCJP-5528 <p> A second promotion of a job to a target instance which does not have RBAC configuration can fail with no replication permission . The workaround is to enable RBAC on the target instance or use groovy to remove the RBAC configuration from the promoted job <p> MinorCJP-5232 <p> @ @ @ @ @ @ @ @ @ @ ( along with SSO ) , the user gets logged in the Client Master as admin rather than as the user who started the configuration in CJOC . The workaround is to logout and login again . <p> MinorCJP-4979 <p> When CJOC is enforcing the Role Based Access Control authorization strategy on client masters , the Groups detail screens on client masters will include two " Inherited from Jenkins " sections . The top-most section refers to the current master ( which is a " Jenkins " but should be referred to as the connected master name shown in the breadcrumb bar ) and the lowest " Inherited from Jenkins " section refers to CJOC ( which is a " Jenkins " ) . The visual display of the information is less confusing when the masters have been organized using folders on CJOC as then the two " Inherited from Jenkins " sections are visually separated by the folders <p> The list of Job types in the New Item page is served without cache expiration . This causes IE to cache the results of the page so if a new @ @ @ @ @ @ @ @ @ @ the cache is cleared and the page reloaded . This is known to affect the installation of new plugins that offer job types , changing of Folder restrictions in CloudBees Folders Plus plugin and creating a new Job Template in CloudBees Templates plugin. 
@@21562581 @1562581/ <h> Resolved issues <h> Known issues <p> Dependencies to plugins which were previously bundled on Jenkins WAR ( detached plugins ) are not resolved automatically . These plugins will have to be manually installed . More information JENKINS-37545 <p> MinorOSS-1074 <p> When renaming a folder , if clicking Apply instead of Save , a confirmation pop-up dialog is shown with duplicated header and footer . The workaround is to use the Save button <p> MinorCJP-5556 <p> When a Client Master is straight deleted from a CJOC , the connection details are left behind . The workaround is to delete the CJOC connection details from the Client Master global configuration page <p> MinorCJP-5528 <p> A second promotion of a job to a target instance which does not have RBAC configuration can fail with no replication permission . The workaround is to enable RBAC on the target instance or use groovy to remove the RBAC configuration from the promoted job <p> MinorCJP-5479 <p> There is a timing issue when connecting a Client Master to a CJOC for the first time , using a custom update center . The recommended workaround is @ @ @ @ @ @ @ @ @ @ custom update center in a first step . Then , when done , configure the custom update center <p> MinorCJP-5232 <p> When pushing connection details from CJOC to a clean CJE ( along with SSO ) , the user gets logged in the Client Master as admin rather than as the user who started the configuration in CJOC . The workaround is to logout and login again . <p> MinorCJP-4979 <p> When CJOC is enforcing the Role Based Access Control authorization strategy on client masters , the Groups detail screens on client masters will include two " Inherited from Jenkins " sections . The top-most section refers to the current master ( which is a " Jenkins " but should be referred to as the connected master name shown in the breadcrumb bar ) and the lowest " Inherited from Jenkins " section refers to CJOC ( which is a " Jenkins " ) . The visual display of the information is less confusing when the masters have been organized using folders on CJOC as then the two " Inherited from Jenkins " sections are visually separated by the folders 
@@21562585 @1562585/ 66502 @qwx266502 66505 @qwx266505 <h> Prepare Jenkins for support <h> Issue 66501 @qwx266501 <p> CloudBees Jenkins <p> Jenkins <h> Resolution <p> The following settings should be used in your Jenkins environment to allow for easier support in the event of an issue . <h> A. Ulimit Settings just for Linux OS <p> ulimit -c and ulimit -f should be set to unlimited for the user that starts Jenkins . ulimit -c set to unlimited will allow core files to be generated successfully . The core files include full thread dumps and core files generated by the JVM in the event of a JVM crash . ulimit -f should be set to unlimited to ensure that files are not truncated during their generation . <p> Note that Jenkins will require a restart for the JVM parameters to be picked up by the JVM . <p> Please note that your Java parameters should consist of section I and one of the options of section II ( depending on your Java heap size ) from above . <p> The -server parameter causes the JVM to run in server mode . The Server @ @ @ @ @ @ @ @ @ @ . It is intended for executing long-running server applications , which need the fastest possible operating speed more than a fast start-up time or smaller runtime memory footprint. ( as noted in Chapter 2 in The Java HotSpot Performance Engine Architecture ) <p> The -XX : **27;7316;TOOLONG parameter tells the JVM to automatically generate a heap dump file when a heap memory allocation ca n't be satisfied . <p> The -XX:HeapDumpPath= parameter allows you to specify the directory path where the heapdump file should be written . Please sure that the directory path specified can be written to by the Jenkins process and has adequate space to hold the large heapdump files . <p> The -verbose:gc parameter enables verbose gc . <p> The Xloggc : $path/gc-%t.log parameter specifies where the verbose gc data is written to . The %t in the gc log file path will cause the JVM to generate a new file with each JVM restart . <p> The LONG ... parameters limit the number of files and their size . Also rotates the gc log . <p> The LONG ... parameters gather info on object age and @ @ @ @ @ @ @ @ @ @ The -XX : +PrintHeapAtGC parameter will generate a large amount of logging to the specified gc log file . Please ensure there is adequate file system space when enabling this option . All the information produced by this option is known to the JVM ; therefore , there is no extra processing required as a result of enabling this parameter . However , there will be a slight amount of additional I/O overhead which should amount to less than 3% . <p> The -XX : +UseG1GC paramter enables the G1GC gc policy . <p> The -XX : +UseStringDeduplication parameter is looking for the strings with the same contents and canonicalizing the underlying char with string characters . <p> The -XX : +ParallelRefProcEnabled parallelize reference processing , reducing young and old GC times . <p> The LONG ... parameters will force young gen GC before full GC ( reduces full GC duration ) . <p> The LONG ... parameters are a starting point , but will differ from system to system . <p> The XX : +UseCompressedOops allows references to be 32-bit in a 64-bit JVM and access close to 32 @ @ @ @ @ @ @ @ @ @ of memory and potentially improve performance . <h> C. Java Home Environment Variable <p> It is recommended to set the JAVAHOME environment variable in both Linux and Windows environments . The Java JDKs bin directory should also be in the environments PATH environment variable . This will allow for easier acess to Java JDK commands such as jstack and jmap . Please note that the jstack command is only available in the Java JDK not the Java JRE . <p> Please also note that core files and heapdump files can be large and are generated in the working directory of the JVM . Thus , it is recommended that there is adequate disk space for that directory . <p> For example , on Windows the PATH enviornment variable will include : C : Program FilesJavajdk1.8.0102bin <p> Running jstack in terminal window or command prompt should generate the following output : <h> D. Log Startup Timing Info <p> Set LONG ... in your Jenkins environment to have Jenkins output additional data to the jenkins.log showing how much time is being spent in a specific component during startup . <p> Please the @ @ @ @ @ @ @ @ @ @ using the username and password . The jenkins-cli.jar authentication can be set up to use ssh keys if you prefer as documented in the jenkins-cli.jar wiki page linked above . 
@@21562586 @1562586/ 66502 @qwx266502 66505 @qwx266505 <h> Unable to access sonarqube after setting up the instance <h> Issue 66501 @qwx266501 <h> Resolution <p> It takes a few minutes for the service to be provisioned and started after purchasing . Re-accessing the site after a few minutes enabled access . If it does not start up after a few minutes , then- create- a new DEV@cloud ticket . 
@@21562588 @1562588/ 66502 @qwx266502 66505 @qwx266505 <h> Resolution <h> Concept <p> Fundamentally you have to give Jenkins the credentials required to build your jobs and connect your build agents . But you do not need to give the credentials to the root context object . Jenkins in combination with the Credentials Plugin has the concept of contextualized credentials stores . <p> A good way to understand this is if you use Folders . Each Folder has its own credentials store . If each team/project has their own folder , then any credentials defined in the folder are only available to jobs within the folder . <p> This concept also applies to CloudBees Operations Center . With CJOC , you can give each team/project their own CJE . Then any credentials defined in that CJE are restricted to that CJE . Credentials available in CJOC are available to all CJEs . <p> Contextualized credentials stores is the key concept for Credentials Management in Jenkins . <h> Access <h> Passphrase <p> When generating your SSH key pairs , it is recommended to protect your SSH private-key with a passphrase . <p> Due to @ @ @ @ @ @ @ @ @ @ can be copied back out of the credential configuration - while the passphrase can not . This provides an extra layer of protection . <p> Note : It is possible for a suitably motivated Jenkins administrator to recover the passphrase . <h> Scopes <p> Next we have the notion of credential scopes for credentials defined in the root of Jenkins : <p> SYSTEM : This credential is only available to the object on which the credential is associated . Typically you would use system-scoped credentials for things like email auth , slave connection , etc , i.e. where the Jenkins instance itself is using the credential . Unlike the global scope , this significantly restricts where the credential can be used , thereby providing a higher degree of confidentiality to the credential . <p> GLOBAL : This credential is available to the object on which the credential is associated and all objects that are children of that object . Typically you would use global-scoped credentials for things that are needed by jobs . <p> This adds a degree of confidentiality for build agents . It is recommended to use the @ @ @ @ @ @ @ @ @ @ SSH Agent <p> The SSH Agent plugin enables you to inject credentials - SSH private keys - into the build jobs using an SSH Agent . The build can run on any node , the Jenkins master will provide it with the set of credentials . This allows the user to securely provide access to remote resources ( using SSH authentication ) without exposing the SSH private-key material to the job . <p> Without this plugin , if you want to use a node to connect to a remote server via SSH you would have to provision that node with SSH key required . <p> Notes : * <p> The SSH Agent socket is unique to each job so it should be mostly safe from parallel jobs running on the same node . For extra security you should ensure that each build agent is 1 executor only . <p> While the SSH private-key content is not directly exposed to the job , this key ( via the agent ) can be used to authenticate to any remote resource while the agent connection is open ( i.e. the job is running @ @ @ @ @ @ @ @ @ @ public key ( matching with the SSH private keys which injects ) included into the /. ssh/authorizedkeys in the remote server to connect . <h> Best Practice <p> To sum up , here are recommend practice to best manage your Credentials in Jenkins : <p> Passphrase protect your SSH Keys <p> For Nodes , use scope SYSTEM so that those credentials can not be used by build jobs <p> Compartmentalise your instance into Folders . Give each team/project their own folder . Give each folder the Credentials that those folders require - those credentials can not be used by other " team " folders ( unless those folders are sub-folders ) <p> Use an authorization strategy such as Role-Based Access Control Plugin to restrict access to the folders <p> Configure jobs with SSH Agent to inject the SSH private-key from the per-folder credentials store into the build jobs <p> There are problems with this architecture : Linux1 is dedicated to Server1 . If I want to deploy to Server1 , I have no choice but to use Linux1 or provision my other nodes and Server with SSH Keys . <p> @ @ @ @ @ @ @ @ @ @ to access and deploy to Server1 . To solve this I would create a new connection between Server1 and Linux2 by either using the existing public key linux2rsa.pub or create a new key pair . <p> At scale this becomes hardly manageable . I end up with many nodes having access to many servers . This results in a highly coupled architecture with tons of SSH key pairs that I can neither control nor trace . <p> With this solution : <p> My nodes are inefficiently used <p> My nodes are not fungible : the same job can not run on different nodes and therefore my label is useless <p> With such configuration , ProjectA and ProjectB can be run on any node . Credentials are injected via SSH Agent plugin to the build node . <p> Now if for example the requirements change : TeamB needs to access and deploy to Server1 . To fulfil that requirement , no configuration is required on the node or the server but only on the ProjectB configuration . The Server2 credentials are available in the Global store . Therefore I only need @ @ @ @ @ @ @ @ @ @ the same job can run on any node . <p> Note : If I want to add more nodes to that label , no special configuration is needed so that ProjectA and ProjectB can be run on them . 
@@21562591 @1562591/ <h> Using Jenkins for the Build and Deployment of . NET Applications <h> Sunday , 30 September 2012 - <h> 3:25pm 4:10pm <p> Business Catalyst is a platform for building online businesses without advanced knowledge of web technologies . The stack behind Business Catalyst is complex and continuously evolving , but is currently mostly Windows + . NET based . This talk addresses the challenge of replacing the tools used for building and deploying Business Catalyst : CruiseControl.NET , ControlTier , Windows-scheduled tasks and batch scripts . Add to this inherent complexity an ever-changing environment and the need for high availability and you get an interesting- scenario . <h> Constantin Caraivan <p> Release Engineer <p> Adobe <p> Constantin ( Costin ) Caraivan is currently the release engineer for Business Catalyst - the Adobe platform for building online businesses without any server side coding . - Costin is a one-man army of build and release automation for Business Catalyst and wonders every day how 'd be able to do his work solo without Jenkins . After a background of Linux , Java and Jython the Windows + . NET environment @ @ @ @ @ @ @ @ @ @ , partially tamed with Jenkins ' help . Costin has experience in setting up large server farms using Jenkins and Hudson , with uses ranging from build to test to deployment to desktop platform- integration . 
@@21562595 @1562595/ <h> CloudBees Assurance Program <p> In order to provide greater stability and security for Jenkins environments , the CloudBees Assurance Program specifies the set of plugins , plugin versions , and plugin dependencies that are either verified or trusted , depending on how much they have been tested . Not only are these plugins independently stable , but they are tested as a whole ( in aggregate ) to ensure compatibility with each other and the Jenkins instance . <p> The primary administrator interface for the CloudBees Assurance Program is the Beekeeper Upgrade Assistant which provides a centralized view of the monitored Jenkins plugins , recommended actions , and configuration options . The Beekeeper Upgrade Assistant allows administrators to review and install upgrades for plugins . Additionally , administrators can enable automatic upgrades or downgrades of plugins which are not in compliance with the support policy for the CloudBees Assurance Program . <p> When enrolled in the CloudBees Assurance Program , two changes are immediately made to the instance : the Beekeeper Upgrade Assistant displays the current compliance status with CloudBees Assurance Program , and the Update Center configuration @ @ @ @ @ @ @ @ @ @ Center . <p> The CloudBees Assurance Program Update Center modifies the list of " Updates " and " Available " plugins on the Manage Plugins page to hide plugins that would be incompatible with CloudBees Assurance Program due to dependencies on plugin versions which are outside of the CloudBees Assurance Program . <p> Figure 1 . Administrative Monitor advising of a new upgrade <p> The Beekeeper Upgrade Assistant regularly evaluates the state of the instance to ensure compliance with CloudBees Assurance Program and provides an " Administrative Monitor " to alert administrators to upgrades needing their attention . <p> When an upgrade is available , the administrator is notified by Beekeeper Upgrade Assistant , with a notification on the " Manage Jenkins " Page and on the administrative monitor shown in the header for other pages . <p> Figure 2 . Upgrade message from header <p> Clicking Manage will navigate to a Beekeeper Upgrade Assistant screen that outlines the available upgrades . <p> Figure 3 . Information about the available upgrade and possible actions to perform <p> To reconcile the difference between revisions , Beekeeper Upgrade Assistant reports what actions @ @ @ @ @ @ @ @ @ @ as downgrading or upgrading installed plugins ) . <p> Caution <p> Before any upgrade , CloudBees recommends creating a backup of the instance in case there is some unexpected failure during the upgrade process . <p> The new product release notification shows the offered release and a button ( " More Info " ) that directs the administrator to a page providing additional information about the upgrade . <p> The upgrade page shows : <p> Current version and the offered release <p> Link to Release Notes describing the new features , fixes and known issues <p> Results of a simulation of the upgrade ( including changes in core and/or plugin versions ) <p> Link to documentation and downloads <p> Figure 4 . Upgrading the product <h> Incremental upgrades <p> The CloudBees Assurance Program can also provide incremental upgrades . Incremental upgrades include a subset of functionality delivered prior to the full product release . For example , incremental upgrades may deliver plugin security fixes or important new features that ca n't wait until the next full product release . <p> Incremental upgrades appear in the page with a message that @ @ @ @ @ @ @ @ @ @ the current and offered revisions as well as a simulation of the changes . <p> Depending on the plugins you have installed , no change may be needed in the running instance . You should choose the upgrade even in those cases so that Beekeeper Upgrade Assistant uses the upgraded configuration . <p> Incremental upgrades <h> Compliance and automatic upgrades <p> Beekeeper Upgrade Assistant allows administrators to easily and automatically keep their verified plugins up-to-date with the versions recommended by the CloudBees Assurance Program ( CAP ) . To enroll the instance in automatic CAP version compliance , check the Allow automatic upgrades of plugins on restart setting and click Save . It 's recommended that you restart the instance after making changes to allow Beekeeper Upgrade Assistant to perform any necessary automatic upgrades . <p> If Allow automatic upgrades of plugins on restart was not enabled , Beekeeper Upgrade Assistant will report when the instance is out of compliance with the verified plugins recommended by CAP . To resolve the drift out of compliance , the administrator may either manually follow the Beekeeper Upgrade Assistant recommended actions , or @ @ @ @ @ @ @ @ @ @ restart the instance to allow the necessary upgrades to complete . <p> Figure 5 . Successful upgrade pending restart <p> If an upgrade fails , Beekeeper Upgrade Assistant will notify the administrator and allow the upgrade to be canceled . <p> Figure 6 . Failed upgrade <h> Enforcing downgrades <p> Beekeeper Upgrade Assistant supports automatic plugin upgrades and downgrades to provide comprehensive compliance with the CloudBees Assurance Program . By checking Allow automatic downgrades of plugins on restart , Beekeeper Upgrade Assistant automatically downgrades any installed plugins that exceed the versions explicitly recommended by CAP . While this behavior will only affect plugins considered verified and part of the CloudBees Assurance Program , it may have unintended side effects on stability if the instance has been taking advantage of features and configurations provided by more recent versions of those plugins . <p> Apache , Apache Ant , Apache Maven , Ant and Maven are trademarks of The Apache Software Foundation . Used with permission . No endorsement by The Apache Software Foundation is implied by the use of these marks . <p> Other names may be trademarks of those designations appear in this book , and CloudBees was aware of a trademark claim , the designations have been printed in caps or initial caps . <p> While every precaution has been taken in the preparation of this book , the publisher and authors assume no responsibility for errors or omissions , or for damages resulting from the use of the information contained herein . 
@@21562596 @1562596/ 66502 @qwx266502 66505 @qwx266505 <h> SECURITY-170 Advisory <h> Issue <p> Parameters are n't  passed to a job if it does n't  declare them . In your instance logs you can find various warnings like : <p> WARNING **36;7345;TOOLONG : Skipped parameter FOO as it is undefined on MYJOB . Set LONG ... to allow undefined parameters to be injected as environment variables or LONG ... list to whitelist specific parameter names , even though it represents a security breach 66501 @qwx266501 <p> CloudBees Jenkins Operations Center 1.609. x.y &gt;= 1.609.18.1 <p> CloudBees Jenkins Operations Center 1.625. x.y &gt;= 1.625.18.1 <p> CloudBees Jenkins Operations Center &gt; 1.625 <p> CloudBees Jenkins Enterprise 1.609. x.y &gt;= 1.609.18.1 <p> CloudBees Jenkins Enterprise 1.625. x.y &gt;= 1.625.18.1 <p> CloudBees Jenkins Enterprise 1.642. x.y &gt;= 1.642.18.1 <p> CloudBees Jenkins Enterprise &gt; 1.642 <p> Jenkins LTS &gt;= 1.651.2 <p> Jenkins &gt;= 2.3 <h> Resolution <p> The fix for SECURITY-170 consists of the following change in Jenkins behavior : <p> Only build parameters that have been explicitly defined in a jobs configuration will be available by default at build time . Any other arbitrary parameters added to @ @ @ @ @ @ @ @ @ @ . As there are a number of plugins that rely on the behaviour in older Jenkins versions , upgrading to 1.651.2 or 2.3 means that certain build behaviours may be broken . <p> If a a plugin or a job has to trigger jobA with a parameter Param1 , it is now required to configure jobA as a parametrized job with Param1 as parameter . <p> Because various plugins were passing some hidden parameters to their jobs , SECURITY-170 will break them . The following solutions have been put in place as a temporary work-around to give the time to these plugins to be updated to propose a clean solution : <p> Its possible to restore the previous behavior by setting the system property LONG ... to true . This is potentially very unsafe and intended as a short-term workaround only . <p> LONG ... <p> To allow specific , known safe parameter names to be passed to builds , set the system property LONG ... to a comma-separated list of safe parameter names . Example : 
@@21562597 @1562597/ 66502 @qwx266502 66505 @qwx266505 <h> How do I disable Jenkins CLI ? <h> Issue <p> You would like to disable Jenkins CLI to prevent remote access with it 66501 @qwx266501 66503 @qwx266503 66504 @qwx266504 <h> Resolution <p> Jenkins does n't  provide an option to disable CLI . You have to disable that by : <p> limiting accesses to the TCP port for CLI <p> filtering out accesses to http : //JENKINS/cli URL <p> CLI is accessed via " TCP port for JNLP slave agents " . It is defined randomly by default . You can bind that to a specific port in Global Security configuration , let 's say 20000 . You can then disable the CLI by dropping accesses to that port : <p> Be-aware that blocking accesses to that port prevents connections to Operations Center and JNLP slaves . You may want to tweak this rule to allow accesses from specific hosts . <p> Blocking JNLP port is not enough thought , as Jenkins CLI falls back to HTTP transport in that case . You also need to filter out HTTP request to http : //JENKINS/cli URL . This can be done with CloudBees Request Filter plugin. 
@@21562602 @1562602/ <h> Plugin Usage Plugin <h> Challenge : <p> Typically , administrators managing Jenkins have no insight into how many jobs are using a particular plugin . Thus , administrators do n't know how many jobs/teams will be affected if a plugin is upgraded or- deleted . <h> Solution : <p> The Plugin Usage plugin , available with the- CloudBees Jenkins Platform , scans the Jenkins configuration to produce a list of plugins and the jobs associated with them . Administrators can proactively manage the plugin installations by notifying job owners if performing an upgrade . They can also remove plugins that are not being- used . 
@@21562606 @1562606/ 66502 @qwx266502 66505 @qwx266505 <h> Create a folder structure in Microsoft Azure Blob Storage <h> Issue 66501 @qwx266501 <h> Resolution <p> As per documentation : <p> Enter the list of artifacts to upload , following the Ant glob syntax . You may create mappings between groups of artifacts and the virtual directory structure for them to be put under in the blob storage using the " : : " notation . <p> As an example you can follow the following steps to understand how to use this feature . <p> Create a folder inside another one with one file inside each one . <p> In the glob syntax use the following : <p> LONG ... <p> Finally , you should- end up in Azure with the following configuration . <p> - Alternatively , you can use Cyberduck CLI which may do things easier in case you want to rely on a difficult folder structure . 
@@21562609 @1562609/ <h> Pipeline Stage View Plugin <h> Challenge : <p> You know you 've had a failure , but where did it occur in the pipeline ? - How far has your commit progressed ? - You ca n't easily tell - and time is wasted trying to- figure it all- out . <h> Solution : <p> Pipeline Stage View allows you to- readily- pinpoint errors. - Developers can see how far their commits have gone in the pipeline . Managers can see how effectively the overall pipeline process runs . Pipeline visualization- allows you- to : 
@@21562611 @1562611/ 66502 @qwx266502 66505 @qwx266505 <h> How to install a new Google App Engine SDK in Jenkins ? <h> Issue <p> We want to be able to use different Google App Engine SDK in you jobs configuration . How can we install those SDK. 66501 @qwx266501 <p> CloudBees Google App Engine Deploy Engine Plugin 66503 @qwx266503 <h> Resolution <p> You can add a new SDK in the global configuration of this CloudBees AppEngine Plugin. - <p> ! Image 1 <p> You can provide a absolute path to the SDK location on your hosts , but we recommend you to use the " Install automatically " option so that any slaves will be able to retrieve the SDK and use it for your builds . 
@@21562613 @1562613/ <h> 22.1.2. - More Information <h> 22.2. - New Relic <p> New Relic is an application monitoring and management tool that provides statistics about and insight into your application . New Relic will work with TorqueBox just like any other Ruby application . There are some minor caveats regarding JRuby which New Relic lists on their FAQ. <h> 22.2.1. - Usage <p> Using New Relic with TorqueBox is just like using it with any other Ruby application . You simply install the gem and ensure it 's available to your application . This is usually accomplished using Bundler . Additionally , TorqueBox provides some basic integration with New Relic 's Background Tasks tab . Methods run in background tasks via alwaysbackground or **25;7383;TOOLONG will appear in this tab . Complete details about New Relic 's Ruby integration can be found on the New Relic website . <p> Note : when using New Relic with Rails 2.3. x you may need to add the following code to your **33;7410;TOOLONG file . <h> 22.3. - VisualVM <p> VisualVM is a useful tool for monitoring and troubleshooting Java applications . Detailed below @ @ @ @ @ @ @ @ @ @ connecting to both local and remote TorqueBox servers . More information about VisualVM itself can be found in the Oracle VisualVM documentation . To start VisualVM from the command line : <h> 22.3.1. - Connecting VisualVM to a Local TorqueBox <h> 22.3.2. - Connecting VisualVM to a Remote TorqueBox <p> Connecting to a remote TorqueBox server requires a few more steps . <p> On the remote TorqueBox server , edit LONG ... or , if running in a cluster , LONG ... and instruct the JMX subsystem to not use the management endpoint and instead use the remoting endpoint for remote JMX connections . <p> Next we need to add a new application user to the remote TorqueBox server . <p> **27;7445;TOOLONG What type of user do you wish to add ? a ) Management User ( mgmt-users.properties ) b ) Application User ( **28;7474;TOOLONG ) ( a ) : b Enter the details of the new user to add . Realm ( ApplicationRealm ) : Username : testuser Password : Re-enter Password : What roles do you want this user to belong to ? ( Please enter a comma @ @ @ @ @ @ @ @ @ @ About to add user ' testuser ' for realm ' ApplicationRealm ' Is this correct yes/no ? yes Added user ' testuser ' to file LONG ... Added user ' testuser ' to file LONG ... Added user ' testuser ' with roles to file LONG ... Added user ' testuser ' with roles to file LONG ... Is this new user going to be used for one AS process to connect to another AS process ? e.g. for a slave host controller connecting to the master or for a Remoting connection for server to server EJB calls . yes/no ? yes To represent the user add the following to the server-identities definition &lt;secret value= " cDRzc3cwcmQj " / <p> Finally , start TorqueBox on the remote server and bind it to a real IP address . <p> $torquebox run -b &lt;serverip&gt; <p> When running VisualVM on the local machine you 'll need to ensure **42;7504;TOOLONG is on the classpath . You can simply copy that file to the local machine or if TorqueBox is installed locally use the jar from inside there . 
@@21562614 @1562614/ <h> Chapter- 20. - torquebox-server Gem <p> One of the new features is the ability to install TorqueBox as a gem instead of the zip-based installation . The gem installation gives you access to a new torquebox command to deploy and undeploy applications and start Torquebox. <h> 20.1. - Install JRuby <p> Before installing the torquebox-server gem you 'll want the latest JRuby installed . We recommend at least 1.6.7 since it fixes an out of memory error during gem install . <h> 20.2. - Install torquebox-server <p> If you 're using a JRuby version older than 1.6.7 , be you 'll also need to pass " -J-Xmx1024m " to the jruby command above . <h> 20.3. - Deploying and Undeploying Applications <p> The torquebox-server gem ships with a torquebox binary , which may be used to deploy and undeploy applications , as well as starting the server and other functions . For complete documentation , see Chapter- 17 , The torquebox Command . <p> To deploy an application to TorqueBox : <p> $torquebox deploy /path/to/myapp <p> To undeploy that same application : <p> $torquebox undeploy /path/to/myapp <p> If @ @ @ @ @ @ @ @ @ @ or undeploying the application in the current directory . <h> Undeployment Help <p> $torquebox help undeploy Usage : torquebox undeploy ROOT Options : --name=NAME # The name of the artifact to undeploy ( ex : foo ) Undeploy an application from TorqueBox <h> 20.4. - Running <p> Running TorqueBox is as simple as : <p> $torquebox run <p> Out of the box , TorqueBox only is only accessible from localhost . To access it from other machines pass the -b parameter to bind to a real IP address or any available IP address : <p> $torquebox run -b 10.100.10.25$torquebox run -b 0.0.0.0 <p> To run TorqueBox in clustered mode , use : <p> $torquebox run --clustered <p> Multiple instances of TorqueBox can run on the same machine . You 'll need to pass a unique node name , data directory , and bind each instance to a different IP address or use port offsets . Below are examples of setting up a local two-node cluster using different IP addresses and port offsets , respectively . <h> Run Help <p> $torquebox help run Usage : torquebox run Options : --clustered # @ @ @ @ @ @ @ @ @ @ TorqueBox uses to store it runtime data -e , --extra=EXTRA # Extra options to pass through to JBoss AS , you will to escape dashes with ( e.g. --help ) --max-threads=N # Maximum number of HTTP threads -b , **27;7581;TOOLONG # IP address to bind to - do n't set this to 0.0.0.0 if used with --clustered --node-name=NODE-NAME # Override the name of the node ( which by default is the hostname ) --port-offset=N # Offset all port numbers listened on by TorqueBox by this number -J , **25;7610;TOOLONG # Pass options on to the JVM Run TorqueBox ( binds to localhost , use -b to override ) <h> 20.5. - Shortcuts For Accessing Paths Inside torquebox-server Gem <p> With our zip distribution , you set $TORQUEBOXHOME , $JBOSSHOME , and $JRUBYHOME . These are n't set when installing TorqueBox as a gem but we provide an easy way to access those same paths if needed : <p> $torquebox env torqueboxhome <p> The available environment variables are torqueboxhome , jbosshome , and jrubyhome . Note that they are case-insensitive so you can use TORQUEBOXHOME if you prefer . 
@@21562623 @1562623/ 66502 @qwx266502 66505 @qwx266505 <h> Update Center best practices for plugin management <p> There are three general strategies to managing plugins for client masters ( Jenkins Enterprise ) instances connected to a CloudBees Jenkins Operations Center ( CJOC ) instance : <p> 1 ) Pinning plugins in the update-center on the Operations Center <p> Advantage : This offers greater control over the versions that can be installed by users who have such admin rights on the Jenkins Enterprise master(s) . <p> Disadvantage : Plugin versions that are bundled with the client master are not updated . Due to dependencies between Jenkins core and plugin versions , this could cause instability or even prevent the instance from coming up ( in the case of major version upgrades ) . Careful attention must be exercised during upgrades , to avoid such scenario . <p> Advantage : This avoides the plugin dependency issue address in item 1 . Inherently , less plugin updates would represent greater degree of control over the environment <p> Disadvantage : Does not provide bug fixes for the plugins . This could become a concern if any of @ @ @ @ @ @ @ @ @ @ case where plugin updates related to a Jenkins Security Advisory are not updated . Generally speaking , this strategy may not be feasible unless you upgrade your environment ( Jenkins masters ) on a semi-regular basis - such as quarterly with each major release , and also with each security-related releases . <p> 3 ) Provide the latest version of each plugin <p> This allows automatic installation of new core plugins upon update of the Jenkins Enterprise version <p> Advantage : This strategy will keep the client master plugins up-to-date , allowing it to receive updated bug and security fixes upon release . <p> Disadvantage : In performing such updates , you will lose the benefits of plugin pinning Additionally , it can be somewhat time-consuming to keep the CJOC and Jenkins Enterprise versions for the OC integration ( such as CloudBees Analytics synchronized . <p> Conclusion : It is best to consider the pros and cons of theses plugin management strategies , then select the one that best fits your environment ( particularly in regards to your IT operations and change management policies ) . There is not one @ @ @ @ @ @ @ @ @ @ that represents a " one size fits all " approach . <p> Many of the limitations noted with the 3 strategies are due to the way pinned plugins work , and the Jenkins upgrade process which requires removal of pinned plugins just prior to upgrade . CloudBees Jenkins Platform 2.0 will eliminate this problem of pinned plugins during upgrades , and thereby offer much improved Update Center and Jenkins core upgrade ( and plugin update ) management from high-level . 
@@21562626 @1562626/ 66502 @qwx266502 66505 @qwx266505 <h> Is there a way to run my build in a docker container ? <h> Issue 66501 @qwx266501 <h> Resolution <p> Docker is not available on our slaves at the moment as this requires root privileges - and full control of the box . To use docker - this would require you using an- On Premise Executor ( attached build slave ) with docker installed that you manage . <p> To setup such a dedicated executor you can rely on the " CloudBees Jenkins Slave " AWS Machine Image we maintain , which has Openjdk-8 and Docker installed . <p> If you have such a setup and would like to use Docker plugin to drive your docker installation , please open a support ticket to get this plugin installed . 
@@21562627 @1562627/ 66502 @qwx266502 66505 @qwx266505 <h> Exception while deploying to Amazon Elastic BeanStalk <h> Issue <p> While deploying on AWS , this exception shows up in your build ... at LONG ... at **39;7637;TOOLONG at LONG ... at LONG ... at **44;7678;TOOLONG Caused by : **30;7724;TOOLONG : LONG ... at LONG ... at LONG ... at LONG ... ... 11 more Caused by : **32;7756;TOOLONG : LONG ... at LONG ... at LONG ... at LONG ... at LONG ... 
@@21562629 @1562629/ <h> Multiple Jenkins Master Support <h> Wednesday , 23 October 2013 - <h> 7:30pm 8:15pm <p> Our OpenStack infrastructure team uses Jenkins extensively . Our Jenkins servers , at peak load , run 5,000+ jobs per day . At that load , we are running up to the limit that a single Jenkins master can support . We wanted to balance the load across multiple masters , however the Jenkins core does not support multiple masters . The- Gearman plugin- provides some load balancing and redundancy in any Jenkins- deployment. - <h> Khai Do <p> Software Engineer <p> Hewlett Packard <p> Khai- is a software engineer with experience in the development of embedded software , enterprise software and now cloud technologies for the- OpenStack- infrastructure team . He is part of the team working to scale out the continuous integration ( CI ) infrastructure for the- OpenStack- project . Their CI infrastructure includes Jenkins , - Gerrit- code review system , - Git- SCM , - Zuul- trunk gating system , Puppet provisioning system , Jenkins job builder and test- collateral- for all of the- OpenStack- projects . As @ @ @ @ @ @ @ @ @ @ collection of cloud- servers . 
@@21562632 @1562632/ <h> Jenkins and CloudBees <p> CloudBees is home to the original architects of- Jenkins . <p> Jenkins-- is the most popular open source automation server , with more than 133,000 active sites , globally , and over 1,000,000 users . It was initially developed by Kohsuke Kawaguchi in 2004 . At the time , Kohsuke was a developer at Sun . Kohsuke got tired of breaking builds in his development work and wanted to find a way to know , before committing code to the repository , whether the code was going to work . Jenkins took off , spreading throughout Sun and then ultimately amongst the open source Jenkins community , formed around the Jenkins CI project and led by- Kohsuke . <p> Today , Jenkins is used in organizations all over the world , from lone developers creating a small project as a hobby , to large enterprises using Jenkins to develop and deliver mission-critical software applications . Kohsuke- came to CloudBees in 2010 and is- CTO . <p> As open source aficionados ourselves , we love Jenkins and the Jenkins community ! - Kohsuke and a @ @ @ @ @ @ @ @ @ @ be strong supporters of the Jenkins open source project . Our Jenkins engineers have written over 80% of the Jenkins core . Any time we fix an issue in Jenkins or any of the community plugins , we donate the code back to the Jenkins project . We have collaborated with the community to develop plugins and other functionality for Jenkins , and then donated the code to the project . Finally , we support the community in other ways , too , by organizing Jenkins User Conferences , publishing Continuous Information - the Jenkins newsletter , and aligning ourselves with Services Partners who provide expert Jenkins training and consulting- services . 
@@21562633 @1562633/ <h> Configuration Reference <p> CloudBees Jenkins Enterprise Cluster configuration is achieved by customizing two text files : cluster-init.config and cluster-init.secrets . These are text files where customization values are stored in section-based name-value pairs . For example , <p> cluster-init.config <p> tiger clustername = pse controllercount = 3 ... <p> Most of the attributes are common to all supported environments ( AWS , OpenStack , etc ) . However , a small percentage Some of the attributes are environment-specific . While many of these attributes have reasonable default values , some need explicit initialization . There are use cases such as upgrading , managing workers , etc , which may require further customization of these files . Please refer to the following sections for more details . <h> Accessing Mesos Cluster Information <p> CloudBees Jenkins Enterprise uses Mesos to simplify running applications on a scalable cluster of servers aggregated into a single resource pool . If you access the URL for Marathon , you will be asked for credentials . <p> You can retrieve the Marathon and Mesos credentials using the following commands : <h> Using Jenkins SSH on @ @ @ @ @ @ @ @ @ @ masters are provisioned on a dynamic host and port within the cluster . CloudBees Jenkins Enterprise provides an HTTP router in order to access Managed Masters using a fixed name . To access the SSH port of each master , you must configure your SSH client to use a proxy . <h> SSH Proxy Configuration for OpenSSH <p> Provided your domain is ci.example.com , you will need to add to /. ssh/config the following snippet : <h> OpenStack instructions <p> Beginning with version 1.1.0 , the load balancer component requires a different floating IP for each port that is exposed . Therefore for SSH access , you will have to use a different IP than the one mapped to your default domain . To retrieve the IP to use for SSH access , use the command cje run resolve-attr sship and use the IP instead of ci.example.com in the ProxyCommand above . <p> You should end up with : <p> Host=*.ci.example.com ProxyCommand=ssh -q -p 2222 &lt;sship&gt; tunnel %h <h> Connecting to a Master Through SSH ( OpenSSH ) <p> Provided you added your public SSH key to your user profile @ @ @ @ @ @ @ @ @ @ can then use SSH commands . Please note that you will need to accept host keys for both the proxy and the master on the first connection attempt . <h> SSH Proxy Configuration for Putty <p> You will need to add the proxy configuration to your connection details . <p> Go to connection &gt; proxy . <p> Proxy type : local <p> Proxy hostname : ci.example.com <p> Proxy port : 2222 <p> Proxy command : plink ssh@%proxyhost -P %proxyport tunnel %host <p> Save the connection as pse ( as an example ) . <h> Connecting to a Master Through SSH ( Putty ) <p> Provided you added your public SSH key to your user profile in the master you want to connect to , you can then use SSH commands . Please note that you will need to accept host keys for both the proxy and the master on the first connection attempt . <h> Common Configuration Attributes <p> This value is used to prefix resource names and tags when setting up servers and other infrastructure . <p> This value must contain only alphanumeric , dots , dashes and underscore @ @ @ @ @ @ @ @ @ @ 3 ) <p> Controllers manage coordination of the CloudBees Jenkins Enterprise resources . Include multiple controllers to ensure availability of the CloudBees Jenkins Enterprise cluster . When using multiple controllers , always use an odd number of controllers . <p> masterworkercount <p> Number ' master ' of workers ( default 2 ) <p> CloudBees Jenkins Enterprise workload , for masters , CJOC and PSE components , is handled by ' master ' workers . To increase the initial capacity of your CloudBees Jenkins Enterprise cluster , increase this number . You can add more workers later with the ' worker-add ' operation . We recommend a minimum of two ' master ' workers . <p> buildworkercount <p> Number of ' build ' workers ( default 1 ) <p> CloudBees Jenkins Enterprise workload for builds is handled by ' build ' workers . To increase the initial build capacity of your CloudBees Jenkins Enterprise cluster , increase this number . You can add more workers later with the ' worker-add ' operation . <p> registerscript <p> OS Registration script <p> If the OS requires a registration ( e.g. RHEL ) , @ @ @ @ @ @ @ @ @ @ This script will be copied to machines and executed on init and upgrades and must succeed even if the machine is already registered . <p> The unregister script is run on machine shutdown . It allows to free the registration if it part of a pool . Provide here the path to a script handling machine unregistration . <p> Example of script content for RHEL : <p> # ! /bin/bash subscription-manager unregister <p> dockerregistry <p> Docker registry ( default public ) <p> Specify the registry used to obtain CloudBees Jenkins Enterprise images . To use the public Docker registry , use ' public ' . <p> httpproxy <p> HTTP Proxy ( optional ) <p> If servers in the CloudBees Jenkins Enterprise cluster require an HTTP proxy to access the Internet , specify the full URL to the proxy server including the applicable port . <p> If servers in the CloudBees Jenkins Enterprise cluster do n't have any public IP , they must be accessed through a SSH proxy . The following optional section allows to configure access to a SSH proxy . <p> Table 2. sshproxy section <p> sshproxy Attribute @ @ @ @ @ @ @ @ @ @ optional ) <p> Username to log in as on the SSH proxy . <p> host <p> SSH Proxy host name ( optional ) <p> Host of the SSH proxy . <p> port <p> SSH Proxy port ( optional ) <p> Port of the SSH proxy . Defaults to 22 . <p> identityfile <p> SSH Proxy identity file ( optional ) <p> Path to a private key to be used to connect to the SSH proxy . <p> netcatcmd <p> SSH Proxy Netcat command ( optional ) <p> GNU Netcat must be installed on the machine used as SSH proxy . This allows to provide a custom path to the netcat executable . Defaults to ' nc ' . <h> Operations Center Configuration Attributes <p> Table 3. cjoc section <p> cjoc Attribute <p> Description <p> memory <p> The container memory limit ( default 1.5GB ) <p> This value specifies the amount of memory allocated to the Operations Center container <p> jvmoptions <p> The Operations Center application JVM options ( default ' -Xmx1024m ' ) <p> This value specifies the options used by the Java Virtual Machine . <p> Note that if @ @ @ @ @ @ @ @ @ @ , it should be lower than the container memory limit <h> Docker Configuration Attributes <p> Table 4. docker section <p> docker Attribute <p> Description <p> options <p> The Docker daemon options ( default --log-driver=syslog ) <p> This value sets the Docker daemon options . --log-driver=syslog should always be included to ensure logs are collected . <h> Common Troubleshooting Attributes <p> Note <p> The following debug settings are for internal use only . <p> Table 5. debug section <p> debug Attribute <p> Description <p> disablecastle <p> Disable castle ( storage agent ) ( default no ) <p> disableelasticsearch <p> Disable elasticsearch ( default no ) <p> disablecjoc = no <p> Disable cjoc ( CloudBees Jenkins Operations Center ) ( default no ) <p> enablelogstash <p> Enable logstash ( default no ) <p> Logstash may optionally be used to capture syslog events within the CloudBees Jenkins Enterprise cluster . <p> forcepullimage = false <p> Force docker image pulls for Marathon apps ( default false ) <p> Use this value to set forcePullImage for docker containers in the Marathon applications that support this setting . <p> enablehelloapp <p> Enable the hello app ( @ @ @ @ @ @ @ @ @ @ application that tests basic app deployment to CloudBees Jenkins Enterprise . When testing support for applications , you can set this to to yes , which will generate the hello and start it as a part of the Marathon application init . You can also manually start and stop the hello application from dna . <h> AWS-Specific Configuration Attributes <p> Table 6. aws section <p> aws Attribute <p> Description <p> region <p> AWS region ( required ) <p> The region in which CloudBees Jenkins Enterprise will run . This must correspond to the AWS credentials specified above . <p> If set , CloudBees Jenkins Enterprise will create all resources within the given VPC . It is assumed that the given VPC I 'd is valid within the given account and region . <p> If unset , CloudBees Jenkins Enterprise will create a new VPC and create all resources inside it . <p> vpcsubnetid <p> User-provided subnet I 'd ( required if vpcid is set ) <p> If vpcid above is set , it is mandatory to provide also the I 'd of a subnet defined inside the user-provided VPC and the availability zone @ @ @ @ @ @ @ @ @ @ number of subnets must be either 1 , or 3 ( separated by comma ) for fault tolerance . <p> Instances created by CloudBees Jenkins Enterprise will be launched on the provided subnet . <p> **25;7790;TOOLONG <p> User-provided security group I 'd <p> Only used if vpcid above is defined . Adds an additional security group to all instances created in the cluster and to load balancers . <p> vpcsubnet <p> VPC subnet ( default 10.16.0.0/16 ) . Unused if vpcid is set . <p> VPC and subnet CIDR block . <p> internal <p> Whether the cluster is internal only ( defaults to no ) <p> Allows to set up a CloudBees Jenkins Enterprise cluster with no public access ( no public elb , no public ips ) This can be enabled only if the vpc is user-provided ( vpcid and vpcsubnetid provided above ) <p> If not specified , then the value specified in the attribute " openstack.imagename " is used <p> storageinstancetype <p> Flavor of the storage instance ( default m1.small ) <p> If intending to use builtin-rsync , then change this value to something appropriately larger . <p> @ @ @ @ @ @ @ @ @ @ ) <p> If not specified , then the value specified in the attribute " openstack.imagename " is used <p> controllerinstancetype <p> Flavor of the controller instances ( default m1.large ) <p> workerimagename <p> Image name override for Worker nodes ( optional ) <p> If not specified , then the value specified in the attribute " openstack.imagename " is used <p> workerinstancetype <p> Flavor of the worker instances ( default m1.large ) <p> networkname <p> Network name within which Tiger servers are created ( required ) <p> floatipnetworkname <p> Name of network that houses floating IPs to be assigned to the controller instances so they are accessible from an external network , e.g. , the Internet ( optional ) <p> This network name will be used to generate one or more floating IPs to expose VMs to the outside world . If not set , only private ips from " networkname " will be assigned and CloudBees Jenkins Enterprise may not be accessible from outside the cluster , depending on your network topology . <p> floatipworkers <p> Whether to give a floating ip to workers . ( default no ) <p> @ @ @ @ @ @ @ @ @ @ world . Set this to ' yes ' to attach workers to the floating IPs network , just like controllers . It will allow to connect external jnlp agents to the masters within the cluster . <p> tigeradminportaccess <p> Admin access from selected IPs ( required ) <p> Administrative ports are not accessible by default , but access can be granted to specific IPs and networks by using tigeradminportaccess . <p> Ensure this property includes the installation machine IP , failing to do so will result in a failed installation . <p> In AWS or public clouds that would be your public facing IP . You can use Google by typing " what is my ip " to find public-facing IP . <p> In OpenStack or private clouds it would be the IP of the machine running the installation as seen by the VMs started in the cloud . <p> The property can contain one or more IP address ranges in CIDR notation separated by commas that are granted access to the administrative ports ( for example , **28;7817;TOOLONG ) . <p> Use 0.0.0.0/0 to allow administrative connections from any @ @ @ @ @ @ @ @ @ @ IP ( 198.51.100.1 ) . <p> Apache , Apache Ant , Apache Maven , Ant and Maven are trademarks of The Apache Software Foundation . Used with permission . No endorsement by The Apache Software Foundation is implied by the use of these marks . <p> Other names may be trademarks of those designations appear in this book , and CloudBees was aware of a trademark claim , the designations have been printed in caps or initial caps . <p> While every precaution has been taken in the preparation of this book , the publisher and authors assume no responsibility for errors or omissions , or for damages resulting from the use of the information contained herein . 
@@21562636 @1562636/ <h> User friendly pipelines in CloudBees Jenkins Platform 2.32.2.6 <p> We are excited to announce the immediate availability of CloudBees Jenkins Platform 2.32.2.6 , which adds support for declarative pipeline syntax and many improvement as well as the February security release . This release also coincides with the launch of the user community , a feature of CloudBees Network , as the forum for customer collaboration . CloudBees Jenkins Platform functionality is included in CloudBees Jenkins Enterprise , which includes scalability , manageability , resiliency and security . <h> Release Highlights <h> Declarative Pipeline Syntax <p> This new syntax will enable everyone involved in DevOps , regardless of coding expertise , to participate in the continuous delivery process by being able to create , edit or review a pipeline . Declarative pipeline does n't replace the original Scripted syntax , instead it offers straightforward predefined hierarchy that helps to understand and predict the flow of the pipeline and provides a common foundation across all pipelines . Here is a post on the plugin and reference card . <p> If you have n't implemented Pipeline because of the learning curve @ @ @ @ @ @ @ @ @ @ adoption curve , helping you to realize all of the benefits of Pipeline as Code . The end result is that your organization can get new users ramped up faster on Pipeline and give existing Scripted syntax users , a faster , more streamlined option . <h> Security Fixes <p> All customers were sent a security fix in February 2017 for Jenkins Core . If you have not installed the fix , we strongly urge you to upgrade to CJP 2.32.2.6 to incorporate the security fix in your production environment . <h> NEW Community ' tab on CloudBees Network <p> In case you have not discovered , we are launching our user Community on CloudBees Network . We continue to iterate constantly to provide a better user experience . The Community is your chance to engage with other users to share ideas , promote best practices and answer questions . Please register on Community today and introduce yourself so we can start collaborating ! <h> CloudBees Assurance Program Plugin ( CAP ) Updates <p> Improvements <p> Details <p> Declarative Pipeline Syntax <p> Offers a simple , predefined hierarchy to make @ @ @ @ @ @ @ @ @ @ Verified Plugins <p> The ldap , junit and git-client plugins have been upgraded to new verified versions that include fixes and improvements . Please see the Release Notes for details . <p> Other Compatible Plugins <p> Besides , upgrades compatible with the CAP Collection has been included for github , github-api , github-branch-source , docker-commons , monitoring , promoted-builds and matrix-project . <h> CloudBees Jenkins Platform Updates <p> Improvements <p> Details <p> Backup Jenkins to Amazon S3 Compatible Storage Systems <p> Jenkins can now be backed up to storage systems that are compatible with Amazon S3 ( OpenStack Swift , EMC Atmos ) <p> JNLP ping protocol to ease troubleshooting <p> The JNLP protocol used for the communication between Operations Center and Client Masters now supports a ping protocol to help troubleshooting <p> Timeout for SSO logins <p> Introduce a timeout for SSO Logins for better robustness <p> Fixes <p> Details <p> Client Masters can access shared credentials even when Operations Center is down <p> Credentials shared by Operations Center are now cached by Client Masters so that Client Masters can use those , even to restart , when Operations @ @ @ @ @ @ @ @ @ @ Maven , Ant and Maven are trademarks of The Apache Software Foundation . Used with permission . No endorsement by The Apache Software Foundation is implied by the use of these marks . <p> Other names may be trademarks of those designations appear in this book , and CloudBees was aware of a trademark claim , the designations have been printed in caps or initial caps . <p> While every precaution has been taken in the preparation of this book , the publisher and authors assume no responsibility for errors or omissions , or for damages resulting from the use of the information contained herein . 
@@21562637 @1562637/ 66502 @qwx266502 66505 @qwx266505 <h> Pipeline - Files manipulation <h> Issue <p> I am trying to port some legacy Jenkins build jobs that used Linux shell scripts ( to Jenkins Workflow scripts ) to download and stage/deploy to multiple server nodes . I need to be able to save and manipulate files to the Workflow workspace ( or to somewhere under /tmp ) directory structure . <p> When we use groovy library classes ( AntBuilder , File ) its working fine on Client-Master but its not working on Slave machines . 66501 @qwx266501 66503 @qwx266503 <p> Pipeline plugin <h> Resolution <p> The operation with File class are run on master , so only works if build is run on master , in this example I create a file and checks if I can access to it on a node with method exists , it does not exist because the " new File(file) " is executed on master , to check this I search for folder " Users " that exist on my master but not into node . 
@@21562639 @1562639/ <h> Resolved issues <h> Known issues <p> AWS Credentials : creation form is not rendered properly during a few seconds due to a check on AWS . May not be noticeable depending on AWS check performance . The solution is to wait for a while <p> MinorCJP-4921 <p> When upgrading Jenkins CJE on windows , the installer may fail to stop the service and install the new version . In this case , uninstall without deleting data and reinstall again . <p> MinorCJP-4920 <p> Upgrading CJE from 1.641.3.1 results in Github BranchSource classes not not found . Resolution is to upgrade **37;7847;TOOLONG to latest version . <p> MinorCJP-3832 <p> When running both CJOC and CJE on the same Windows instance , in certain circumstances HA can incorrectly prevent the instance from starting . ( Running CJOC and CJE on the same instance is not a recommended setup for a production instance ) <p> MinorCJP-4205 <p> DockerHub Notification : pull step hangs on invalid credentials <p> MinorCJP-4210 <p> Cloudbees Nodes Plus : Email notifications are not sent when slave is temporary offline/back online <p> By design , it should not @ @ @ @ @ @ @ @ @ @ wrongly allows an admin to perform a copy into another folder on CJOC . Performing this action will result in undefined " split brain " behaviour . <p> MinorCJP-4857 <p> The client master 's move/copy/promote operations bar freezes showing an invalid path error message if the client master is in disconnected state . Workaround is either to wait for the client master to re-connect or , if the connection is broken , to release the client master from CJOC ( in this case the local move/copy/promote operation will work ) . <p> MinorCJP-5050 <p> Jenkins supports the definition of complex labels for nodes , including expressions with logic operators and conjunctions . This level of complexity is not currently supported by CloudBees Jenkins Analytics and labels having complex expressions are not being reported correctly . As a workaround it is possible to simplify node label expressions by defining multiple labels for the same node . <p> MinorCJP-5039 <p> Embedded Elasticsearch validation button does not work correctly in this release . In order to check the instance availability , just access any Analytics dashboard in CJOC Web UI and then wait @ @ @ @ @ @ @ @ @ @ Operations Center Reporter or Operations Center Feeder plugin may fail to submit configuration history data to Elasticsearch for newly created nodes . This missing data does not impact the built-in Analytics dashboards . <p> Starting from 1.8.100 Operations Center Analytics Reporter reports all contents of label expressions for classic job types ( Freestyle , Multi-Configuration , Maven project , etc . ) . Logic expressions are being reported as labels ( e.g. " linux &amp;&amp; 64bit " label expression also records " &amp;&amp; " as the used label ) . There is no workaround for this issue available . <p> There is an issue with some bundled optional dependencies ( specifically **27;7886;TOOLONG &amp; cloudbees-workflow-ui ) . They are not loaded on the first Jenkins start . Must be fixed by a second start . 
@@21562642 @1562642/ <h> Jenkins in the Cloud <h> Overview <p> Are you searching for a simple way to run Jenkins in the cloud ? CloudBees offer multiple ways to deliver Jenkins by leveraging your existing cloud infrastructure - including Amazon Web Services and Red Hat OpenStack . Tried and tested , these solutions enable customers to offer Jenkins internally , driving continuous integration and continuous delivery enterprise-wide without investing in on-premise resources . <h> CloudBees Jenkins Enterprise for AWS <p> You can access CloudBees Jenkins Enterprise in the Amazon Marketplace and set it up to interact with AWS services such as Amazon EC2 , S3- and Lambda . CloudBees Jenkins Enterprise is a cloud-native offering with elastic , on-demand provisioning and high availability , enabling Jenkins- as a Service across the- organization . <h> CloudBees Jenkins Enterprise on Red Hat OpenStack Platform <p> CloudBees Jenkins Enterprise on Red Hat OpenStack Platform delivers the best of both worlds : a feature-rich CI/CD solution that accelerates application delivery and a stable and scalable private cloud that accelerates IT- agility . <h> Jenkins on AWS <p> Read more about the power of the AWS @ @ @ @ @ @ @ @ @ @ Jenkins . 
@@21562648 @1562648/ <h> Chapter- 18. - TorqueBox Rake Support <h> 18.1. - Overview <p> TorqueBox includes a support package which includes Rake tasks which assist in the deployment to and undeployment from an instance of the TorqueBox Server , in addition to the launching of the server . This rake-based support is normally intended for development-time usage , and not for production . More advanced tooling , such as Capistrano ( see Capistrano Support ) is advisable for production environments . <p> First , the $TORQUEBOXHOME and $JBOSSHOME variables must be set to the path of the top of your TorqueBox Installation and the JBoss installation inside of it , respectively , as described in Chapter- 2 , TorqueBox Installation . <p> To include these tasks into your Rakefile , use a single require statement . <p> require ' torquebox-rake-support ' <p> Once these variables are set and you have adjusted your Rakefile , you may perform directory- or archive-based deployments and control the execution of the TorqueBox AS . <h> 18.2. - Deploying applications <h> 18.2.1. - Directory-based deployments <p> The typical usage of the rake tasks is to perform @ @ @ @ @ @ @ @ @ @ AS during development . The simplest deployment form will deploy the application with RACKENV or RAILSENV set to development , no virtual host , at the root of the server . <p> $rake torquebox:deploy <p> If you wish to deploy with a different value for RACKENV or RAILENV , the task respects your current shell 's values for those variables . <p> $RAILSENV=staging rake torquebox:deploy <p> You may supply a name argument , either as a rake parameter or as an environment variable , to adjust the name of your -knob.yml file . If not supplied , the name of the deployment defaults to the current directory name . <p> $rake torquebox:deploy ' /my-app ' , ' foo ' <p> $rake torquebox:deploy NAME=foo <p> For example , running " rake torquebox:deploy NAME=foo " will create a deployment artifact called " foo-knob.yml " and deploy it accordingly . <p> Additionally , a custom context path may be used instead of the default to of / , by providing a rake argument to the torquebox:deploy task . <p> $rake torquebox:deploy ' /my-app ' <h> 18.2.2. - Archive-based deployments <p> In the event @ @ @ @ @ @ @ @ @ @ instead of as a directory of loose files , the rake support includes a task to do just that . Additional , the rake task may also be used to simply create the archive without deploying it , if you intend to distribute it to your servers in some other fashion . <p> To create ( but not deploy ) an archive : <p> $raketorquebox:archive <p> Additionally , you can specify a name for the archive , either on the command line or as an environment variable . For example , either of these statements : <p> **25;7915;TOOLONG <p> $raketorquebox:archive NAME=baz <p> will produce an archive called " baz.knob " . <p> The resulting archive will be placed at the root of the application , with a suffix of . knob . To inspect the contents , you may use the jar tool . 
@@21562649 @1562649/ 66502 @qwx266502 66505 @qwx266505 <h> Disabling Specific Ciphers In Jenkins <h> Issue <p> Disabling Specific Ciphers In Jenkins 66501 @qwx266501 <p> Jenkins <p> Jenkins LTS <p> CloudBees Jenkins Enterprise ( CJE ) <p> CloudBees Jenkins Operations Center ( CJOC ) <h> Resolution <p> Any specific ciphers that need to be disabled will need to be disabled at the Java Virtual Machine ( JVM ) level . Due to this fact it is best to review the documentation for the specific Java version being used in your enviornment . For example , there were various changes to enforce the security in latest Java versions and to not accept the use unsafe certificates by default . Please see the examples below with regards to Java 8 : 
@@21562651 @1562651/ 66502 @qwx266502 66505 @qwx266505 <h> FAQ on payment options - credit card , PayPal and yearly agreement <p> For customers using our Jenkins-based SaaS offering , aka DEV@cloud , there are two options to pay CloudBees monthly bills : credit card and PayPal . For companies or individuals which do not want to pay via credit card or PayPal , a third option exists , named Yearly Agreement ( YA ) . It is only available for Enterprise plan subscriptions , under certain conditions . It implies- an annual upfront payment via a bank wire transfer for the 12 upcoming months . For more details , please open a support ticket- and well get back to you . <p> When do you need to enter credit card or PayPal information ? <p> As soon as you subscribe to one of our paying plans , described here . Once you have a valid payment method on file , we will not ask for payment- information anymore . <p> How can you change or update your payment method(s) ? <p> You can manage your payment method(s) online , on your Account- @ @ @ @ @ @ @ @ @ @ to Payment Methods . Please see this article that explains how to access your Account Setting page . <p> Can I have more than one payment method on file ? <p> Yes , you can have as many payment methods as you 'd like . If you have more than one , make sure to indicate which one should- the correct by-default payment method . <p> When and how do you charge my credit card or PayPal account ? <p> Each account is charged once a month , according to the accounts Billing Cycle Day ( BCD ) . For instance , if an account is created on may 19th , its BCD will be 19th of the month . Therefore , every 19th of the month , CloudBees billing system will create a monthly invoice for this account , with all due charges , fixed or usage-based . A few hours later , on this same day , a daily payment process will pick-up the invoice and charge the by-default payment method defined for this- account . <p> How are you- notified of monthly payments ? <p> As soon as @ @ @ @ @ @ @ @ @ @ , an email is sent to the accounts Bill-To contact , with the corresponding pdf invoice(s) in attachment . You can manage Bill-To contact information on your Account Settings page . Please see this article that explains how to access your Account Setting page . Note : you can ask us to add more recipients of these monthly notifications. - To do so , please create a support ticket . <p> How can I access- my payment history ? <p> You can view all your- invoices on your Account Settings page. - You can also download them in pdf format . Please see this article that explains how to access your Account Setting page . <p> How does PayPal payment work ? <p> We use the PayPal Billing Agreement I 'd method ( BAID ) . In summary , when choosing the PayPal option , you are redirected to your PayPal account . Once logged in PayPal , you are requested to authorize CloudBees to charge your PayPal account on a monthly basis . As soon as it is- approved , PayPal transfers to CloudBees system a unique I 'd for this @ @ @ @ @ @ @ @ @ @ . This unique BAID is stored in Zuora ( see " Is CloudBees PCI compliant ? " below ) and works exactly like a credit card number . <p> Please note however that your PayPal account does- not need to be linked to a credit card for BAID to work . It only needs to be linked to a regular bank checking account . This is particularly interesting for countries where online credit card usage is limited because of security issues . <p> Is CloudBees PCI compliant ? <p> CloudBees does not store any payment information on its own systems . Instead , our web console is fully integrated with Zuora , a large SaaS-based subscription management platform , including billing and payment solutions . Zuora is fully PCI-compliant and therefore can safely store credit card or PayPal information . <p> As an admin user , you can view invoices from within the " settings " page of your account . - Below the " payment methods " section there is an " invoices " icon . - The " invoices " icon is a drop down menu from which @ @ @ @ @ @ @ @ @ @ in PDF format . 
@@21562652 @1562652/ <p> We are excited to announce the availability of CloudBees Jenkins Platform 2.19.3.1 . This release delivers stability and usability by bumping the Jenkins core to 2.19. x and includes a key security fix . This is also the second " rolling release " , the output from a process we are using to provide the latest functionality to users on a more frequent release cadence . All enhancements and fixes are for the rolling release only . Fixed releases have diverged from rolling releases ( locked to 2.7 . X ) and will follow a separate schedule . <h> Release Highlights <h> Jenkins Core Bumped to 2.19. x LTS Line . <p> This is the first LTS upgrade on the rolling release and adds key fixes , such as improved dependency management for plugins . With improved dependency management , administrators are warned when dependent plugins are absent during install time . Thus administrators can catch and fix the problem before run time and provide a smooth experience to their users . <h> Security-360 Fix Incorporated <p> All customers were sent the fix for Security-360 on Nov 16 @ @ @ @ @ @ @ @ @ @ serialized Java object to the Jenkins CLI , making Jenkins connect to an attacker-controlled LDAP server , which in turn can send a serialized payload leading to code execution , bypassing existing protection mechanisms . If you have not installed the fix , we strongly urge you to upgrade to incorporate the security fix in your production environment . <h> Support for CloudBees Assurance Program in Custom Update Centers <p> CloudBees Assurance Program ( CAP ) provides a Jenkins binary and plugins that have been verified for stability and interoperability . Jenkins administrators can easily promote this distribution to their teams by setting CAP as an upstream source in their custom update centers . This reduces the operational burden by allowing admins to use CloudBees-recommended plugins for all their masters , ensuring compliance and facilitating governance . <h> CloudBees Assurance Program Plugin ( CAP ) Updates <p> These CloudBees verified plugins have been updated for this release of the CloudBees Jenkins Platform : <p> Mailer version 1.18 <p> LDAP version 1.13 <p> JUnit version 1.19 <p> Email-ext version 2.51 <p> Token-macro version 2.0 <p> GitHub version 1.22.3 <h> CloudBees Jenkins @ @ @ @ @ @ @ @ @ @ the CloudBees Jenkins Platform , including many stability improvements to CloudBees Jenkins Operations Center connections to client masters . <p> Jobs with lots of history no longer hang the UI - Improved performance from the UI for jobs with lots of build history . Lazy loading renders faster because build history will not automatically load on startup . <p> Reduce configuration errors caused by invalid form submissions - Browsers will not autocomplete forms in Jenkins , reducing configuration problems due to invalid data in form submissions resulting from using the browser back button . Only select form fields ( e.g. job name ) will offer autocompletion . For admins , Jenkins users who use the browser back button will no longer corrupt the Jenkins configuration . <p> CloudBees Assurance Program ( CAP ) <p> Support for Custom Update Centers - CAP is now available as an upstream source in Custom Update Centers , enabling admins to use CloudBees-recommended plugins for all their masters . <p> Mailer has been upgraded to version 1.18 , includes a minor improvement to rendering page links and now supports the BlueOcean project . <p> JUnit @ @ @ @ @ @ @ @ @ @ around unsafe characters in the URI , highlighted test results . <p> Email-ext has been upgraded to version 2.51 contains an improvement pipeline support for expanding the tokens FAILEDTESTS , TESTCOUNTS and TRIGGERNAME in a pipeline email notification . <p> Token-macro has been upgraded to 2.0 and contains improved pipeline support , allowing token macro to be used in a pipeline context , polish providing autocomplete when referencing a token name , support for variable expansion and some performance improvements when scanning large Jenkins instances . <p> Pipeline usability improvements <p> Environment variables in Pipeline jobs are now available as global Groovy variables - simplifies tracking variable scope in a pipeline . <p> Build and job parameters are available as environment variables and thus accessible as if they were global Groovy variables - parameters are injected directly into the Pipeline script and are no longer available in " bindings " . <p> Makes job parameters , environment variables and Groovy variables much more interchangeable , simplifying pipeline creation and making variable references much more predictable . <p> Skip Next Build plugin <p> Adds the capability to skip all the jobs @ @ @ @ @ @ @ @ @ @ the jobs belonging to a " Skip Jobs Group . " - Skip Jobs Group is intended to group together jobs that should be skipped simultaneously but are located in different folders . &lt;/td&gt; <p> Support bundle <p> Adds the logs of the client master connectivity to the support bundle . <p> LDAP upgraded to version 1.13 , includes a major configuration bug fix . <p> GitHub has been upgraded to version 1.22.3 and contains a major bug fix for an issue that could crash Jenkins instances using LDAP for authentication <h> Frequently Asked Questions <h> What is the CloudBees Assurance Program ( CAP ) ? <p> The CloudBees Assurance Program ( CAP ) eliminates the risk of Jenkins upgrades by ensuring that various plugins work well together . CAP brings an unprecedented level of testing to ensure upgrades are no-risk events . The program bundles an ever-growing number of plugins in an envelope that is tested and certified together . The envelope installation/upgrade is an atomic operation - all certified versions are upgraded in lockstep , reducing the cognitive load on administrators in managing plugins . <h> Who is @ @ @ @ @ @ @ @ @ @ program is designed for Jenkins administrators who manage Jenkins for their engineering organizations . <h> When was the CloudBees Assurance Program launched ? <p> The program was launched in September 2016 . <h> What is a rolling release ? <p> The CAP program delivers a CloudBees Jenkins Platform on a regular cadence and this is called the " rolling " release model . A new release typically lands every 4-6 weeks . <h> Do I have to upgrade on every release ? <p> You are encouraged too but are n't  required . You can skip a release or two and the assurance program ensures your upgrades would be smooth . <h> What release am I on ? <p> You can tell which version you are running by checking the footer of your CJE or CJOC instance . <h> How to Upgrade <p> Identify which CloudBees Jenkins Enterprise release line ( rolling vs. fixed ) you are currently running . <p> Visit go.cloudbees.com to download the latest release for your release line . ( You must be logged in to see available downloads ) . <p> If you are running CloudBees @ @ @ @ @ @ @ @ @ @ because you can not connect a new CloudBees Jenkins Enterprise instance to an older version of CloudBees Jenkins Operations Center . <p> Apache , Apache Ant , Apache Maven , Ant and Maven are trademarks of The Apache Software Foundation . Used with permission . No endorsement by The Apache Software Foundation is implied by the use of these marks . <p> Other names may be trademarks of those designations appear in this book , and CloudBees was aware of a trademark claim , the designations have been printed in caps or initial caps . <p> While every precaution has been taken in the preparation of this book , the publisher and authors assume no responsibility for errors or omissions , or for damages resulting from the use of the information contained herein . 
@@21562653 @1562653/ <h> How to Deliver Applications 6 Times Faster with Jenkins and Continuous Delivery as a Service <p> Presented on March 9th , 2016 <p> - <p> CloudBees Speakers : Kal Vissa and Dan Juengst <p> - <p> You know that to stay ahead of customer expectations and your competition , you need to deliver applications faster . Organizations are moving to continuous delivery to build , test and deploy high quality software an average of six times faster by automating core tasks across delivery pipelines . <p> CloudBees newest offering " Private SaaS Edition " provides cloud-native scalability and operations that allow you to quickly deploy and manage Jenkins-powered continuous delivery as a service internally for all your teams . <p> Its continuous delivery as a service architecture let 's you share resources , reducing infrastructure costs and optimizing resource- usage . <p> With built-in analytics , you will also gain global visibility into how your teams and infrastructure are- performing . <p> Join this webinar for more information and a demo of this new offering , and learn how the industry 's most proven , fully featured technology platform @ @ @ @ @ @ @ @ @ @ faster . 
@@21562659 @1562659/ <p> 2 . How to use Folder plugin to effetely organize different in Jenkins operations- center <p> 3 . Monitoring of instances using health monitor and other monitoring- tools <p> 4 . Use of chef to automate- infrastructure- <p> 4 . Backup and restore functionality which developed to quickly recover Jenkins- instances <p> 5 . HA Setup Enterprise Jenkins and lessons- learned- <p> 6 . Analytics how setup a ELK stack and how to harness different trends from the dashboards which come with Enterprise- Jenkins . <p> Speaker <p> Vishal Raina- is a Sr Platform engineer working for Adobe in SJ . At Adobe Vishal works on Engineering productivity tools and is currently rolling out Opensource and Enterprise Jenkins , on-boarding many product teams in the process . Vishal is passionate about well-crafted continuous integration and continuous delivery and is an advocate for this practice throughout- Adobe. - 
@@21562664 @1562664/ 66502 @qwx266502 66505 @qwx266505 <h> Upgrading to 1.597 slow startup <h> Issue <p> I upgraded to 1.596 and startup is very slow 66501 @qwx266501 <p> Jenkins 1.597+ <p> Jenkins LTS 1.609+ <p> CloudBees Jenkins Enterprise 1.609.1. x+ <h> Resolution <p> In newer version of Jenkins- the- runs were stored as a timestamp value . Starting with 1.597 the- runs are now stored as numbers instead. - There is a *one time startup- *performance issue when upgrading as this- conversion needs to happen. - In the Jenkins logs ( usually in- /var/log/jenkins ) , there- are- warnings which indicate the migration is happening . If this continues to happen , then please file a new support ticket . <p> - <p> For more information please go to the open source Jenkins wiki : - 1.569+ Migration . 
@@21562666 @1562666/ 66502 @qwx266502 66505 @qwx266505 <h> Failed to extract the bundled plugin <h> Issue <p> I am seeing the following error in my logs when attempting to run a job : <p> SEVERE **44;7942;TOOLONG : Failed to extract the bundled plugin scm-api.hpi java.io.IOException : File ' **37;7988;TOOLONG ' can not be written to at LONG ... at LONG ... 66501 @qwx266501 66503 @qwx266503 <h> Resolution <p> Modify the file ownership permissions under the /plugins folder to match the username under which Jenkins is running . 
@@21562670 @1562670/ <h> Jozi JUG - ( Senior to Midrange ) Jenkins with CloudBees <p> 25 Apr 2016 <p> Jenkins CI is the most popular open source continuous integration ( CI ) platform , with more than 100,000 active sites , globally. - Today , Jenkins is used in organizations all over the world , from lone developers creating a small project as a hobby , to large enterprises using Jenkins to develop and deliver mission-critical software- applications. - <p> CloudBees is a provider of continuous delivery solutions powered by Jenkins CI . CloudBees provides a platform as a service ( PaaS ) solution to build , run , and manage web applications and was the first production PaaS to support the entire application lifecycle from development to deployment. - - <p> Dewald is a software developer and ThoughtWorker from Johannesburg . What drives him is all things software and he always look for new ways to improve the delivery of successful projects . He 's been involved in many client engagements over the years where implemented Continuous Integration and Delivery , modernised old systems and brought automation to new ones @ @ @ @ @ @ @ @ @ @ can not get to the consumer and that automation is crucial to succeeding at this- goal. - <p> He has worked on a multitude of technologies and domains over the years including . NET , Python and Java in Finance , Markets , Communications and a government- project . <p> Agenda <p> 18:00 - 19:00 Social and- food <p> 19:00 - 20:00 Dewald Viljoen - Jenkins with- Cloudbees <p> The sponsor for the venue , food and drink- is- ThoughtWorks . <p> The Jozi-JUG is dedicated to a harassment-free experience for everyone . Our anti-harassment policy can be found- here. - 
@@21562679 @1562679/ <h> Using Jenkins &amp; XL Test to Ensure Quality in Continuous Delivery <p> With the growing need to quickly release software and add value for customers , the trend towards Continuous Delivery is undeniable . At the same time , challenges exist in managing code quality within the software delivery pipeline . You are likely to have numerous tests in your pipelines to ensure quality , but making sense of all the test results produced by various jobs " and identifying the culprits and repeat offenders " becomes harder and harder as you speed up the delivery of your- software . <p> XebiaLabs and CloudBees can help you deliver better software faster . Join us live to see how you- can : <p> Quickly understand and improve the quality of your code by leveraging the Jenkins Workflow plugin and XL TestView 's ( formerly known as XL Test ) aggregation , reporting , and qualification- capabilities . <p> Make sense of your test data " collect , visualize and analyze data from all of your test tools in one central- dashboard . <p> Extract test results directly from multiple @ @ @ @ @ @ @ @ @ @ 
@@21562688 @1562688/ 66502 @qwx266502 66505 @qwx266505 <h> Issue 66501 @qwx266501 <h> Resolution <p> In the groovy transformer , you can access the template model ( the Job Template ) of the template instance ( The Job created from the Job Template ) via the variable instance . <p> From that object you can retrieve the property that encapsulates RBAC groups and role filters - that is LONG ... You then need to serialize the groups and role filters inside a LONG ... <p> Note : Be aware that this considered unsafe and required an administrator to allow several methods in the Manage Jenkins &gt; In-Process Script Approval screen . See Script Security Plugin for more details . <p> Note : Be aware that any changes to the permissions of your Job Template will not be automatically reflected to the template instances . For that you need to force the re-evaluation of the instance(s) transformer by re-saving the Job Template . 
@@21562689 @1562689/ 66502 @qwx266502 66505 @qwx266505 <h> How to get the XML definition for a view that is inside a folder ? <h> Issue <p> Is it possible to dump the view definition XML to stdout ? ( The view is in the folder ) . 66501 @qwx266501 <p> Jenkins <p> Jenkins LTS <p> CloudBees Jenkins Enterprise ( CJE ) <p> CloudBees Jenkins Operation Center ( CJOC ) <p> CloudBees Folders Plugin <h> Resolution <p> In order to get the information of one or more views inside a folder you should use the Jenkins Script Console . For that you should navigate to Manage Jenkins &gt; Script Console , and run the following script . <p> This script uses a very simple approach , and gets all the elements existing at root level for your instance , and if the element is a folder , it processes all the views included in it ( except for the All view ) . It is quite straightforward to extend the script in a way that you can process recursively all the elements , or to get the information only for views matching a given pattern or inside a given folder . 
@@21562691 @1562691/ <h> Scaling DevOps To The Enterprise Level <p> This webinar lays out the big picture of what it takes to tackle the challenge of optimizing , at an enterprise level , the process of converting business needs and expectations into digital centric value using DevOps and how these processes can leverage automation solutions such as Jenkins to accelerate the delivery pipeline. - <p> We will also explore how the CloudBees Jenkins Platform ( highlighting Private SaaS Edition too ) can help with Pipelines to express and orchestrate a CI/CD process for **26;8027;TOOLONG applications to build-test-deploy with continuous feedback. - <p> About the Presenters : - <p> NOEL HEREDIA - Executive Director at Zivra- <p> Noel is deeply experienced in digital delivery engineering processes from master planning a transformation program through execution and post transformation operation . Noel works closely with Fortune 500 IT leaders to develop enterprise capability to play in the new digital economy. - <p> KISHORE BHATIA - Principal Solution Architect at CloudBees- <p> Kishore works on building custom frameworks with open source software and helping customers solve engineering problems around continuous delivery and DevOps at scale @ @ @ @ @ @ @ @ @ @ FinTech enterprise software and Cloud platforms. - 
@@21562694 @1562694/ <h> Using APM to Turbocharge Continuous Integration <p> 28 Jun 2016 <p> CloudBees- Speaker : - Brad Johnson , VP of Product- Marketing <p> Continuous Integration and Continuous Delivery have dramatically accelerated the rate of innovation within both large and small organizations " allowing teams to build and deploy software faster than ever- before. - <p> Yet , as release automation accelerates the volume , variety and velocity of application changes , an entirely new set of challenges have appeared . Let 's state the obvious here " DevOps , empowered by continuous integration and delivery , does n't merely end at deployment . In fact , the fun is just getting- started . <p> Part of the mission for today 's IT monitoring teams relates to tracking build numbers , status , success , failure and the rest . Yet , if 80% of application performance problems can be tied to some environmental change , clearly , there 's more to the- story . <p> In this webinar we 'll discuss these issues and more , along with some of the relevant capabilities supported via the integration of @ @ @ @ @ @ @ @ @ @ platform . Join us to hear first-hand how tying together APM and release automation can help identify and remediate changes that impact applications performance , turbocharging the software- pipeline 