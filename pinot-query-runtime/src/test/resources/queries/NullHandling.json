{
  "null_on_intermediate": {
    "tables": {
      "tbl1" : {
        "schema": [
          {"name": "strCol1", "type": "STRING"},
          {"name": "intCol1", "type": "INT"},
          {"name": "strCol2", "type": "STRING"}
        ],
        "inputs": [
          ["foo", 1, "foo"],
          ["bar", 2, "alice"]
        ]
      },
      "tbl2" : {
        "schema": [
          {"name": "strCol1", "type": "STRING"},
          {"name": "strCol2", "type": "STRING"},
          {"name": "intCol1", "type": "INT"},
          {"name": "doubleCol1", "type": "DOUBLE"},
          {"name": "boolCol1", "type":  "BOOLEAN"}
        ],
        "inputs": [
          ["foo", "bob", 3, 3.1416, true],
          ["alice", "alice", 4, 2.7183, false]
        ]
      }
    },
    "queries": [
      {
        "description": "LEFT JOIN and FILTER",
        "sql": "SELECT {tbl1}.strCol2, {tbl2}.doubleCol1 IS NULL OR {tbl1}.intCol1 > 3 AS boolFlag FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1"
      },
      {
        "description": "LEFT JOIN and TRANSFORM",
        "sql": "SELECT {tbl1}.strCol2, {tbl1}.intCol1 * {tbl2}.doubleCol1 + {tbl2}.intCol1 FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1"
      },
      {
        "description": "LEFT JOIN and AGGREGATE",
        "sql": "SELECT COUNT({tbl2}.intCol1), MIN({tbl2}.intCol1), MAX({tbl2}.doubleCol1), SUM({tbl2}.doubleCol1), AVG({tbl2}.doubleCol1), BOOL_AND({tbl2}.boolCol1), BOOL_OR({tbl2}.boolCol1) FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1"
      },
      {
        "description": "LEFT JOIN and GROUP BY",
        "sql": "SELECT {tbl2}.intCol1, COUNT(*) FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1 GROUP BY {tbl2}.intCol1"
      },
      {
        "description": "LEFT JOIN and GROUP BY",
        "sql": "SELECT {tbl1}.strCol2, {tbl2}.intCol1, COUNT(*) FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1 GROUP BY {tbl1}.strCol2, {tbl2}.intCol1"
      },
      {
        "description": "LEFT JOIN and GROUP BY with AGGREGATE",
        "sql": "SELECT {tbl1}.strCol2, COUNT({tbl2}.intCol1), MIN({tbl2}.intCol1), MAX({tbl2}.doubleCol1), SUM({tbl2}.doubleCol1), AVG({tbl2}.doubleCol1) FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1 GROUP BY {tbl1}.strCol2"
      },
      {
        "description": "LEFT JOIN and GROUP BY with AGGREGATE",
        "sql": "SELECT {tbl2}.strCol2, COUNT({tbl2}.intCol1), MIN({tbl2}.intCol1), MAX({tbl2}.doubleCol1), SUM({tbl2}.doubleCol1), AVG({tbl2}.doubleCol1) FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1 GROUP BY {tbl2}.strCol2"
      },
      {
        "description": "LEFT JOIN and SORT (by default, H2 treats null as the smallest value, which is different from Postgres, thus we don't test the default ordering)",
        "sql": "SELECT {tbl2}.doubleCol1 AS col FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1 ORDER BY col NULLS FIRST",
        "keepOutputRowOrder": true
      },
      {
        "description": "LEFT JOIN and GROUP BY with AGGREGATE AND SORT",
        "sql": "SELECT {tbl1}.strCol2, COUNT({tbl2}.intCol1), MIN({tbl2}.intCol1) AS minCol, MAX({tbl2}.doubleCol1) AS maxCol, SUM({tbl2}.doubleCol1) FROM {tbl1} LEFT OUTER JOIN {tbl2} ON {tbl1}.strCol1 = {tbl2}.strCol1 GROUP BY {tbl1}.strCol2 ORDER BY minCol DESC NULLS LAST, maxCol ASC NULLS LAST",
        "keepOutputRowOrder": true
      }
    ]
  },
  "table_level_null_handling": {
    "tables": {
      "tbl1" : {
        "schema": [
          {"name": "strCol1", "type": "STRING"},
          {"name": "intCol1", "type": "INT"},
          {"name": "nIntCol1", "type": "INT", "notNull": false},
          {"name": "nnIntCol1", "type": "INT", "notNull": true},
          {"name": "strCol2", "type": "STRING"},
          {"name": "nStrCol2", "type": "STRING", "notNull": false},
          {"name": "nnStrCol2", "type": "STRING", "notNull": true}
        ],
        "inputs": [
          ["foo", 1, 1, 1, "foo", "foo", "foo"],
          ["bar", 2, 2, 2, "alice", "alice", "alice"],
          ["alice", 2, 2, 2, null, null, null],
          [null, 4, 4, 4, null, null, null],
          ["bob", null, null, null, null, null, null]
        ]
      },
      "tbl2" : {
        "schema": [
          {"name": "strCol1", "type": "STRING"},
          {"name": "strCol2", "type": "STRING"},
          {"name": "intCol1", "type": "INT"},
          {"name": "doubleCol1", "type": "DOUBLE"}
        ],
        "inputs": [
          ["foo", "bob", 3, 3.1416],
          ["alice", "alice", 4, 2.7183],
          [null, null, null, null]
        ]
      },
      "tbl3": {
        "schema": [
          {"name": "strCol1", "type": "STRING"},
          {"name": "intCol1", "type": "INT"},
          {"name": "strCol2", "type": "STRING"}
        ],
        "inputs": [
          ["foo", 1, "foo"],
          ["bar", 2, "foo"]
        ]
      }
    },
    "queries": [
      {
        "description": "join 3 tables, mixed join conditions with null non-matching",
        "sql": "SET enableNullHandling=true; SELECT * FROM {tbl1} JOIN {tbl2} ON {tbl1}.intCol1 > {tbl2}.doubleCol1 JOIN {tbl3} ON {tbl1}.strCol1 = {tbl3}.strCol2"
      },
      {
        "description": "join 3 tables, mixed join condition with null matching",
        "sql": "SET enableNullHandling=true; SELECT * FROM {tbl1} JOIN {tbl2} ON {tbl1}.intCol1 != {tbl2}.doubleCol1 JOIN {tbl3} ON {tbl1}.strCol1 = {tbl3}.strCol2"
      },
      {
        "description": "join 2 tables, mixed join conditions of null matching or non-matching",
        "sql": "SET enableNullHandling=true; SELECT * FROM {tbl1} JOIN {tbl2} ON {tbl1}.intCol1 > {tbl2}.doubleCol1 AND {tbl1}.strCol1 = {tbl2}.strCol1"
      },

      {
        "description": "nIntCol1 IS NULL is always false",
        "comment": "When column level nullability is disabled, V2 considers all columns not nullable",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE nIntCol1 IS NULL",
        "h2Sql": "SELECT 0"
      },
      {
        "description": "nIntCol1 IS NOT NULL is always true",
        "comment": "When column level nullability is disabled, V2 considers all columns not nullable",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE nIntCol1 IS NOT NULL",
        "h2Sql": "SELECT count(*) FROM {tbl1}"
      },
      {
        "description": "nnIntCol1 IS NULL is always false",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE nnIntCol1 IS NULL",
        "h2Sql": "SELECT 0"
      },
      {
        "description": "nnIntCol1 IS NOT NULL is always true",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE nnIntCol1 IS NOT NULL",
        "h2Sql": "SELECT count(*) FROM {tbl1}"
      },
      {
        "description": "intCol1 IS NULL is always false",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE intCol1 IS NULL",
        "h2Sql": "SELECT 0"
      },
      {
        "description": "intCol1 IS NULL is always true",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE intCol1 IS NOT NULL",
        "h2Sql": "SELECT count(*) FROM {tbl1}"
      },

      {
        "description": "Leaf stages may return nulls",
        "sql": "SET enableNullHandling=true; SELECT nStrCol2 FROM {tbl1} WHERE nIntCol1 = 4 and nStrCol2 IS NOT NULL",
        "h2Sql": "SELECT null"
      },

      {
        "description": "When projected with enableNullHandling=true, intCol1 is considered null",
        "sql": "SET enableNullHandling=true; SELECT intCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT null FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=false, intCol1 is considered -2147483648",
        "sql": "SET enableNullHandling=false; SELECT intCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT -2147483648 FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=true, nIntCol1 is considered null",
        "sql": "SET enableNullHandling=true; SELECT nIntCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT null FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=false, nIntCol1 is considered -2147483648",
        "sql": "SET enableNullHandling=false; SELECT nIntCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT -2147483648 FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=true, nnIntCol1 is considered null",
        "sql": "SET enableNullHandling=true; SELECT nnIntCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT null FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=false, nnIntCol1 is considered -2147483648",
        "sql": "SET enableNullHandling=false; SELECT nnIntCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT -2147483648 FROM {tbl1} WHERE strCol1 = 'bob'"
      },

      {
        "description": "aggregate with null checkers",
        "sql": "SET enableNullHandling=true; SELECT SUM(intCol1) FROM {tbl1} WHERE intCol1 IS NOT NULL GROUP BY strCol2"
      },

      {
        "description": "null checks in aggregate are skipped in implicit nullable columns",
        "sql": "SET enableNullHandling=true; SELECT strCol2, COUNT(*) FROM {tbl1} WHERE intCol1 IS NOT NULL GROUP BY strCol2",
        "h2Sql": "SELECT strCol2, COUNT(*) FROM {tbl1} GROUP BY strCol2"
      },
      {
        "description": "null checks in aggregate are skipped in explicit nullable columns",
        "sql": "SET enableNullHandling=true; SELECT strCol2, COUNT(*) FROM {tbl1} WHERE nIntCol1 IS NOT NULL GROUP BY strCol2",
        "h2Sql": "SELECT strCol2, COUNT(*) FROM {tbl1} GROUP BY strCol2"
      },
      {
        "description": "null checks in aggregate are skipped in not nullable columns",
        "comment": "Given nnIntCol1 is not nullable, V2 removes the IS NOT NULL predicate",
        "sql": "SET enableNullHandling=true; SELECT strCol2, COUNT(*) FROM {tbl1} WHERE nnIntCol1 IS NOT NULL GROUP BY strCol2",
        "h2Sql": "SELECT strCol2, COUNT(*) FROM {tbl1} GROUP BY strCol2"
      },

      {
        "description": "aggregate with null checkers on key from group set are skipped on not nullable columns",
        "comment": "Given strCol2 is not explicitly nullable, V2 returns empty set",
        "sql": "SET enableNullHandling=true; SELECT COUNT(*) FROM {tbl1} WHERE nnStrCol2 IS NULL GROUP BY strCol2",
        "h2Sql": "SELECT 0 FROM {tbl1} WHERE false GROUP BY strCol2"
      },
      {
        "description": "aggregate with null checkers on key from group set are skipped on nullable columns",
        "sql": "SET enableNullHandling=true; SELECT COUNT(*) FROM {tbl1} WHERE nStrCol2 IS NULL GROUP BY nStrCol2",
        "h2Sql": "SELECT 0 FROM {tbl1} WHERE false GROUP BY strCol2"
      }
    ]
  },
  "column_level_null_handling": {
    "extraProps": {
      "enableColumnBasedNullHandling": true
    },
    "tables": {
      "tbl1" : {
        "schema": [
          {"name": "strCol1", "type": "STRING"},
          {"name": "intCol1", "type": "INT"},
          {"name": "nIntCol1", "type": "INT", "notNull": false},
          {"name": "nnIntCol1", "type": "INT", "notNull": true},
          {"name": "strCol2", "type": "STRING"},
          {"name": "nStrCol2", "type": "STRING", "notNull": false},
          {"name": "nnStrCol2", "type": "STRING", "notNull": true}
        ],
        "inputs": [
          ["foo", 1, 1, 1, "foo", "foo", "foo"],
          ["bar", 2, 2, 2, "alice", "alice", "alice"],
          ["alice", 2, 2, 2, null, null, null],
          [null, 4, 4, 4, null, null, null],
          ["bob", null, null, null, null, null, null]
        ]
      },
      "tbl2" : {
        "schema": [
          {"name": "strCol1", "type": "STRING"},
          {"name": "strCol2", "type": "STRING", "notNull": false},
          {"name": "intCol1", "type": "INT"},
          {"name": "doubleCol1", "type": "DOUBLE", "notNull": false}
        ],
        "inputs": [
          ["foo", "bob", 3, 3.1416],
          ["alice", "alice", 4, 2.7183],
          ["bob", null, 5, null]
        ]
      },
      "tbl3" : {
        "schema": [
          {"name": "strCol1", "type": "STRING"},
          {"name": "intCol1", "type": "INT"},
          {"name": "strCol2", "type": "STRING"}
        ],
        "inputs": [
          ["foo", 1, "foo"],
          ["bar", 2, "foo"]
        ]
      }
    },
    "queries": [
      {
        "description": "join 3 tables, mixed join conditions with null non-matching",
        "sql": "SET enableNullHandling=true; SELECT * FROM {tbl1} JOIN {tbl2} ON {tbl1}.intCol1 > {tbl2}.doubleCol1 JOIN {tbl3} ON {tbl1}.strCol1 = {tbl3}.strCol2"
      },
      {
        "description": "join 3 tables, mixed join condition with null matching",
        "sql": "SET enableNullHandling=true; SELECT * FROM {tbl1} JOIN {tbl2} ON {tbl1}.intCol1 != {tbl2}.doubleCol1 JOIN {tbl3} ON {tbl1}.strCol1 = {tbl3}.strCol2"
      },
      {
        "description": "join 2 tables, mixed join conditions of null matching or non-matching",
        "sql": "SET enableNullHandling=true; SELECT * FROM {tbl1} JOIN {tbl2} ON {tbl1}.intCol1 > {tbl2}.doubleCol1 AND {tbl1}.strCol1 = {tbl2}.strCol1"
      },
      {
        "description": "aggregate with null checkers",
        "sql": "SET enableNullHandling=true; SELECT SUM(intCol1) FROM {tbl1} WHERE intCol1 IS NOT NULL GROUP BY strCol2"
      },
      {
        "description": "aggregate with null checkers",
        "sql": "SET enableNullHandling=true; SELECT COUNT(*) FROM {tbl1} WHERE intCol1 IS NOT NULL GROUP BY strCol2"
      },
      {
        "description": "aggregate with null checkers on key from group set",
        "sql": "SET enableNullHandling=true; SELECT COUNT(*) FROM {tbl1} WHERE strCol2 IS NULL GROUP BY strCol2"
      },
      {
        "description": "select only with NULL handling",
        "sql": "SET enableNullHandling=true; SELECT strCol1, intCol1, nIntCol1, nnIntCol1, strCol2, nStrCol2, nnStrCol2 FROM {tbl1} WHERE nStrCol2 IS NULL AND nIntCol1 IS NOT NULL",
        "h2Sql": "SELECT strCol1, intCol1, nIntCol1, nnIntCol1, strCol2, nStrCol2, 'null' FROM {tbl1} WHERE nStrCol2 IS NULL AND nIntCol1 IS NOT NULL"
      },

      {
        "description": "Leaf stages should not return nulls",
        "comment": "Result is the string 'null', not the value null",
        "sql": "SET enableNullHandling=true; SELECT nnStrCol2 FROM {tbl1} WHERE nIntCol1 = 4",
        "h2Sql": "SELECT 'null'"
      },

      {
        "description": "nIntCol1 IS NULL is honored",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE nIntCol1 IS NULL"
      },
      {
        "description": "nIntCol1 IS NOT NULL is honored",
        "comment": "When column level nullability is disabled, V2 considers all columns not nullable",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE nIntCol1 IS NOT NULL"
      },
      {
        "description": "nnIntCol1 IS NULL is always false",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE nnIntCol1 IS NULL",
        "h2Sql": "SELECT 0"
      },
      {
        "description": "nnIntCol1 IS NOT NULL is always true",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE nnIntCol1 IS NOT NULL",
        "h2Sql": "SELECT count(*) FROM {tbl1}"
      },
      {
        "description": "(IS NULL) Column with no explicit nullability are treated as nullable",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE intCol1 IS NULL"
      },
      {
        "description": "(IS NOT NULL) Column with no explicit nullability are treated as nullable",
        "sql": "SET enableNullHandling=true; SELECT count(*) FROM {tbl1} WHERE intCol1 IS NOT NULL"
      },

      {
        "description": "aggregate with null checkers on key from group set are skipped on not nullable columns",
        "comment": "Given strCol2 is not explicitly nullable, V2 considers the where predicate always false",
        "sql": "SET enableNullHandling=true; SELECT COUNT(*) FROM {tbl1} WHERE nnStrCol2 IS NULL GROUP BY strCol2",
        "h2Sql": "SELECT COUNT(*) FROM {tbl1} WHERE false GROUP BY strCol2"
      },
      {
        "description": "aggregate with null checkers on key from group set are honored on nullable columns",
        "sql": "SET enableNullHandling=true; SELECT COUNT(*) FROM {tbl1} WHERE nStrCol2 IS NULL GROUP BY nStrCol2"
      },

      {
        "description": "null checks in aggregate are honored in implicit nullable columns",
        "sql": "SET enableNullHandling=true; SELECT strCol2, COUNT(*) FROM {tbl1} WHERE intCol1 IS NOT NULL GROUP BY strCol2"
      },
      {
        "description": "null checks in aggregate are honored in explicit nullable columns",
        "sql": "SET enableNullHandling=true; SELECT strCol2, COUNT(*) FROM {tbl1} WHERE nIntCol1 IS NOT NULL GROUP BY strCol2"
      },
      {
        "description": "null checks in aggregate are skipped in not nullable columns",
        "comment": "Given nnIntCol1 is not nullable, V2 removes the IS NOT NULL predicate",
        "sql": "SET enableNullHandling=true; SELECT strCol2, COUNT(*) FROM {tbl1} WHERE nnIntCol1 IS NOT NULL GROUP BY strCol2",
        "h2Sql": "SELECT strCol2, COUNT(*) FROM {tbl1} GROUP BY strCol2"
      },

      {
        "description": "When projected with enableNullHandling=true, intCol1 is considered null",
        "sql": "SET enableNullHandling=true; SELECT intCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT null FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=false, intCol1 is considered -2147483648",
        "sql": "SET enableNullHandling=false; SELECT intCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT -2147483648 FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=true, nIntCol1 is considered null",
        "sql": "SET enableNullHandling=true; SELECT nIntCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT null FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=false, nIntCol1 is considered -2147483648",
        "sql": "SET enableNullHandling=false; SELECT nIntCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT -2147483648 FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=true, nnIntCol1 is considered -2147483648",
        "sql": "SET enableNullHandling=true; SELECT nnIntCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT -2147483648 FROM {tbl1} WHERE strCol1 = 'bob'"
      },
      {
        "description": "When projected with enableNullHandling=false, nnIntCol1 is considered -2147483648",
        "sql": "SET enableNullHandling=false; SELECT nnIntCol1 FROM {tbl1} WHERE strCol1 = 'bob'",
        "h2Sql": "SELECT -2147483648 FROM {tbl1} WHERE strCol1 = 'bob'"
      }
    ]
  }
}
